/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// CertificateUpdate1 struct for CertificateUpdate1
type CertificateUpdate1 struct {
	Revoked *bool   `json:"revoked,omitempty"`
	Name    *string `json:"name,omitempty"`
}

// NewCertificateUpdate1 instantiates a new CertificateUpdate1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateUpdate1() *CertificateUpdate1 {
	this := CertificateUpdate1{}
	return &this
}

// NewCertificateUpdate1WithDefaults instantiates a new CertificateUpdate1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateUpdate1WithDefaults() *CertificateUpdate1 {
	this := CertificateUpdate1{}
	return &this
}

// GetRevoked returns the Revoked field value if set, zero value otherwise.
func (o *CertificateUpdate1) GetRevoked() bool {
	if o == nil || o.Revoked == nil {
		var ret bool
		return ret
	}
	return *o.Revoked
}

// GetRevokedOk returns a tuple with the Revoked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateUpdate1) GetRevokedOk() (*bool, bool) {
	if o == nil || o.Revoked == nil {
		return nil, false
	}
	return o.Revoked, true
}

// HasRevoked returns a boolean if a field has been set.
func (o *CertificateUpdate1) HasRevoked() bool {
	if o != nil && o.Revoked != nil {
		return true
	}

	return false
}

// SetRevoked gets a reference to the given bool and assigns it to the Revoked field.
func (o *CertificateUpdate1) SetRevoked(v bool) {
	o.Revoked = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CertificateUpdate1) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateUpdate1) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CertificateUpdate1) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CertificateUpdate1) SetName(v string) {
	o.Name = &v
}

func (o CertificateUpdate1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Revoked != nil {
		toSerialize["revoked"] = o.Revoked
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCertificateUpdate1 struct {
	value *CertificateUpdate1
	isSet bool
}

func (v NullableCertificateUpdate1) Get() *CertificateUpdate1 {
	return v.value
}

func (v *NullableCertificateUpdate1) Set(val *CertificateUpdate1) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateUpdate1) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateUpdate1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateUpdate1(val *CertificateUpdate1) *NullableCertificateUpdate1 {
	return &NullableCertificateUpdate1{value: val, isSet: true}
}

func (v NullableCertificateUpdate1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateUpdate1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
