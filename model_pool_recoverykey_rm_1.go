/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// PoolRecoverykeyRm1 struct for PoolRecoverykeyRm1
type PoolRecoverykeyRm1 struct {
	AdminPassword *string `json:"admin_password,omitempty"`
}

// NewPoolRecoverykeyRm1 instantiates a new PoolRecoverykeyRm1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolRecoverykeyRm1() *PoolRecoverykeyRm1 {
	this := PoolRecoverykeyRm1{}
	return &this
}

// NewPoolRecoverykeyRm1WithDefaults instantiates a new PoolRecoverykeyRm1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolRecoverykeyRm1WithDefaults() *PoolRecoverykeyRm1 {
	this := PoolRecoverykeyRm1{}
	return &this
}

// GetAdminPassword returns the AdminPassword field value if set, zero value otherwise.
func (o *PoolRecoverykeyRm1) GetAdminPassword() string {
	if o == nil || o.AdminPassword == nil {
		var ret string
		return ret
	}
	return *o.AdminPassword
}

// GetAdminPasswordOk returns a tuple with the AdminPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolRecoverykeyRm1) GetAdminPasswordOk() (*string, bool) {
	if o == nil || o.AdminPassword == nil {
		return nil, false
	}
	return o.AdminPassword, true
}

// HasAdminPassword returns a boolean if a field has been set.
func (o *PoolRecoverykeyRm1) HasAdminPassword() bool {
	if o != nil && o.AdminPassword != nil {
		return true
	}

	return false
}

// SetAdminPassword gets a reference to the given string and assigns it to the AdminPassword field.
func (o *PoolRecoverykeyRm1) SetAdminPassword(v string) {
	o.AdminPassword = &v
}

func (o PoolRecoverykeyRm1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminPassword != nil {
		toSerialize["admin_password"] = o.AdminPassword
	}
	return json.Marshal(toSerialize)
}

type NullablePoolRecoverykeyRm1 struct {
	value *PoolRecoverykeyRm1
	isSet bool
}

func (v NullablePoolRecoverykeyRm1) Get() *PoolRecoverykeyRm1 {
	return v.value
}

func (v *NullablePoolRecoverykeyRm1) Set(val *PoolRecoverykeyRm1) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolRecoverykeyRm1) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolRecoverykeyRm1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolRecoverykeyRm1(val *PoolRecoverykeyRm1) *NullablePoolRecoverykeyRm1 {
	return &NullablePoolRecoverykeyRm1{value: val, isSet: true}
}

func (v NullablePoolRecoverykeyRm1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolRecoverykeyRm1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
