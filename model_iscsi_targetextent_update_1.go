/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// IscsiTargetextentUpdate1 struct for IscsiTargetextentUpdate1
type IscsiTargetextentUpdate1 struct {
	Target *int32 `json:"target,omitempty"`
	Lunid  *int32 `json:"lunid,omitempty"`
	Extent *int32 `json:"extent,omitempty"`
}

// NewIscsiTargetextentUpdate1 instantiates a new IscsiTargetextentUpdate1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIscsiTargetextentUpdate1() *IscsiTargetextentUpdate1 {
	this := IscsiTargetextentUpdate1{}
	return &this
}

// NewIscsiTargetextentUpdate1WithDefaults instantiates a new IscsiTargetextentUpdate1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIscsiTargetextentUpdate1WithDefaults() *IscsiTargetextentUpdate1 {
	this := IscsiTargetextentUpdate1{}
	return &this
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *IscsiTargetextentUpdate1) GetTarget() int32 {
	if o == nil || o.Target == nil {
		var ret int32
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiTargetextentUpdate1) GetTargetOk() (*int32, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *IscsiTargetextentUpdate1) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given int32 and assigns it to the Target field.
func (o *IscsiTargetextentUpdate1) SetTarget(v int32) {
	o.Target = &v
}

// GetLunid returns the Lunid field value if set, zero value otherwise.
func (o *IscsiTargetextentUpdate1) GetLunid() int32 {
	if o == nil || o.Lunid == nil {
		var ret int32
		return ret
	}
	return *o.Lunid
}

// GetLunidOk returns a tuple with the Lunid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiTargetextentUpdate1) GetLunidOk() (*int32, bool) {
	if o == nil || o.Lunid == nil {
		return nil, false
	}
	return o.Lunid, true
}

// HasLunid returns a boolean if a field has been set.
func (o *IscsiTargetextentUpdate1) HasLunid() bool {
	if o != nil && o.Lunid != nil {
		return true
	}

	return false
}

// SetLunid gets a reference to the given int32 and assigns it to the Lunid field.
func (o *IscsiTargetextentUpdate1) SetLunid(v int32) {
	o.Lunid = &v
}

// GetExtent returns the Extent field value if set, zero value otherwise.
func (o *IscsiTargetextentUpdate1) GetExtent() int32 {
	if o == nil || o.Extent == nil {
		var ret int32
		return ret
	}
	return *o.Extent
}

// GetExtentOk returns a tuple with the Extent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiTargetextentUpdate1) GetExtentOk() (*int32, bool) {
	if o == nil || o.Extent == nil {
		return nil, false
	}
	return o.Extent, true
}

// HasExtent returns a boolean if a field has been set.
func (o *IscsiTargetextentUpdate1) HasExtent() bool {
	if o != nil && o.Extent != nil {
		return true
	}

	return false
}

// SetExtent gets a reference to the given int32 and assigns it to the Extent field.
func (o *IscsiTargetextentUpdate1) SetExtent(v int32) {
	o.Extent = &v
}

func (o IscsiTargetextentUpdate1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.Lunid != nil {
		toSerialize["lunid"] = o.Lunid
	}
	if o.Extent != nil {
		toSerialize["extent"] = o.Extent
	}
	return json.Marshal(toSerialize)
}

type NullableIscsiTargetextentUpdate1 struct {
	value *IscsiTargetextentUpdate1
	isSet bool
}

func (v NullableIscsiTargetextentUpdate1) Get() *IscsiTargetextentUpdate1 {
	return v.value
}

func (v *NullableIscsiTargetextentUpdate1) Set(val *IscsiTargetextentUpdate1) {
	v.value = val
	v.isSet = true
}

func (v NullableIscsiTargetextentUpdate1) IsSet() bool {
	return v.isSet
}

func (v *NullableIscsiTargetextentUpdate1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIscsiTargetextentUpdate1(val *IscsiTargetextentUpdate1) *NullableIscsiTargetextentUpdate1 {
	return &NullableIscsiTargetextentUpdate1{value: val, isSet: true}
}

func (v NullableIscsiTargetextentUpdate1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIscsiTargetextentUpdate1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
