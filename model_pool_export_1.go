/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// PoolExport1 struct for PoolExport1
type PoolExport1 struct {
	Cascade         *bool `json:"cascade,omitempty"`
	RestartServices *bool `json:"restart_services,omitempty"`
	Destroy         *bool `json:"destroy,omitempty"`
}

// NewPoolExport1 instantiates a new PoolExport1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolExport1() *PoolExport1 {
	this := PoolExport1{}
	return &this
}

// NewPoolExport1WithDefaults instantiates a new PoolExport1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolExport1WithDefaults() *PoolExport1 {
	this := PoolExport1{}
	return &this
}

// GetCascade returns the Cascade field value if set, zero value otherwise.
func (o *PoolExport1) GetCascade() bool {
	if o == nil || o.Cascade == nil {
		var ret bool
		return ret
	}
	return *o.Cascade
}

// GetCascadeOk returns a tuple with the Cascade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolExport1) GetCascadeOk() (*bool, bool) {
	if o == nil || o.Cascade == nil {
		return nil, false
	}
	return o.Cascade, true
}

// HasCascade returns a boolean if a field has been set.
func (o *PoolExport1) HasCascade() bool {
	if o != nil && o.Cascade != nil {
		return true
	}

	return false
}

// SetCascade gets a reference to the given bool and assigns it to the Cascade field.
func (o *PoolExport1) SetCascade(v bool) {
	o.Cascade = &v
}

// GetRestartServices returns the RestartServices field value if set, zero value otherwise.
func (o *PoolExport1) GetRestartServices() bool {
	if o == nil || o.RestartServices == nil {
		var ret bool
		return ret
	}
	return *o.RestartServices
}

// GetRestartServicesOk returns a tuple with the RestartServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolExport1) GetRestartServicesOk() (*bool, bool) {
	if o == nil || o.RestartServices == nil {
		return nil, false
	}
	return o.RestartServices, true
}

// HasRestartServices returns a boolean if a field has been set.
func (o *PoolExport1) HasRestartServices() bool {
	if o != nil && o.RestartServices != nil {
		return true
	}

	return false
}

// SetRestartServices gets a reference to the given bool and assigns it to the RestartServices field.
func (o *PoolExport1) SetRestartServices(v bool) {
	o.RestartServices = &v
}

// GetDestroy returns the Destroy field value if set, zero value otherwise.
func (o *PoolExport1) GetDestroy() bool {
	if o == nil || o.Destroy == nil {
		var ret bool
		return ret
	}
	return *o.Destroy
}

// GetDestroyOk returns a tuple with the Destroy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolExport1) GetDestroyOk() (*bool, bool) {
	if o == nil || o.Destroy == nil {
		return nil, false
	}
	return o.Destroy, true
}

// HasDestroy returns a boolean if a field has been set.
func (o *PoolExport1) HasDestroy() bool {
	if o != nil && o.Destroy != nil {
		return true
	}

	return false
}

// SetDestroy gets a reference to the given bool and assigns it to the Destroy field.
func (o *PoolExport1) SetDestroy(v bool) {
	o.Destroy = &v
}

func (o PoolExport1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cascade != nil {
		toSerialize["cascade"] = o.Cascade
	}
	if o.RestartServices != nil {
		toSerialize["restart_services"] = o.RestartServices
	}
	if o.Destroy != nil {
		toSerialize["destroy"] = o.Destroy
	}
	return json.Marshal(toSerialize)
}

type NullablePoolExport1 struct {
	value *PoolExport1
	isSet bool
}

func (v NullablePoolExport1) Get() *PoolExport1 {
	return v.value
}

func (v *NullablePoolExport1) Set(val *PoolExport1) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolExport1) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolExport1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolExport1(val *PoolExport1) *NullablePoolExport1 {
	return &NullablePoolExport1{value: val, isSet: true}
}

func (v NullablePoolExport1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolExport1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
