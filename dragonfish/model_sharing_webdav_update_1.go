/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// SharingWebdavUpdate1 struct for SharingWebdavUpdate1
type SharingWebdavUpdate1 struct {
	Perm    *bool   `json:"perm,omitempty"`
	Ro      *bool   `json:"ro,omitempty"`
	Comment *string `json:"comment,omitempty"`
	Name    *string `json:"name,omitempty"`
	Path    *string `json:"path,omitempty"`
	Enabled *bool   `json:"enabled,omitempty"`
}

// NewSharingWebdavUpdate1 instantiates a new SharingWebdavUpdate1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharingWebdavUpdate1() *SharingWebdavUpdate1 {
	this := SharingWebdavUpdate1{}
	return &this
}

// NewSharingWebdavUpdate1WithDefaults instantiates a new SharingWebdavUpdate1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharingWebdavUpdate1WithDefaults() *SharingWebdavUpdate1 {
	this := SharingWebdavUpdate1{}
	return &this
}

// GetPerm returns the Perm field value if set, zero value otherwise.
func (o *SharingWebdavUpdate1) GetPerm() bool {
	if o == nil || o.Perm == nil {
		var ret bool
		return ret
	}
	return *o.Perm
}

// GetPermOk returns a tuple with the Perm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharingWebdavUpdate1) GetPermOk() (*bool, bool) {
	if o == nil || o.Perm == nil {
		return nil, false
	}
	return o.Perm, true
}

// HasPerm returns a boolean if a field has been set.
func (o *SharingWebdavUpdate1) HasPerm() bool {
	if o != nil && o.Perm != nil {
		return true
	}

	return false
}

// SetPerm gets a reference to the given bool and assigns it to the Perm field.
func (o *SharingWebdavUpdate1) SetPerm(v bool) {
	o.Perm = &v
}

// GetRo returns the Ro field value if set, zero value otherwise.
func (o *SharingWebdavUpdate1) GetRo() bool {
	if o == nil || o.Ro == nil {
		var ret bool
		return ret
	}
	return *o.Ro
}

// GetRoOk returns a tuple with the Ro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharingWebdavUpdate1) GetRoOk() (*bool, bool) {
	if o == nil || o.Ro == nil {
		return nil, false
	}
	return o.Ro, true
}

// HasRo returns a boolean if a field has been set.
func (o *SharingWebdavUpdate1) HasRo() bool {
	if o != nil && o.Ro != nil {
		return true
	}

	return false
}

// SetRo gets a reference to the given bool and assigns it to the Ro field.
func (o *SharingWebdavUpdate1) SetRo(v bool) {
	o.Ro = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *SharingWebdavUpdate1) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharingWebdavUpdate1) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *SharingWebdavUpdate1) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *SharingWebdavUpdate1) SetComment(v string) {
	o.Comment = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SharingWebdavUpdate1) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharingWebdavUpdate1) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SharingWebdavUpdate1) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SharingWebdavUpdate1) SetName(v string) {
	o.Name = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SharingWebdavUpdate1) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharingWebdavUpdate1) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SharingWebdavUpdate1) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *SharingWebdavUpdate1) SetPath(v string) {
	o.Path = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *SharingWebdavUpdate1) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharingWebdavUpdate1) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SharingWebdavUpdate1) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *SharingWebdavUpdate1) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o SharingWebdavUpdate1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Perm != nil {
		toSerialize["perm"] = o.Perm
	}
	if o.Ro != nil {
		toSerialize["ro"] = o.Ro
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableSharingWebdavUpdate1 struct {
	value *SharingWebdavUpdate1
	isSet bool
}

func (v NullableSharingWebdavUpdate1) Get() *SharingWebdavUpdate1 {
	return v.value
}

func (v *NullableSharingWebdavUpdate1) Set(val *SharingWebdavUpdate1) {
	v.value = val
	v.isSet = true
}

func (v NullableSharingWebdavUpdate1) IsSet() bool {
	return v.isSet
}

func (v *NullableSharingWebdavUpdate1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharingWebdavUpdate1(val *SharingWebdavUpdate1) *NullableSharingWebdavUpdate1 {
	return &NullableSharingWebdavUpdate1{value: val, isSet: true}
}

func (v NullableSharingWebdavUpdate1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharingWebdavUpdate1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
