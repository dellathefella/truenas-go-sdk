/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// AfpUpdate0 struct for AfpUpdate0
type AfpUpdate0 struct {
	Guest            *bool    `json:"guest,omitempty"`
	GuestUser        *string  `json:"guest_user,omitempty"`
	Bindip           []string `json:"bindip,omitempty"`
	ConnectionsLimit *int32   `json:"connections_limit,omitempty"`
	Dbpath           *string  `json:"dbpath,omitempty"`
	GlobalAux        *string  `json:"global_aux,omitempty"`
	MapAcls          *string  `json:"map_acls,omitempty"`
	ChmodRequest     *string  `json:"chmod_request,omitempty"`
	Loglevel         *string  `json:"loglevel,omitempty"`
}

// NewAfpUpdate0 instantiates a new AfpUpdate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAfpUpdate0() *AfpUpdate0 {
	this := AfpUpdate0{}
	return &this
}

// NewAfpUpdate0WithDefaults instantiates a new AfpUpdate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAfpUpdate0WithDefaults() *AfpUpdate0 {
	this := AfpUpdate0{}
	return &this
}

// GetGuest returns the Guest field value if set, zero value otherwise.
func (o *AfpUpdate0) GetGuest() bool {
	if o == nil || o.Guest == nil {
		var ret bool
		return ret
	}
	return *o.Guest
}

// GetGuestOk returns a tuple with the Guest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AfpUpdate0) GetGuestOk() (*bool, bool) {
	if o == nil || o.Guest == nil {
		return nil, false
	}
	return o.Guest, true
}

// HasGuest returns a boolean if a field has been set.
func (o *AfpUpdate0) HasGuest() bool {
	if o != nil && o.Guest != nil {
		return true
	}

	return false
}

// SetGuest gets a reference to the given bool and assigns it to the Guest field.
func (o *AfpUpdate0) SetGuest(v bool) {
	o.Guest = &v
}

// GetGuestUser returns the GuestUser field value if set, zero value otherwise.
func (o *AfpUpdate0) GetGuestUser() string {
	if o == nil || o.GuestUser == nil {
		var ret string
		return ret
	}
	return *o.GuestUser
}

// GetGuestUserOk returns a tuple with the GuestUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AfpUpdate0) GetGuestUserOk() (*string, bool) {
	if o == nil || o.GuestUser == nil {
		return nil, false
	}
	return o.GuestUser, true
}

// HasGuestUser returns a boolean if a field has been set.
func (o *AfpUpdate0) HasGuestUser() bool {
	if o != nil && o.GuestUser != nil {
		return true
	}

	return false
}

// SetGuestUser gets a reference to the given string and assigns it to the GuestUser field.
func (o *AfpUpdate0) SetGuestUser(v string) {
	o.GuestUser = &v
}

// GetBindip returns the Bindip field value if set, zero value otherwise.
func (o *AfpUpdate0) GetBindip() []string {
	if o == nil || o.Bindip == nil {
		var ret []string
		return ret
	}
	return o.Bindip
}

// GetBindipOk returns a tuple with the Bindip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AfpUpdate0) GetBindipOk() ([]string, bool) {
	if o == nil || o.Bindip == nil {
		return nil, false
	}
	return o.Bindip, true
}

// HasBindip returns a boolean if a field has been set.
func (o *AfpUpdate0) HasBindip() bool {
	if o != nil && o.Bindip != nil {
		return true
	}

	return false
}

// SetBindip gets a reference to the given []string and assigns it to the Bindip field.
func (o *AfpUpdate0) SetBindip(v []string) {
	o.Bindip = v
}

// GetConnectionsLimit returns the ConnectionsLimit field value if set, zero value otherwise.
func (o *AfpUpdate0) GetConnectionsLimit() int32 {
	if o == nil || o.ConnectionsLimit == nil {
		var ret int32
		return ret
	}
	return *o.ConnectionsLimit
}

// GetConnectionsLimitOk returns a tuple with the ConnectionsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AfpUpdate0) GetConnectionsLimitOk() (*int32, bool) {
	if o == nil || o.ConnectionsLimit == nil {
		return nil, false
	}
	return o.ConnectionsLimit, true
}

// HasConnectionsLimit returns a boolean if a field has been set.
func (o *AfpUpdate0) HasConnectionsLimit() bool {
	if o != nil && o.ConnectionsLimit != nil {
		return true
	}

	return false
}

// SetConnectionsLimit gets a reference to the given int32 and assigns it to the ConnectionsLimit field.
func (o *AfpUpdate0) SetConnectionsLimit(v int32) {
	o.ConnectionsLimit = &v
}

// GetDbpath returns the Dbpath field value if set, zero value otherwise.
func (o *AfpUpdate0) GetDbpath() string {
	if o == nil || o.Dbpath == nil {
		var ret string
		return ret
	}
	return *o.Dbpath
}

// GetDbpathOk returns a tuple with the Dbpath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AfpUpdate0) GetDbpathOk() (*string, bool) {
	if o == nil || o.Dbpath == nil {
		return nil, false
	}
	return o.Dbpath, true
}

// HasDbpath returns a boolean if a field has been set.
func (o *AfpUpdate0) HasDbpath() bool {
	if o != nil && o.Dbpath != nil {
		return true
	}

	return false
}

// SetDbpath gets a reference to the given string and assigns it to the Dbpath field.
func (o *AfpUpdate0) SetDbpath(v string) {
	o.Dbpath = &v
}

// GetGlobalAux returns the GlobalAux field value if set, zero value otherwise.
func (o *AfpUpdate0) GetGlobalAux() string {
	if o == nil || o.GlobalAux == nil {
		var ret string
		return ret
	}
	return *o.GlobalAux
}

// GetGlobalAuxOk returns a tuple with the GlobalAux field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AfpUpdate0) GetGlobalAuxOk() (*string, bool) {
	if o == nil || o.GlobalAux == nil {
		return nil, false
	}
	return o.GlobalAux, true
}

// HasGlobalAux returns a boolean if a field has been set.
func (o *AfpUpdate0) HasGlobalAux() bool {
	if o != nil && o.GlobalAux != nil {
		return true
	}

	return false
}

// SetGlobalAux gets a reference to the given string and assigns it to the GlobalAux field.
func (o *AfpUpdate0) SetGlobalAux(v string) {
	o.GlobalAux = &v
}

// GetMapAcls returns the MapAcls field value if set, zero value otherwise.
func (o *AfpUpdate0) GetMapAcls() string {
	if o == nil || o.MapAcls == nil {
		var ret string
		return ret
	}
	return *o.MapAcls
}

// GetMapAclsOk returns a tuple with the MapAcls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AfpUpdate0) GetMapAclsOk() (*string, bool) {
	if o == nil || o.MapAcls == nil {
		return nil, false
	}
	return o.MapAcls, true
}

// HasMapAcls returns a boolean if a field has been set.
func (o *AfpUpdate0) HasMapAcls() bool {
	if o != nil && o.MapAcls != nil {
		return true
	}

	return false
}

// SetMapAcls gets a reference to the given string and assigns it to the MapAcls field.
func (o *AfpUpdate0) SetMapAcls(v string) {
	o.MapAcls = &v
}

// GetChmodRequest returns the ChmodRequest field value if set, zero value otherwise.
func (o *AfpUpdate0) GetChmodRequest() string {
	if o == nil || o.ChmodRequest == nil {
		var ret string
		return ret
	}
	return *o.ChmodRequest
}

// GetChmodRequestOk returns a tuple with the ChmodRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AfpUpdate0) GetChmodRequestOk() (*string, bool) {
	if o == nil || o.ChmodRequest == nil {
		return nil, false
	}
	return o.ChmodRequest, true
}

// HasChmodRequest returns a boolean if a field has been set.
func (o *AfpUpdate0) HasChmodRequest() bool {
	if o != nil && o.ChmodRequest != nil {
		return true
	}

	return false
}

// SetChmodRequest gets a reference to the given string and assigns it to the ChmodRequest field.
func (o *AfpUpdate0) SetChmodRequest(v string) {
	o.ChmodRequest = &v
}

// GetLoglevel returns the Loglevel field value if set, zero value otherwise.
func (o *AfpUpdate0) GetLoglevel() string {
	if o == nil || o.Loglevel == nil {
		var ret string
		return ret
	}
	return *o.Loglevel
}

// GetLoglevelOk returns a tuple with the Loglevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AfpUpdate0) GetLoglevelOk() (*string, bool) {
	if o == nil || o.Loglevel == nil {
		return nil, false
	}
	return o.Loglevel, true
}

// HasLoglevel returns a boolean if a field has been set.
func (o *AfpUpdate0) HasLoglevel() bool {
	if o != nil && o.Loglevel != nil {
		return true
	}

	return false
}

// SetLoglevel gets a reference to the given string and assigns it to the Loglevel field.
func (o *AfpUpdate0) SetLoglevel(v string) {
	o.Loglevel = &v
}

func (o AfpUpdate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Guest != nil {
		toSerialize["guest"] = o.Guest
	}
	if o.GuestUser != nil {
		toSerialize["guest_user"] = o.GuestUser
	}
	if o.Bindip != nil {
		toSerialize["bindip"] = o.Bindip
	}
	if o.ConnectionsLimit != nil {
		toSerialize["connections_limit"] = o.ConnectionsLimit
	}
	if o.Dbpath != nil {
		toSerialize["dbpath"] = o.Dbpath
	}
	if o.GlobalAux != nil {
		toSerialize["global_aux"] = o.GlobalAux
	}
	if o.MapAcls != nil {
		toSerialize["map_acls"] = o.MapAcls
	}
	if o.ChmodRequest != nil {
		toSerialize["chmod_request"] = o.ChmodRequest
	}
	if o.Loglevel != nil {
		toSerialize["loglevel"] = o.Loglevel
	}
	return json.Marshal(toSerialize)
}

type NullableAfpUpdate0 struct {
	value *AfpUpdate0
	isSet bool
}

func (v NullableAfpUpdate0) Get() *AfpUpdate0 {
	return v.value
}

func (v *NullableAfpUpdate0) Set(val *AfpUpdate0) {
	v.value = val
	v.isSet = true
}

func (v NullableAfpUpdate0) IsSet() bool {
	return v.isSet
}

func (v *NullableAfpUpdate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAfpUpdate0(val *AfpUpdate0) *NullableAfpUpdate0 {
	return &NullableAfpUpdate0{value: val, isSet: true}
}

func (v NullableAfpUpdate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAfpUpdate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
