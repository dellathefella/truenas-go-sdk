/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// PoolExpand1Geli struct for PoolExpand1Geli
type PoolExpand1Geli struct {
	Passphrase *string `json:"passphrase,omitempty"`
}

// NewPoolExpand1Geli instantiates a new PoolExpand1Geli object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolExpand1Geli() *PoolExpand1Geli {
	this := PoolExpand1Geli{}
	return &this
}

// NewPoolExpand1GeliWithDefaults instantiates a new PoolExpand1Geli object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolExpand1GeliWithDefaults() *PoolExpand1Geli {
	this := PoolExpand1Geli{}
	return &this
}

// GetPassphrase returns the Passphrase field value if set, zero value otherwise.
func (o *PoolExpand1Geli) GetPassphrase() string {
	if o == nil || o.Passphrase == nil {
		var ret string
		return ret
	}
	return *o.Passphrase
}

// GetPassphraseOk returns a tuple with the Passphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolExpand1Geli) GetPassphraseOk() (*string, bool) {
	if o == nil || o.Passphrase == nil {
		return nil, false
	}
	return o.Passphrase, true
}

// HasPassphrase returns a boolean if a field has been set.
func (o *PoolExpand1Geli) HasPassphrase() bool {
	if o != nil && o.Passphrase != nil {
		return true
	}

	return false
}

// SetPassphrase gets a reference to the given string and assigns it to the Passphrase field.
func (o *PoolExpand1Geli) SetPassphrase(v string) {
	o.Passphrase = &v
}

func (o PoolExpand1Geli) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Passphrase != nil {
		toSerialize["passphrase"] = o.Passphrase
	}
	return json.Marshal(toSerialize)
}

type NullablePoolExpand1Geli struct {
	value *PoolExpand1Geli
	isSet bool
}

func (v NullablePoolExpand1Geli) Get() *PoolExpand1Geli {
	return v.value
}

func (v *NullablePoolExpand1Geli) Set(val *PoolExpand1Geli) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolExpand1Geli) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolExpand1Geli) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolExpand1Geli(val *PoolExpand1Geli) *NullablePoolExpand1Geli {
	return &NullablePoolExpand1Geli{value: val, isSet: true}
}

func (v NullablePoolExpand1Geli) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolExpand1Geli) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
