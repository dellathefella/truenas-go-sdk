/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// NetworkConfigurationUpdate0 struct for NetworkConfigurationUpdate0
type NetworkConfigurationUpdate0 struct {
	Hostname            *string                                         `json:"hostname,omitempty"`
	HostnameB           *string                                         `json:"hostname_b,omitempty"`
	HostnameVirtual     *string                                         `json:"hostname_virtual,omitempty"`
	Domain              *string                                         `json:"domain,omitempty"`
	Domains             []string                                        `json:"domains,omitempty"`
	ServiceAnnouncement *NetworkConfigurationUpdate0ServiceAnnouncement `json:"service_announcement,omitempty"`
	Ipv4gateway         *string                                         `json:"ipv4gateway,omitempty"`
	Ipv6gateway         *string                                         `json:"ipv6gateway,omitempty"`
	Nameserver1         *string                                         `json:"nameserver1,omitempty"`
	Nameserver2         *string                                         `json:"nameserver2,omitempty"`
	Nameserver3         *string                                         `json:"nameserver3,omitempty"`
	Httpproxy           *string                                         `json:"httpproxy,omitempty"`
	NetwaitEnabled      *bool                                           `json:"netwait_enabled,omitempty"`
	NetwaitIp           []string                                        `json:"netwait_ip,omitempty"`
	Hosts               *string                                         `json:"hosts,omitempty"`
}

// NewNetworkConfigurationUpdate0 instantiates a new NetworkConfigurationUpdate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkConfigurationUpdate0() *NetworkConfigurationUpdate0 {
	this := NetworkConfigurationUpdate0{}
	return &this
}

// NewNetworkConfigurationUpdate0WithDefaults instantiates a new NetworkConfigurationUpdate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkConfigurationUpdate0WithDefaults() *NetworkConfigurationUpdate0 {
	this := NetworkConfigurationUpdate0{}
	return &this
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *NetworkConfigurationUpdate0) SetHostname(v string) {
	o.Hostname = &v
}

// GetHostnameB returns the HostnameB field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetHostnameB() string {
	if o == nil || o.HostnameB == nil {
		var ret string
		return ret
	}
	return *o.HostnameB
}

// GetHostnameBOk returns a tuple with the HostnameB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetHostnameBOk() (*string, bool) {
	if o == nil || o.HostnameB == nil {
		return nil, false
	}
	return o.HostnameB, true
}

// HasHostnameB returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasHostnameB() bool {
	if o != nil && o.HostnameB != nil {
		return true
	}

	return false
}

// SetHostnameB gets a reference to the given string and assigns it to the HostnameB field.
func (o *NetworkConfigurationUpdate0) SetHostnameB(v string) {
	o.HostnameB = &v
}

// GetHostnameVirtual returns the HostnameVirtual field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetHostnameVirtual() string {
	if o == nil || o.HostnameVirtual == nil {
		var ret string
		return ret
	}
	return *o.HostnameVirtual
}

// GetHostnameVirtualOk returns a tuple with the HostnameVirtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetHostnameVirtualOk() (*string, bool) {
	if o == nil || o.HostnameVirtual == nil {
		return nil, false
	}
	return o.HostnameVirtual, true
}

// HasHostnameVirtual returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasHostnameVirtual() bool {
	if o != nil && o.HostnameVirtual != nil {
		return true
	}

	return false
}

// SetHostnameVirtual gets a reference to the given string and assigns it to the HostnameVirtual field.
func (o *NetworkConfigurationUpdate0) SetHostnameVirtual(v string) {
	o.HostnameVirtual = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *NetworkConfigurationUpdate0) SetDomain(v string) {
	o.Domain = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetDomains() []string {
	if o == nil || o.Domains == nil {
		var ret []string
		return ret
	}
	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetDomainsOk() ([]string, bool) {
	if o == nil || o.Domains == nil {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasDomains() bool {
	if o != nil && o.Domains != nil {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []string and assigns it to the Domains field.
func (o *NetworkConfigurationUpdate0) SetDomains(v []string) {
	o.Domains = v
}

// GetServiceAnnouncement returns the ServiceAnnouncement field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetServiceAnnouncement() NetworkConfigurationUpdate0ServiceAnnouncement {
	if o == nil || o.ServiceAnnouncement == nil {
		var ret NetworkConfigurationUpdate0ServiceAnnouncement
		return ret
	}
	return *o.ServiceAnnouncement
}

// GetServiceAnnouncementOk returns a tuple with the ServiceAnnouncement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetServiceAnnouncementOk() (*NetworkConfigurationUpdate0ServiceAnnouncement, bool) {
	if o == nil || o.ServiceAnnouncement == nil {
		return nil, false
	}
	return o.ServiceAnnouncement, true
}

// HasServiceAnnouncement returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasServiceAnnouncement() bool {
	if o != nil && o.ServiceAnnouncement != nil {
		return true
	}

	return false
}

// SetServiceAnnouncement gets a reference to the given NetworkConfigurationUpdate0ServiceAnnouncement and assigns it to the ServiceAnnouncement field.
func (o *NetworkConfigurationUpdate0) SetServiceAnnouncement(v NetworkConfigurationUpdate0ServiceAnnouncement) {
	o.ServiceAnnouncement = &v
}

// GetIpv4gateway returns the Ipv4gateway field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetIpv4gateway() string {
	if o == nil || o.Ipv4gateway == nil {
		var ret string
		return ret
	}
	return *o.Ipv4gateway
}

// GetIpv4gatewayOk returns a tuple with the Ipv4gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetIpv4gatewayOk() (*string, bool) {
	if o == nil || o.Ipv4gateway == nil {
		return nil, false
	}
	return o.Ipv4gateway, true
}

// HasIpv4gateway returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasIpv4gateway() bool {
	if o != nil && o.Ipv4gateway != nil {
		return true
	}

	return false
}

// SetIpv4gateway gets a reference to the given string and assigns it to the Ipv4gateway field.
func (o *NetworkConfigurationUpdate0) SetIpv4gateway(v string) {
	o.Ipv4gateway = &v
}

// GetIpv6gateway returns the Ipv6gateway field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetIpv6gateway() string {
	if o == nil || o.Ipv6gateway == nil {
		var ret string
		return ret
	}
	return *o.Ipv6gateway
}

// GetIpv6gatewayOk returns a tuple with the Ipv6gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetIpv6gatewayOk() (*string, bool) {
	if o == nil || o.Ipv6gateway == nil {
		return nil, false
	}
	return o.Ipv6gateway, true
}

// HasIpv6gateway returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasIpv6gateway() bool {
	if o != nil && o.Ipv6gateway != nil {
		return true
	}

	return false
}

// SetIpv6gateway gets a reference to the given string and assigns it to the Ipv6gateway field.
func (o *NetworkConfigurationUpdate0) SetIpv6gateway(v string) {
	o.Ipv6gateway = &v
}

// GetNameserver1 returns the Nameserver1 field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetNameserver1() string {
	if o == nil || o.Nameserver1 == nil {
		var ret string
		return ret
	}
	return *o.Nameserver1
}

// GetNameserver1Ok returns a tuple with the Nameserver1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetNameserver1Ok() (*string, bool) {
	if o == nil || o.Nameserver1 == nil {
		return nil, false
	}
	return o.Nameserver1, true
}

// HasNameserver1 returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasNameserver1() bool {
	if o != nil && o.Nameserver1 != nil {
		return true
	}

	return false
}

// SetNameserver1 gets a reference to the given string and assigns it to the Nameserver1 field.
func (o *NetworkConfigurationUpdate0) SetNameserver1(v string) {
	o.Nameserver1 = &v
}

// GetNameserver2 returns the Nameserver2 field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetNameserver2() string {
	if o == nil || o.Nameserver2 == nil {
		var ret string
		return ret
	}
	return *o.Nameserver2
}

// GetNameserver2Ok returns a tuple with the Nameserver2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetNameserver2Ok() (*string, bool) {
	if o == nil || o.Nameserver2 == nil {
		return nil, false
	}
	return o.Nameserver2, true
}

// HasNameserver2 returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasNameserver2() bool {
	if o != nil && o.Nameserver2 != nil {
		return true
	}

	return false
}

// SetNameserver2 gets a reference to the given string and assigns it to the Nameserver2 field.
func (o *NetworkConfigurationUpdate0) SetNameserver2(v string) {
	o.Nameserver2 = &v
}

// GetNameserver3 returns the Nameserver3 field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetNameserver3() string {
	if o == nil || o.Nameserver3 == nil {
		var ret string
		return ret
	}
	return *o.Nameserver3
}

// GetNameserver3Ok returns a tuple with the Nameserver3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetNameserver3Ok() (*string, bool) {
	if o == nil || o.Nameserver3 == nil {
		return nil, false
	}
	return o.Nameserver3, true
}

// HasNameserver3 returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasNameserver3() bool {
	if o != nil && o.Nameserver3 != nil {
		return true
	}

	return false
}

// SetNameserver3 gets a reference to the given string and assigns it to the Nameserver3 field.
func (o *NetworkConfigurationUpdate0) SetNameserver3(v string) {
	o.Nameserver3 = &v
}

// GetHttpproxy returns the Httpproxy field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetHttpproxy() string {
	if o == nil || o.Httpproxy == nil {
		var ret string
		return ret
	}
	return *o.Httpproxy
}

// GetHttpproxyOk returns a tuple with the Httpproxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetHttpproxyOk() (*string, bool) {
	if o == nil || o.Httpproxy == nil {
		return nil, false
	}
	return o.Httpproxy, true
}

// HasHttpproxy returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasHttpproxy() bool {
	if o != nil && o.Httpproxy != nil {
		return true
	}

	return false
}

// SetHttpproxy gets a reference to the given string and assigns it to the Httpproxy field.
func (o *NetworkConfigurationUpdate0) SetHttpproxy(v string) {
	o.Httpproxy = &v
}

// GetNetwaitEnabled returns the NetwaitEnabled field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetNetwaitEnabled() bool {
	if o == nil || o.NetwaitEnabled == nil {
		var ret bool
		return ret
	}
	return *o.NetwaitEnabled
}

// GetNetwaitEnabledOk returns a tuple with the NetwaitEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetNetwaitEnabledOk() (*bool, bool) {
	if o == nil || o.NetwaitEnabled == nil {
		return nil, false
	}
	return o.NetwaitEnabled, true
}

// HasNetwaitEnabled returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasNetwaitEnabled() bool {
	if o != nil && o.NetwaitEnabled != nil {
		return true
	}

	return false
}

// SetNetwaitEnabled gets a reference to the given bool and assigns it to the NetwaitEnabled field.
func (o *NetworkConfigurationUpdate0) SetNetwaitEnabled(v bool) {
	o.NetwaitEnabled = &v
}

// GetNetwaitIp returns the NetwaitIp field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetNetwaitIp() []string {
	if o == nil || o.NetwaitIp == nil {
		var ret []string
		return ret
	}
	return o.NetwaitIp
}

// GetNetwaitIpOk returns a tuple with the NetwaitIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetNetwaitIpOk() ([]string, bool) {
	if o == nil || o.NetwaitIp == nil {
		return nil, false
	}
	return o.NetwaitIp, true
}

// HasNetwaitIp returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasNetwaitIp() bool {
	if o != nil && o.NetwaitIp != nil {
		return true
	}

	return false
}

// SetNetwaitIp gets a reference to the given []string and assigns it to the NetwaitIp field.
func (o *NetworkConfigurationUpdate0) SetNetwaitIp(v []string) {
	o.NetwaitIp = v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *NetworkConfigurationUpdate0) GetHosts() string {
	if o == nil || o.Hosts == nil {
		var ret string
		return ret
	}
	return *o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfigurationUpdate0) GetHostsOk() (*string, bool) {
	if o == nil || o.Hosts == nil {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *NetworkConfigurationUpdate0) HasHosts() bool {
	if o != nil && o.Hosts != nil {
		return true
	}

	return false
}

// SetHosts gets a reference to the given string and assigns it to the Hosts field.
func (o *NetworkConfigurationUpdate0) SetHosts(v string) {
	o.Hosts = &v
}

func (o NetworkConfigurationUpdate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.HostnameB != nil {
		toSerialize["hostname_b"] = o.HostnameB
	}
	if o.HostnameVirtual != nil {
		toSerialize["hostname_virtual"] = o.HostnameVirtual
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.Domains != nil {
		toSerialize["domains"] = o.Domains
	}
	if o.ServiceAnnouncement != nil {
		toSerialize["service_announcement"] = o.ServiceAnnouncement
	}
	if o.Ipv4gateway != nil {
		toSerialize["ipv4gateway"] = o.Ipv4gateway
	}
	if o.Ipv6gateway != nil {
		toSerialize["ipv6gateway"] = o.Ipv6gateway
	}
	if o.Nameserver1 != nil {
		toSerialize["nameserver1"] = o.Nameserver1
	}
	if o.Nameserver2 != nil {
		toSerialize["nameserver2"] = o.Nameserver2
	}
	if o.Nameserver3 != nil {
		toSerialize["nameserver3"] = o.Nameserver3
	}
	if o.Httpproxy != nil {
		toSerialize["httpproxy"] = o.Httpproxy
	}
	if o.NetwaitEnabled != nil {
		toSerialize["netwait_enabled"] = o.NetwaitEnabled
	}
	if o.NetwaitIp != nil {
		toSerialize["netwait_ip"] = o.NetwaitIp
	}
	if o.Hosts != nil {
		toSerialize["hosts"] = o.Hosts
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkConfigurationUpdate0 struct {
	value *NetworkConfigurationUpdate0
	isSet bool
}

func (v NullableNetworkConfigurationUpdate0) Get() *NetworkConfigurationUpdate0 {
	return v.value
}

func (v *NullableNetworkConfigurationUpdate0) Set(val *NetworkConfigurationUpdate0) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkConfigurationUpdate0) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkConfigurationUpdate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkConfigurationUpdate0(val *NetworkConfigurationUpdate0) *NullableNetworkConfigurationUpdate0 {
	return &NullableNetworkConfigurationUpdate0{value: val, isSet: true}
}

func (v NullableNetworkConfigurationUpdate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkConfigurationUpdate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
