/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// GroupGetGroupObj0 struct for GroupGetGroupObj0
type GroupGetGroupObj0 struct {
	Groupname *string `json:"groupname,omitempty"`
	Gid       *int32  `json:"gid,omitempty"`
}

// NewGroupGetGroupObj0 instantiates a new GroupGetGroupObj0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupGetGroupObj0() *GroupGetGroupObj0 {
	this := GroupGetGroupObj0{}
	return &this
}

// NewGroupGetGroupObj0WithDefaults instantiates a new GroupGetGroupObj0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupGetGroupObj0WithDefaults() *GroupGetGroupObj0 {
	this := GroupGetGroupObj0{}
	return &this
}

// GetGroupname returns the Groupname field value if set, zero value otherwise.
func (o *GroupGetGroupObj0) GetGroupname() string {
	if o == nil || o.Groupname == nil {
		var ret string
		return ret
	}
	return *o.Groupname
}

// GetGroupnameOk returns a tuple with the Groupname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupGetGroupObj0) GetGroupnameOk() (*string, bool) {
	if o == nil || o.Groupname == nil {
		return nil, false
	}
	return o.Groupname, true
}

// HasGroupname returns a boolean if a field has been set.
func (o *GroupGetGroupObj0) HasGroupname() bool {
	if o != nil && o.Groupname != nil {
		return true
	}

	return false
}

// SetGroupname gets a reference to the given string and assigns it to the Groupname field.
func (o *GroupGetGroupObj0) SetGroupname(v string) {
	o.Groupname = &v
}

// GetGid returns the Gid field value if set, zero value otherwise.
func (o *GroupGetGroupObj0) GetGid() int32 {
	if o == nil || o.Gid == nil {
		var ret int32
		return ret
	}
	return *o.Gid
}

// GetGidOk returns a tuple with the Gid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupGetGroupObj0) GetGidOk() (*int32, bool) {
	if o == nil || o.Gid == nil {
		return nil, false
	}
	return o.Gid, true
}

// HasGid returns a boolean if a field has been set.
func (o *GroupGetGroupObj0) HasGid() bool {
	if o != nil && o.Gid != nil {
		return true
	}

	return false
}

// SetGid gets a reference to the given int32 and assigns it to the Gid field.
func (o *GroupGetGroupObj0) SetGid(v int32) {
	o.Gid = &v
}

func (o GroupGetGroupObj0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Groupname != nil {
		toSerialize["groupname"] = o.Groupname
	}
	if o.Gid != nil {
		toSerialize["gid"] = o.Gid
	}
	return json.Marshal(toSerialize)
}

type NullableGroupGetGroupObj0 struct {
	value *GroupGetGroupObj0
	isSet bool
}

func (v NullableGroupGetGroupObj0) Get() *GroupGetGroupObj0 {
	return v.value
}

func (v *NullableGroupGetGroupObj0) Set(val *GroupGetGroupObj0) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupGetGroupObj0) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupGetGroupObj0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupGetGroupObj0(val *GroupGetGroupObj0) *NullableGroupGetGroupObj0 {
	return &NullableGroupGetGroupObj0{value: val, isSet: true}
}

func (v NullableGroupGetGroupObj0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupGetGroupObj0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
