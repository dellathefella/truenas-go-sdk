/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// ApiKeyUpdate1 struct for ApiKeyUpdate1
type ApiKeyUpdate1 struct {
	Name  *string `json:"name,omitempty"`
	Reset *bool   `json:"reset,omitempty"`
}

// NewApiKeyUpdate1 instantiates a new ApiKeyUpdate1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyUpdate1() *ApiKeyUpdate1 {
	this := ApiKeyUpdate1{}
	return &this
}

// NewApiKeyUpdate1WithDefaults instantiates a new ApiKeyUpdate1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyUpdate1WithDefaults() *ApiKeyUpdate1 {
	this := ApiKeyUpdate1{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiKeyUpdate1) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdate1) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiKeyUpdate1) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiKeyUpdate1) SetName(v string) {
	o.Name = &v
}

// GetReset returns the Reset field value if set, zero value otherwise.
func (o *ApiKeyUpdate1) GetReset() bool {
	if o == nil || o.Reset == nil {
		var ret bool
		return ret
	}
	return *o.Reset
}

// GetResetOk returns a tuple with the Reset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdate1) GetResetOk() (*bool, bool) {
	if o == nil || o.Reset == nil {
		return nil, false
	}
	return o.Reset, true
}

// HasReset returns a boolean if a field has been set.
func (o *ApiKeyUpdate1) HasReset() bool {
	if o != nil && o.Reset != nil {
		return true
	}

	return false
}

// SetReset gets a reference to the given bool and assigns it to the Reset field.
func (o *ApiKeyUpdate1) SetReset(v bool) {
	o.Reset = &v
}

func (o ApiKeyUpdate1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Reset != nil {
		toSerialize["reset"] = o.Reset
	}
	return json.Marshal(toSerialize)
}

type NullableApiKeyUpdate1 struct {
	value *ApiKeyUpdate1
	isSet bool
}

func (v NullableApiKeyUpdate1) Get() *ApiKeyUpdate1 {
	return v.value
}

func (v *NullableApiKeyUpdate1) Set(val *ApiKeyUpdate1) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyUpdate1) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyUpdate1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyUpdate1(val *ApiKeyUpdate1) *NullableApiKeyUpdate1 {
	return &NullableApiKeyUpdate1{value: val, isSet: true}
}

func (v NullableApiKeyUpdate1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyUpdate1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
