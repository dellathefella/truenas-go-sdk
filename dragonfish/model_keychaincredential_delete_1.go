/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// KeychaincredentialDelete1 struct for KeychaincredentialDelete1
type KeychaincredentialDelete1 struct {
	Cascade *bool `json:"cascade,omitempty"`
}

// NewKeychaincredentialDelete1 instantiates a new KeychaincredentialDelete1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeychaincredentialDelete1() *KeychaincredentialDelete1 {
	this := KeychaincredentialDelete1{}
	return &this
}

// NewKeychaincredentialDelete1WithDefaults instantiates a new KeychaincredentialDelete1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeychaincredentialDelete1WithDefaults() *KeychaincredentialDelete1 {
	this := KeychaincredentialDelete1{}
	return &this
}

// GetCascade returns the Cascade field value if set, zero value otherwise.
func (o *KeychaincredentialDelete1) GetCascade() bool {
	if o == nil || o.Cascade == nil {
		var ret bool
		return ret
	}
	return *o.Cascade
}

// GetCascadeOk returns a tuple with the Cascade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialDelete1) GetCascadeOk() (*bool, bool) {
	if o == nil || o.Cascade == nil {
		return nil, false
	}
	return o.Cascade, true
}

// HasCascade returns a boolean if a field has been set.
func (o *KeychaincredentialDelete1) HasCascade() bool {
	if o != nil && o.Cascade != nil {
		return true
	}

	return false
}

// SetCascade gets a reference to the given bool and assigns it to the Cascade field.
func (o *KeychaincredentialDelete1) SetCascade(v bool) {
	o.Cascade = &v
}

func (o KeychaincredentialDelete1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cascade != nil {
		toSerialize["cascade"] = o.Cascade
	}
	return json.Marshal(toSerialize)
}

type NullableKeychaincredentialDelete1 struct {
	value *KeychaincredentialDelete1
	isSet bool
}

func (v NullableKeychaincredentialDelete1) Get() *KeychaincredentialDelete1 {
	return v.value
}

func (v *NullableKeychaincredentialDelete1) Set(val *KeychaincredentialDelete1) {
	v.value = val
	v.isSet = true
}

func (v NullableKeychaincredentialDelete1) IsSet() bool {
	return v.isSet
}

func (v *NullableKeychaincredentialDelete1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeychaincredentialDelete1(val *KeychaincredentialDelete1) *NullableKeychaincredentialDelete1 {
	return &NullableKeychaincredentialDelete1{value: val, isSet: true}
}

func (v NullableKeychaincredentialDelete1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeychaincredentialDelete1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
