/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// PoolScrubCreate0 struct for PoolScrubCreate0
type PoolScrubCreate0 struct {
	Pool        *int32                    `json:"pool,omitempty"`
	Threshold   *int32                    `json:"threshold,omitempty"`
	Description *string                   `json:"description,omitempty"`
	Schedule    *CloudsyncCreate0Schedule `json:"schedule,omitempty"`
	Enabled     *bool                     `json:"enabled,omitempty"`
}

// NewPoolScrubCreate0 instantiates a new PoolScrubCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolScrubCreate0() *PoolScrubCreate0 {
	this := PoolScrubCreate0{}
	return &this
}

// NewPoolScrubCreate0WithDefaults instantiates a new PoolScrubCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolScrubCreate0WithDefaults() *PoolScrubCreate0 {
	this := PoolScrubCreate0{}
	return &this
}

// GetPool returns the Pool field value if set, zero value otherwise.
func (o *PoolScrubCreate0) GetPool() int32 {
	if o == nil || o.Pool == nil {
		var ret int32
		return ret
	}
	return *o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolScrubCreate0) GetPoolOk() (*int32, bool) {
	if o == nil || o.Pool == nil {
		return nil, false
	}
	return o.Pool, true
}

// HasPool returns a boolean if a field has been set.
func (o *PoolScrubCreate0) HasPool() bool {
	if o != nil && o.Pool != nil {
		return true
	}

	return false
}

// SetPool gets a reference to the given int32 and assigns it to the Pool field.
func (o *PoolScrubCreate0) SetPool(v int32) {
	o.Pool = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *PoolScrubCreate0) GetThreshold() int32 {
	if o == nil || o.Threshold == nil {
		var ret int32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolScrubCreate0) GetThresholdOk() (*int32, bool) {
	if o == nil || o.Threshold == nil {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *PoolScrubCreate0) HasThreshold() bool {
	if o != nil && o.Threshold != nil {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given int32 and assigns it to the Threshold field.
func (o *PoolScrubCreate0) SetThreshold(v int32) {
	o.Threshold = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PoolScrubCreate0) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolScrubCreate0) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PoolScrubCreate0) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PoolScrubCreate0) SetDescription(v string) {
	o.Description = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *PoolScrubCreate0) GetSchedule() CloudsyncCreate0Schedule {
	if o == nil || o.Schedule == nil {
		var ret CloudsyncCreate0Schedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolScrubCreate0) GetScheduleOk() (*CloudsyncCreate0Schedule, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *PoolScrubCreate0) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given CloudsyncCreate0Schedule and assigns it to the Schedule field.
func (o *PoolScrubCreate0) SetSchedule(v CloudsyncCreate0Schedule) {
	o.Schedule = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PoolScrubCreate0) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolScrubCreate0) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PoolScrubCreate0) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PoolScrubCreate0) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o PoolScrubCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pool != nil {
		toSerialize["pool"] = o.Pool
	}
	if o.Threshold != nil {
		toSerialize["threshold"] = o.Threshold
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullablePoolScrubCreate0 struct {
	value *PoolScrubCreate0
	isSet bool
}

func (v NullablePoolScrubCreate0) Get() *PoolScrubCreate0 {
	return v.value
}

func (v *NullablePoolScrubCreate0) Set(val *PoolScrubCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolScrubCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolScrubCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolScrubCreate0(val *PoolScrubCreate0) *NullablePoolScrubCreate0 {
	return &NullablePoolScrubCreate0{value: val, isSet: true}
}

func (v NullablePoolScrubCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolScrubCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
