/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// PoolDatasetGetQuota struct for PoolDatasetGetQuota
type PoolDatasetGetQuota struct {
	QuotaType *PoolDatasetGetQuota1 `json:"quota_type,omitempty"`
	QueryFilters []interface{} `json:"query-filters,omitempty"`
	QueryOptions *PoolDatasetGetQuota3 `json:"query-options,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PoolDatasetGetQuota PoolDatasetGetQuota

// NewPoolDatasetGetQuota instantiates a new PoolDatasetGetQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolDatasetGetQuota() *PoolDatasetGetQuota {
	this := PoolDatasetGetQuota{}
	var queryOptions PoolDatasetGetQuota3 = {}
	this.QueryOptions = &queryOptions
	return &this
}

// NewPoolDatasetGetQuotaWithDefaults instantiates a new PoolDatasetGetQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolDatasetGetQuotaWithDefaults() *PoolDatasetGetQuota {
	this := PoolDatasetGetQuota{}
	var queryOptions PoolDatasetGetQuota3 = {}
	this.QueryOptions = &queryOptions
	return &this
}

// GetQuotaType returns the QuotaType field value if set, zero value otherwise.
func (o *PoolDatasetGetQuota) GetQuotaType() PoolDatasetGetQuota1 {
	if o == nil || o.QuotaType == nil {
		var ret PoolDatasetGetQuota1
		return ret
	}
	return *o.QuotaType
}

// GetQuotaTypeOk returns a tuple with the QuotaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetGetQuota) GetQuotaTypeOk() (*PoolDatasetGetQuota1, bool) {
	if o == nil || o.QuotaType == nil {
		return nil, false
	}
	return o.QuotaType, true
}

// HasQuotaType returns a boolean if a field has been set.
func (o *PoolDatasetGetQuota) HasQuotaType() bool {
	if o != nil && o.QuotaType != nil {
		return true
	}

	return false
}

// SetQuotaType gets a reference to the given PoolDatasetGetQuota1 and assigns it to the QuotaType field.
func (o *PoolDatasetGetQuota) SetQuotaType(v PoolDatasetGetQuota1) {
	o.QuotaType = &v
}

// GetQueryFilters returns the QueryFilters field value if set, zero value otherwise.
func (o *PoolDatasetGetQuota) GetQueryFilters() []interface{} {
	if o == nil || o.QueryFilters == nil {
		var ret []interface{}
		return ret
	}
	return o.QueryFilters
}

// GetQueryFiltersOk returns a tuple with the QueryFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetGetQuota) GetQueryFiltersOk() ([]interface{}, bool) {
	if o == nil || o.QueryFilters == nil {
		return nil, false
	}
	return o.QueryFilters, true
}

// HasQueryFilters returns a boolean if a field has been set.
func (o *PoolDatasetGetQuota) HasQueryFilters() bool {
	if o != nil && o.QueryFilters != nil {
		return true
	}

	return false
}

// SetQueryFilters gets a reference to the given []interface{} and assigns it to the QueryFilters field.
func (o *PoolDatasetGetQuota) SetQueryFilters(v []interface{}) {
	o.QueryFilters = v
}

// GetQueryOptions returns the QueryOptions field value if set, zero value otherwise.
func (o *PoolDatasetGetQuota) GetQueryOptions() PoolDatasetGetQuota3 {
	if o == nil || o.QueryOptions == nil {
		var ret PoolDatasetGetQuota3
		return ret
	}
	return *o.QueryOptions
}

// GetQueryOptionsOk returns a tuple with the QueryOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetGetQuota) GetQueryOptionsOk() (*PoolDatasetGetQuota3, bool) {
	if o == nil || o.QueryOptions == nil {
		return nil, false
	}
	return o.QueryOptions, true
}

// HasQueryOptions returns a boolean if a field has been set.
func (o *PoolDatasetGetQuota) HasQueryOptions() bool {
	if o != nil && o.QueryOptions != nil {
		return true
	}

	return false
}

// SetQueryOptions gets a reference to the given PoolDatasetGetQuota3 and assigns it to the QueryOptions field.
func (o *PoolDatasetGetQuota) SetQueryOptions(v PoolDatasetGetQuota3) {
	o.QueryOptions = &v
}

func (o PoolDatasetGetQuota) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.QuotaType != nil {
		toSerialize["quota_type"] = o.QuotaType
	}
	if o.QueryFilters != nil {
		toSerialize["query-filters"] = o.QueryFilters
	}
	if o.QueryOptions != nil {
		toSerialize["query-options"] = o.QueryOptions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PoolDatasetGetQuota) UnmarshalJSON(bytes []byte) (err error) {
	varPoolDatasetGetQuota := _PoolDatasetGetQuota{}

	if err = json.Unmarshal(bytes, &varPoolDatasetGetQuota); err == nil {
		*o = PoolDatasetGetQuota(varPoolDatasetGetQuota)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "quota_type")
		delete(additionalProperties, "query-filters")
		delete(additionalProperties, "query-options")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePoolDatasetGetQuota struct {
	value *PoolDatasetGetQuota
	isSet bool
}

func (v NullablePoolDatasetGetQuota) Get() *PoolDatasetGetQuota {
	return v.value
}

func (v *NullablePoolDatasetGetQuota) Set(val *PoolDatasetGetQuota) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolDatasetGetQuota) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolDatasetGetQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolDatasetGetQuota(val *PoolDatasetGetQuota) *NullablePoolDatasetGetQuota {
	return &NullablePoolDatasetGetQuota{value: val, isSet: true}
}

func (v NullablePoolDatasetGetQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolDatasetGetQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


