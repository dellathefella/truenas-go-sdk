/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// ZfsSnapshotClone0 struct for ZfsSnapshotClone0
type ZfsSnapshotClone0 struct {
	Snapshot   *string `json:"snapshot,omitempty"`
	DatasetDst *string `json:"dataset_dst,omitempty"`
}

// NewZfsSnapshotClone0 instantiates a new ZfsSnapshotClone0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZfsSnapshotClone0() *ZfsSnapshotClone0 {
	this := ZfsSnapshotClone0{}
	return &this
}

// NewZfsSnapshotClone0WithDefaults instantiates a new ZfsSnapshotClone0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZfsSnapshotClone0WithDefaults() *ZfsSnapshotClone0 {
	this := ZfsSnapshotClone0{}
	return &this
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *ZfsSnapshotClone0) GetSnapshot() string {
	if o == nil || o.Snapshot == nil {
		var ret string
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZfsSnapshotClone0) GetSnapshotOk() (*string, bool) {
	if o == nil || o.Snapshot == nil {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *ZfsSnapshotClone0) HasSnapshot() bool {
	if o != nil && o.Snapshot != nil {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given string and assigns it to the Snapshot field.
func (o *ZfsSnapshotClone0) SetSnapshot(v string) {
	o.Snapshot = &v
}

// GetDatasetDst returns the DatasetDst field value if set, zero value otherwise.
func (o *ZfsSnapshotClone0) GetDatasetDst() string {
	if o == nil || o.DatasetDst == nil {
		var ret string
		return ret
	}
	return *o.DatasetDst
}

// GetDatasetDstOk returns a tuple with the DatasetDst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZfsSnapshotClone0) GetDatasetDstOk() (*string, bool) {
	if o == nil || o.DatasetDst == nil {
		return nil, false
	}
	return o.DatasetDst, true
}

// HasDatasetDst returns a boolean if a field has been set.
func (o *ZfsSnapshotClone0) HasDatasetDst() bool {
	if o != nil && o.DatasetDst != nil {
		return true
	}

	return false
}

// SetDatasetDst gets a reference to the given string and assigns it to the DatasetDst field.
func (o *ZfsSnapshotClone0) SetDatasetDst(v string) {
	o.DatasetDst = &v
}

func (o ZfsSnapshotClone0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Snapshot != nil {
		toSerialize["snapshot"] = o.Snapshot
	}
	if o.DatasetDst != nil {
		toSerialize["dataset_dst"] = o.DatasetDst
	}
	return json.Marshal(toSerialize)
}

type NullableZfsSnapshotClone0 struct {
	value *ZfsSnapshotClone0
	isSet bool
}

func (v NullableZfsSnapshotClone0) Get() *ZfsSnapshotClone0 {
	return v.value
}

func (v *NullableZfsSnapshotClone0) Set(val *ZfsSnapshotClone0) {
	v.value = val
	v.isSet = true
}

func (v NullableZfsSnapshotClone0) IsSet() bool {
	return v.isSet
}

func (v *NullableZfsSnapshotClone0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZfsSnapshotClone0(val *ZfsSnapshotClone0) *NullableZfsSnapshotClone0 {
	return &NullableZfsSnapshotClone0{value: val, isSet: true}
}

func (v NullableZfsSnapshotClone0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZfsSnapshotClone0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
