/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// TruenasUpdateCustomerInformation0 struct for TruenasUpdateCustomerInformation0
type TruenasUpdateCustomerInformation0 struct {
	Company             *string                                              `json:"company,omitempty"`
	AdministrativeUser  *TruenasUpdateCustomerInformation0AdministrativeUser `json:"administrative_user,omitempty"`
	TechnicalUser       *TruenasUpdateCustomerInformation0AdministrativeUser `json:"technical_user,omitempty"`
	Reseller            *TruenasUpdateCustomerInformation0Reseller           `json:"reseller,omitempty"`
	PhysicalLocation    *TruenasUpdateCustomerInformation0PhysicalLocation   `json:"physical_location,omitempty"`
	PrimaryUseCase      *string                                              `json:"primary_use_case,omitempty"`
	OtherPrimaryUseCase *string                                              `json:"other_primary_use_case,omitempty"`
}

// NewTruenasUpdateCustomerInformation0 instantiates a new TruenasUpdateCustomerInformation0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTruenasUpdateCustomerInformation0() *TruenasUpdateCustomerInformation0 {
	this := TruenasUpdateCustomerInformation0{}
	return &this
}

// NewTruenasUpdateCustomerInformation0WithDefaults instantiates a new TruenasUpdateCustomerInformation0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTruenasUpdateCustomerInformation0WithDefaults() *TruenasUpdateCustomerInformation0 {
	this := TruenasUpdateCustomerInformation0{}
	return &this
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0) GetCompany() string {
	if o == nil || o.Company == nil {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0) GetCompanyOk() (*string, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *TruenasUpdateCustomerInformation0) SetCompany(v string) {
	o.Company = &v
}

// GetAdministrativeUser returns the AdministrativeUser field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0) GetAdministrativeUser() TruenasUpdateCustomerInformation0AdministrativeUser {
	if o == nil || o.AdministrativeUser == nil {
		var ret TruenasUpdateCustomerInformation0AdministrativeUser
		return ret
	}
	return *o.AdministrativeUser
}

// GetAdministrativeUserOk returns a tuple with the AdministrativeUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0) GetAdministrativeUserOk() (*TruenasUpdateCustomerInformation0AdministrativeUser, bool) {
	if o == nil || o.AdministrativeUser == nil {
		return nil, false
	}
	return o.AdministrativeUser, true
}

// HasAdministrativeUser returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0) HasAdministrativeUser() bool {
	if o != nil && o.AdministrativeUser != nil {
		return true
	}

	return false
}

// SetAdministrativeUser gets a reference to the given TruenasUpdateCustomerInformation0AdministrativeUser and assigns it to the AdministrativeUser field.
func (o *TruenasUpdateCustomerInformation0) SetAdministrativeUser(v TruenasUpdateCustomerInformation0AdministrativeUser) {
	o.AdministrativeUser = &v
}

// GetTechnicalUser returns the TechnicalUser field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0) GetTechnicalUser() TruenasUpdateCustomerInformation0AdministrativeUser {
	if o == nil || o.TechnicalUser == nil {
		var ret TruenasUpdateCustomerInformation0AdministrativeUser
		return ret
	}
	return *o.TechnicalUser
}

// GetTechnicalUserOk returns a tuple with the TechnicalUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0) GetTechnicalUserOk() (*TruenasUpdateCustomerInformation0AdministrativeUser, bool) {
	if o == nil || o.TechnicalUser == nil {
		return nil, false
	}
	return o.TechnicalUser, true
}

// HasTechnicalUser returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0) HasTechnicalUser() bool {
	if o != nil && o.TechnicalUser != nil {
		return true
	}

	return false
}

// SetTechnicalUser gets a reference to the given TruenasUpdateCustomerInformation0AdministrativeUser and assigns it to the TechnicalUser field.
func (o *TruenasUpdateCustomerInformation0) SetTechnicalUser(v TruenasUpdateCustomerInformation0AdministrativeUser) {
	o.TechnicalUser = &v
}

// GetReseller returns the Reseller field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0) GetReseller() TruenasUpdateCustomerInformation0Reseller {
	if o == nil || o.Reseller == nil {
		var ret TruenasUpdateCustomerInformation0Reseller
		return ret
	}
	return *o.Reseller
}

// GetResellerOk returns a tuple with the Reseller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0) GetResellerOk() (*TruenasUpdateCustomerInformation0Reseller, bool) {
	if o == nil || o.Reseller == nil {
		return nil, false
	}
	return o.Reseller, true
}

// HasReseller returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0) HasReseller() bool {
	if o != nil && o.Reseller != nil {
		return true
	}

	return false
}

// SetReseller gets a reference to the given TruenasUpdateCustomerInformation0Reseller and assigns it to the Reseller field.
func (o *TruenasUpdateCustomerInformation0) SetReseller(v TruenasUpdateCustomerInformation0Reseller) {
	o.Reseller = &v
}

// GetPhysicalLocation returns the PhysicalLocation field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0) GetPhysicalLocation() TruenasUpdateCustomerInformation0PhysicalLocation {
	if o == nil || o.PhysicalLocation == nil {
		var ret TruenasUpdateCustomerInformation0PhysicalLocation
		return ret
	}
	return *o.PhysicalLocation
}

// GetPhysicalLocationOk returns a tuple with the PhysicalLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0) GetPhysicalLocationOk() (*TruenasUpdateCustomerInformation0PhysicalLocation, bool) {
	if o == nil || o.PhysicalLocation == nil {
		return nil, false
	}
	return o.PhysicalLocation, true
}

// HasPhysicalLocation returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0) HasPhysicalLocation() bool {
	if o != nil && o.PhysicalLocation != nil {
		return true
	}

	return false
}

// SetPhysicalLocation gets a reference to the given TruenasUpdateCustomerInformation0PhysicalLocation and assigns it to the PhysicalLocation field.
func (o *TruenasUpdateCustomerInformation0) SetPhysicalLocation(v TruenasUpdateCustomerInformation0PhysicalLocation) {
	o.PhysicalLocation = &v
}

// GetPrimaryUseCase returns the PrimaryUseCase field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0) GetPrimaryUseCase() string {
	if o == nil || o.PrimaryUseCase == nil {
		var ret string
		return ret
	}
	return *o.PrimaryUseCase
}

// GetPrimaryUseCaseOk returns a tuple with the PrimaryUseCase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0) GetPrimaryUseCaseOk() (*string, bool) {
	if o == nil || o.PrimaryUseCase == nil {
		return nil, false
	}
	return o.PrimaryUseCase, true
}

// HasPrimaryUseCase returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0) HasPrimaryUseCase() bool {
	if o != nil && o.PrimaryUseCase != nil {
		return true
	}

	return false
}

// SetPrimaryUseCase gets a reference to the given string and assigns it to the PrimaryUseCase field.
func (o *TruenasUpdateCustomerInformation0) SetPrimaryUseCase(v string) {
	o.PrimaryUseCase = &v
}

// GetOtherPrimaryUseCase returns the OtherPrimaryUseCase field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0) GetOtherPrimaryUseCase() string {
	if o == nil || o.OtherPrimaryUseCase == nil {
		var ret string
		return ret
	}
	return *o.OtherPrimaryUseCase
}

// GetOtherPrimaryUseCaseOk returns a tuple with the OtherPrimaryUseCase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0) GetOtherPrimaryUseCaseOk() (*string, bool) {
	if o == nil || o.OtherPrimaryUseCase == nil {
		return nil, false
	}
	return o.OtherPrimaryUseCase, true
}

// HasOtherPrimaryUseCase returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0) HasOtherPrimaryUseCase() bool {
	if o != nil && o.OtherPrimaryUseCase != nil {
		return true
	}

	return false
}

// SetOtherPrimaryUseCase gets a reference to the given string and assigns it to the OtherPrimaryUseCase field.
func (o *TruenasUpdateCustomerInformation0) SetOtherPrimaryUseCase(v string) {
	o.OtherPrimaryUseCase = &v
}

func (o TruenasUpdateCustomerInformation0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.AdministrativeUser != nil {
		toSerialize["administrative_user"] = o.AdministrativeUser
	}
	if o.TechnicalUser != nil {
		toSerialize["technical_user"] = o.TechnicalUser
	}
	if o.Reseller != nil {
		toSerialize["reseller"] = o.Reseller
	}
	if o.PhysicalLocation != nil {
		toSerialize["physical_location"] = o.PhysicalLocation
	}
	if o.PrimaryUseCase != nil {
		toSerialize["primary_use_case"] = o.PrimaryUseCase
	}
	if o.OtherPrimaryUseCase != nil {
		toSerialize["other_primary_use_case"] = o.OtherPrimaryUseCase
	}
	return json.Marshal(toSerialize)
}

type NullableTruenasUpdateCustomerInformation0 struct {
	value *TruenasUpdateCustomerInformation0
	isSet bool
}

func (v NullableTruenasUpdateCustomerInformation0) Get() *TruenasUpdateCustomerInformation0 {
	return v.value
}

func (v *NullableTruenasUpdateCustomerInformation0) Set(val *TruenasUpdateCustomerInformation0) {
	v.value = val
	v.isSet = true
}

func (v NullableTruenasUpdateCustomerInformation0) IsSet() bool {
	return v.isSet
}

func (v *NullableTruenasUpdateCustomerInformation0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTruenasUpdateCustomerInformation0(val *TruenasUpdateCustomerInformation0) *NullableTruenasUpdateCustomerInformation0 {
	return &NullableTruenasUpdateCustomerInformation0{value: val, isSet: true}
}

func (v NullableTruenasUpdateCustomerInformation0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTruenasUpdateCustomerInformation0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
