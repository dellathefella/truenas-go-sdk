/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// VmCreate0 struct for VmCreate0
type VmCreate0 struct {
	Name            *string                  `json:"name,omitempty"`
	Description     *string                  `json:"description,omitempty"`
	Vcpus           *int32                   `json:"vcpus,omitempty"`
	Cores           *int32                   `json:"cores,omitempty"`
	Threads         *int32                   `json:"threads,omitempty"`
	Memory          *int32                   `json:"memory,omitempty"`
	Bootloader      *string                  `json:"bootloader,omitempty"`
	Grubconfig      NullableString           `json:"grubconfig,omitempty"`
	Devices         []map[string]interface{} `json:"devices,omitempty"`
	Autostart       *bool                    `json:"autostart,omitempty"`
	Time            *string                  `json:"time,omitempty"`
	ShutdownTimeout *int32                   `json:"shutdown_timeout,omitempty"`
}

// NewVmCreate0 instantiates a new VmCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmCreate0() *VmCreate0 {
	this := VmCreate0{}
	return &this
}

// NewVmCreate0WithDefaults instantiates a new VmCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmCreate0WithDefaults() *VmCreate0 {
	this := VmCreate0{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VmCreate0) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VmCreate0) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VmCreate0) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VmCreate0) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VmCreate0) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VmCreate0) SetDescription(v string) {
	o.Description = &v
}

// GetVcpus returns the Vcpus field value if set, zero value otherwise.
func (o *VmCreate0) GetVcpus() int32 {
	if o == nil || o.Vcpus == nil {
		var ret int32
		return ret
	}
	return *o.Vcpus
}

// GetVcpusOk returns a tuple with the Vcpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetVcpusOk() (*int32, bool) {
	if o == nil || o.Vcpus == nil {
		return nil, false
	}
	return o.Vcpus, true
}

// HasVcpus returns a boolean if a field has been set.
func (o *VmCreate0) HasVcpus() bool {
	if o != nil && o.Vcpus != nil {
		return true
	}

	return false
}

// SetVcpus gets a reference to the given int32 and assigns it to the Vcpus field.
func (o *VmCreate0) SetVcpus(v int32) {
	o.Vcpus = &v
}

// GetCores returns the Cores field value if set, zero value otherwise.
func (o *VmCreate0) GetCores() int32 {
	if o == nil || o.Cores == nil {
		var ret int32
		return ret
	}
	return *o.Cores
}

// GetCoresOk returns a tuple with the Cores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetCoresOk() (*int32, bool) {
	if o == nil || o.Cores == nil {
		return nil, false
	}
	return o.Cores, true
}

// HasCores returns a boolean if a field has been set.
func (o *VmCreate0) HasCores() bool {
	if o != nil && o.Cores != nil {
		return true
	}

	return false
}

// SetCores gets a reference to the given int32 and assigns it to the Cores field.
func (o *VmCreate0) SetCores(v int32) {
	o.Cores = &v
}

// GetThreads returns the Threads field value if set, zero value otherwise.
func (o *VmCreate0) GetThreads() int32 {
	if o == nil || o.Threads == nil {
		var ret int32
		return ret
	}
	return *o.Threads
}

// GetThreadsOk returns a tuple with the Threads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetThreadsOk() (*int32, bool) {
	if o == nil || o.Threads == nil {
		return nil, false
	}
	return o.Threads, true
}

// HasThreads returns a boolean if a field has been set.
func (o *VmCreate0) HasThreads() bool {
	if o != nil && o.Threads != nil {
		return true
	}

	return false
}

// SetThreads gets a reference to the given int32 and assigns it to the Threads field.
func (o *VmCreate0) SetThreads(v int32) {
	o.Threads = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *VmCreate0) GetMemory() int32 {
	if o == nil || o.Memory == nil {
		var ret int32
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetMemoryOk() (*int32, bool) {
	if o == nil || o.Memory == nil {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *VmCreate0) HasMemory() bool {
	if o != nil && o.Memory != nil {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int32 and assigns it to the Memory field.
func (o *VmCreate0) SetMemory(v int32) {
	o.Memory = &v
}

// GetBootloader returns the Bootloader field value if set, zero value otherwise.
func (o *VmCreate0) GetBootloader() string {
	if o == nil || o.Bootloader == nil {
		var ret string
		return ret
	}
	return *o.Bootloader
}

// GetBootloaderOk returns a tuple with the Bootloader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetBootloaderOk() (*string, bool) {
	if o == nil || o.Bootloader == nil {
		return nil, false
	}
	return o.Bootloader, true
}

// HasBootloader returns a boolean if a field has been set.
func (o *VmCreate0) HasBootloader() bool {
	if o != nil && o.Bootloader != nil {
		return true
	}

	return false
}

// SetBootloader gets a reference to the given string and assigns it to the Bootloader field.
func (o *VmCreate0) SetBootloader(v string) {
	o.Bootloader = &v
}

// GetGrubconfig returns the Grubconfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VmCreate0) GetGrubconfig() string {
	if o == nil || o.Grubconfig.Get() == nil {
		var ret string
		return ret
	}
	return *o.Grubconfig.Get()
}

// GetGrubconfigOk returns a tuple with the Grubconfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmCreate0) GetGrubconfigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Grubconfig.Get(), o.Grubconfig.IsSet()
}

// HasGrubconfig returns a boolean if a field has been set.
func (o *VmCreate0) HasGrubconfig() bool {
	if o != nil && o.Grubconfig.IsSet() {
		return true
	}

	return false
}

// SetGrubconfig gets a reference to the given NullableString and assigns it to the Grubconfig field.
func (o *VmCreate0) SetGrubconfig(v string) {
	o.Grubconfig.Set(&v)
}

// SetGrubconfigNil sets the value for Grubconfig to be an explicit nil
func (o *VmCreate0) SetGrubconfigNil() {
	o.Grubconfig.Set(nil)
}

// UnsetGrubconfig ensures that no value is present for Grubconfig, not even an explicit nil
func (o *VmCreate0) UnsetGrubconfig() {
	o.Grubconfig.Unset()
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *VmCreate0) GetDevices() []map[string]interface{} {
	if o == nil || o.Devices == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetDevicesOk() ([]map[string]interface{}, bool) {
	if o == nil || o.Devices == nil {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *VmCreate0) HasDevices() bool {
	if o != nil && o.Devices != nil {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []map[string]interface{} and assigns it to the Devices field.
func (o *VmCreate0) SetDevices(v []map[string]interface{}) {
	o.Devices = v
}

// GetAutostart returns the Autostart field value if set, zero value otherwise.
func (o *VmCreate0) GetAutostart() bool {
	if o == nil || o.Autostart == nil {
		var ret bool
		return ret
	}
	return *o.Autostart
}

// GetAutostartOk returns a tuple with the Autostart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetAutostartOk() (*bool, bool) {
	if o == nil || o.Autostart == nil {
		return nil, false
	}
	return o.Autostart, true
}

// HasAutostart returns a boolean if a field has been set.
func (o *VmCreate0) HasAutostart() bool {
	if o != nil && o.Autostart != nil {
		return true
	}

	return false
}

// SetAutostart gets a reference to the given bool and assigns it to the Autostart field.
func (o *VmCreate0) SetAutostart(v bool) {
	o.Autostart = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *VmCreate0) GetTime() string {
	if o == nil || o.Time == nil {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetTimeOk() (*string, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *VmCreate0) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *VmCreate0) SetTime(v string) {
	o.Time = &v
}

// GetShutdownTimeout returns the ShutdownTimeout field value if set, zero value otherwise.
func (o *VmCreate0) GetShutdownTimeout() int32 {
	if o == nil || o.ShutdownTimeout == nil {
		var ret int32
		return ret
	}
	return *o.ShutdownTimeout
}

// GetShutdownTimeoutOk returns a tuple with the ShutdownTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCreate0) GetShutdownTimeoutOk() (*int32, bool) {
	if o == nil || o.ShutdownTimeout == nil {
		return nil, false
	}
	return o.ShutdownTimeout, true
}

// HasShutdownTimeout returns a boolean if a field has been set.
func (o *VmCreate0) HasShutdownTimeout() bool {
	if o != nil && o.ShutdownTimeout != nil {
		return true
	}

	return false
}

// SetShutdownTimeout gets a reference to the given int32 and assigns it to the ShutdownTimeout field.
func (o *VmCreate0) SetShutdownTimeout(v int32) {
	o.ShutdownTimeout = &v
}

func (o VmCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Vcpus != nil {
		toSerialize["vcpus"] = o.Vcpus
	}
	if o.Cores != nil {
		toSerialize["cores"] = o.Cores
	}
	if o.Threads != nil {
		toSerialize["threads"] = o.Threads
	}
	if o.Memory != nil {
		toSerialize["memory"] = o.Memory
	}
	if o.Bootloader != nil {
		toSerialize["bootloader"] = o.Bootloader
	}
	if o.Grubconfig.IsSet() {
		toSerialize["grubconfig"] = o.Grubconfig.Get()
	}
	if o.Devices != nil {
		toSerialize["devices"] = o.Devices
	}
	if o.Autostart != nil {
		toSerialize["autostart"] = o.Autostart
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.ShutdownTimeout != nil {
		toSerialize["shutdown_timeout"] = o.ShutdownTimeout
	}
	return json.Marshal(toSerialize)
}

type NullableVmCreate0 struct {
	value *VmCreate0
	isSet bool
}

func (v NullableVmCreate0) Get() *VmCreate0 {
	return v.value
}

func (v *NullableVmCreate0) Set(val *VmCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableVmCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableVmCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmCreate0(val *VmCreate0) *NullableVmCreate0 {
	return &NullableVmCreate0{value: val, isSet: true}
}

func (v NullableVmCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
