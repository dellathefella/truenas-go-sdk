/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// CloudsyncRestore1 struct for CloudsyncRestore1
type CloudsyncRestore1 struct {
	Description  *string `json:"description,omitempty"`
	TransferMode *string `json:"transfer_mode,omitempty"`
	Path         *string `json:"path,omitempty"`
}

// NewCloudsyncRestore1 instantiates a new CloudsyncRestore1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudsyncRestore1() *CloudsyncRestore1 {
	this := CloudsyncRestore1{}
	return &this
}

// NewCloudsyncRestore1WithDefaults instantiates a new CloudsyncRestore1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudsyncRestore1WithDefaults() *CloudsyncRestore1 {
	this := CloudsyncRestore1{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CloudsyncRestore1) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudsyncRestore1) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CloudsyncRestore1) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CloudsyncRestore1) SetDescription(v string) {
	o.Description = &v
}

// GetTransferMode returns the TransferMode field value if set, zero value otherwise.
func (o *CloudsyncRestore1) GetTransferMode() string {
	if o == nil || o.TransferMode == nil {
		var ret string
		return ret
	}
	return *o.TransferMode
}

// GetTransferModeOk returns a tuple with the TransferMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudsyncRestore1) GetTransferModeOk() (*string, bool) {
	if o == nil || o.TransferMode == nil {
		return nil, false
	}
	return o.TransferMode, true
}

// HasTransferMode returns a boolean if a field has been set.
func (o *CloudsyncRestore1) HasTransferMode() bool {
	if o != nil && o.TransferMode != nil {
		return true
	}

	return false
}

// SetTransferMode gets a reference to the given string and assigns it to the TransferMode field.
func (o *CloudsyncRestore1) SetTransferMode(v string) {
	o.TransferMode = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *CloudsyncRestore1) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudsyncRestore1) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *CloudsyncRestore1) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *CloudsyncRestore1) SetPath(v string) {
	o.Path = &v
}

func (o CloudsyncRestore1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.TransferMode != nil {
		toSerialize["transfer_mode"] = o.TransferMode
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableCloudsyncRestore1 struct {
	value *CloudsyncRestore1
	isSet bool
}

func (v NullableCloudsyncRestore1) Get() *CloudsyncRestore1 {
	return v.value
}

func (v *NullableCloudsyncRestore1) Set(val *CloudsyncRestore1) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudsyncRestore1) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudsyncRestore1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudsyncRestore1(val *CloudsyncRestore1) *NullableCloudsyncRestore1 {
	return &NullableCloudsyncRestore1{value: val, isSet: true}
}

func (v NullableCloudsyncRestore1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudsyncRestore1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
