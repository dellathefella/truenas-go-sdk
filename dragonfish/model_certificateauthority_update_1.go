/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// CertificateauthorityUpdate1 struct for CertificateauthorityUpdate1
type CertificateauthorityUpdate1 struct {
	Revoked    *bool   `json:"revoked,omitempty"`
	CaId       *int32  `json:"ca_id,omitempty"`
	CsrCertId  *int32  `json:"csr_cert_id,omitempty"`
	CreateType *string `json:"create_type,omitempty"`
	Name       *string `json:"name,omitempty"`
}

// NewCertificateauthorityUpdate1 instantiates a new CertificateauthorityUpdate1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateauthorityUpdate1() *CertificateauthorityUpdate1 {
	this := CertificateauthorityUpdate1{}
	return &this
}

// NewCertificateauthorityUpdate1WithDefaults instantiates a new CertificateauthorityUpdate1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateauthorityUpdate1WithDefaults() *CertificateauthorityUpdate1 {
	this := CertificateauthorityUpdate1{}
	return &this
}

// GetRevoked returns the Revoked field value if set, zero value otherwise.
func (o *CertificateauthorityUpdate1) GetRevoked() bool {
	if o == nil || o.Revoked == nil {
		var ret bool
		return ret
	}
	return *o.Revoked
}

// GetRevokedOk returns a tuple with the Revoked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityUpdate1) GetRevokedOk() (*bool, bool) {
	if o == nil || o.Revoked == nil {
		return nil, false
	}
	return o.Revoked, true
}

// HasRevoked returns a boolean if a field has been set.
func (o *CertificateauthorityUpdate1) HasRevoked() bool {
	if o != nil && o.Revoked != nil {
		return true
	}

	return false
}

// SetRevoked gets a reference to the given bool and assigns it to the Revoked field.
func (o *CertificateauthorityUpdate1) SetRevoked(v bool) {
	o.Revoked = &v
}

// GetCaId returns the CaId field value if set, zero value otherwise.
func (o *CertificateauthorityUpdate1) GetCaId() int32 {
	if o == nil || o.CaId == nil {
		var ret int32
		return ret
	}
	return *o.CaId
}

// GetCaIdOk returns a tuple with the CaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityUpdate1) GetCaIdOk() (*int32, bool) {
	if o == nil || o.CaId == nil {
		return nil, false
	}
	return o.CaId, true
}

// HasCaId returns a boolean if a field has been set.
func (o *CertificateauthorityUpdate1) HasCaId() bool {
	if o != nil && o.CaId != nil {
		return true
	}

	return false
}

// SetCaId gets a reference to the given int32 and assigns it to the CaId field.
func (o *CertificateauthorityUpdate1) SetCaId(v int32) {
	o.CaId = &v
}

// GetCsrCertId returns the CsrCertId field value if set, zero value otherwise.
func (o *CertificateauthorityUpdate1) GetCsrCertId() int32 {
	if o == nil || o.CsrCertId == nil {
		var ret int32
		return ret
	}
	return *o.CsrCertId
}

// GetCsrCertIdOk returns a tuple with the CsrCertId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityUpdate1) GetCsrCertIdOk() (*int32, bool) {
	if o == nil || o.CsrCertId == nil {
		return nil, false
	}
	return o.CsrCertId, true
}

// HasCsrCertId returns a boolean if a field has been set.
func (o *CertificateauthorityUpdate1) HasCsrCertId() bool {
	if o != nil && o.CsrCertId != nil {
		return true
	}

	return false
}

// SetCsrCertId gets a reference to the given int32 and assigns it to the CsrCertId field.
func (o *CertificateauthorityUpdate1) SetCsrCertId(v int32) {
	o.CsrCertId = &v
}

// GetCreateType returns the CreateType field value if set, zero value otherwise.
func (o *CertificateauthorityUpdate1) GetCreateType() string {
	if o == nil || o.CreateType == nil {
		var ret string
		return ret
	}
	return *o.CreateType
}

// GetCreateTypeOk returns a tuple with the CreateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityUpdate1) GetCreateTypeOk() (*string, bool) {
	if o == nil || o.CreateType == nil {
		return nil, false
	}
	return o.CreateType, true
}

// HasCreateType returns a boolean if a field has been set.
func (o *CertificateauthorityUpdate1) HasCreateType() bool {
	if o != nil && o.CreateType != nil {
		return true
	}

	return false
}

// SetCreateType gets a reference to the given string and assigns it to the CreateType field.
func (o *CertificateauthorityUpdate1) SetCreateType(v string) {
	o.CreateType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CertificateauthorityUpdate1) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityUpdate1) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CertificateauthorityUpdate1) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CertificateauthorityUpdate1) SetName(v string) {
	o.Name = &v
}

func (o CertificateauthorityUpdate1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Revoked != nil {
		toSerialize["revoked"] = o.Revoked
	}
	if o.CaId != nil {
		toSerialize["ca_id"] = o.CaId
	}
	if o.CsrCertId != nil {
		toSerialize["csr_cert_id"] = o.CsrCertId
	}
	if o.CreateType != nil {
		toSerialize["create_type"] = o.CreateType
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCertificateauthorityUpdate1 struct {
	value *CertificateauthorityUpdate1
	isSet bool
}

func (v NullableCertificateauthorityUpdate1) Get() *CertificateauthorityUpdate1 {
	return v.value
}

func (v *NullableCertificateauthorityUpdate1) Set(val *CertificateauthorityUpdate1) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateauthorityUpdate1) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateauthorityUpdate1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateauthorityUpdate1(val *CertificateauthorityUpdate1) *NullableCertificateauthorityUpdate1 {
	return &NullableCertificateauthorityUpdate1{value: val, isSet: true}
}

func (v NullableCertificateauthorityUpdate1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateauthorityUpdate1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
