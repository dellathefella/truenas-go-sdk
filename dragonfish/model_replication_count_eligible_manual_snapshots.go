/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// ReplicationCountEligibleManualSnapshots struct for ReplicationCountEligibleManualSnapshots
type ReplicationCountEligibleManualSnapshots struct {
	Datasets             []string                                  `json:"datasets,omitempty"`
	NamingSchema         []string                                  `json:"naming_schema,omitempty"`
	Transport            *ReplicationCountEligibleManualSnapshots2 `json:"transport,omitempty"`
	SshCredentials       NullableInt32                             `json:"ssh_credentials,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ReplicationCountEligibleManualSnapshots ReplicationCountEligibleManualSnapshots

// NewReplicationCountEligibleManualSnapshots instantiates a new ReplicationCountEligibleManualSnapshots object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationCountEligibleManualSnapshots() *ReplicationCountEligibleManualSnapshots {
	this := ReplicationCountEligibleManualSnapshots{}
	return &this
}

// NewReplicationCountEligibleManualSnapshotsWithDefaults instantiates a new ReplicationCountEligibleManualSnapshots object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationCountEligibleManualSnapshotsWithDefaults() *ReplicationCountEligibleManualSnapshots {
	this := ReplicationCountEligibleManualSnapshots{}
	return &this
}

// GetDatasets returns the Datasets field value if set, zero value otherwise.
func (o *ReplicationCountEligibleManualSnapshots) GetDatasets() []string {
	if o == nil || o.Datasets == nil {
		var ret []string
		return ret
	}
	return o.Datasets
}

// GetDatasetsOk returns a tuple with the Datasets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationCountEligibleManualSnapshots) GetDatasetsOk() ([]string, bool) {
	if o == nil || o.Datasets == nil {
		return nil, false
	}
	return o.Datasets, true
}

// HasDatasets returns a boolean if a field has been set.
func (o *ReplicationCountEligibleManualSnapshots) HasDatasets() bool {
	if o != nil && o.Datasets != nil {
		return true
	}

	return false
}

// SetDatasets gets a reference to the given []string and assigns it to the Datasets field.
func (o *ReplicationCountEligibleManualSnapshots) SetDatasets(v []string) {
	o.Datasets = v
}

// GetNamingSchema returns the NamingSchema field value if set, zero value otherwise.
func (o *ReplicationCountEligibleManualSnapshots) GetNamingSchema() []string {
	if o == nil || o.NamingSchema == nil {
		var ret []string
		return ret
	}
	return o.NamingSchema
}

// GetNamingSchemaOk returns a tuple with the NamingSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationCountEligibleManualSnapshots) GetNamingSchemaOk() ([]string, bool) {
	if o == nil || o.NamingSchema == nil {
		return nil, false
	}
	return o.NamingSchema, true
}

// HasNamingSchema returns a boolean if a field has been set.
func (o *ReplicationCountEligibleManualSnapshots) HasNamingSchema() bool {
	if o != nil && o.NamingSchema != nil {
		return true
	}

	return false
}

// SetNamingSchema gets a reference to the given []string and assigns it to the NamingSchema field.
func (o *ReplicationCountEligibleManualSnapshots) SetNamingSchema(v []string) {
	o.NamingSchema = v
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *ReplicationCountEligibleManualSnapshots) GetTransport() ReplicationCountEligibleManualSnapshots2 {
	if o == nil || o.Transport == nil {
		var ret ReplicationCountEligibleManualSnapshots2
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationCountEligibleManualSnapshots) GetTransportOk() (*ReplicationCountEligibleManualSnapshots2, bool) {
	if o == nil || o.Transport == nil {
		return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *ReplicationCountEligibleManualSnapshots) HasTransport() bool {
	if o != nil && o.Transport != nil {
		return true
	}

	return false
}

// SetTransport gets a reference to the given ReplicationCountEligibleManualSnapshots2 and assigns it to the Transport field.
func (o *ReplicationCountEligibleManualSnapshots) SetTransport(v ReplicationCountEligibleManualSnapshots2) {
	o.Transport = &v
}

// GetSshCredentials returns the SshCredentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationCountEligibleManualSnapshots) GetSshCredentials() int32 {
	if o == nil || o.SshCredentials.Get() == nil {
		var ret int32
		return ret
	}
	return *o.SshCredentials.Get()
}

// GetSshCredentialsOk returns a tuple with the SshCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationCountEligibleManualSnapshots) GetSshCredentialsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshCredentials.Get(), o.SshCredentials.IsSet()
}

// HasSshCredentials returns a boolean if a field has been set.
func (o *ReplicationCountEligibleManualSnapshots) HasSshCredentials() bool {
	if o != nil && o.SshCredentials.IsSet() {
		return true
	}

	return false
}

// SetSshCredentials gets a reference to the given NullableInt32 and assigns it to the SshCredentials field.
func (o *ReplicationCountEligibleManualSnapshots) SetSshCredentials(v int32) {
	o.SshCredentials.Set(&v)
}

// SetSshCredentialsNil sets the value for SshCredentials to be an explicit nil
func (o *ReplicationCountEligibleManualSnapshots) SetSshCredentialsNil() {
	o.SshCredentials.Set(nil)
}

// UnsetSshCredentials ensures that no value is present for SshCredentials, not even an explicit nil
func (o *ReplicationCountEligibleManualSnapshots) UnsetSshCredentials() {
	o.SshCredentials.Unset()
}

func (o ReplicationCountEligibleManualSnapshots) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Datasets != nil {
		toSerialize["datasets"] = o.Datasets
	}
	if o.NamingSchema != nil {
		toSerialize["naming_schema"] = o.NamingSchema
	}
	if o.Transport != nil {
		toSerialize["transport"] = o.Transport
	}
	if o.SshCredentials.IsSet() {
		toSerialize["ssh_credentials"] = o.SshCredentials.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ReplicationCountEligibleManualSnapshots) UnmarshalJSON(bytes []byte) (err error) {
	varReplicationCountEligibleManualSnapshots := _ReplicationCountEligibleManualSnapshots{}

	if err = json.Unmarshal(bytes, &varReplicationCountEligibleManualSnapshots); err == nil {
		*o = ReplicationCountEligibleManualSnapshots(varReplicationCountEligibleManualSnapshots)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "datasets")
		delete(additionalProperties, "naming_schema")
		delete(additionalProperties, "transport")
		delete(additionalProperties, "ssh_credentials")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableReplicationCountEligibleManualSnapshots struct {
	value *ReplicationCountEligibleManualSnapshots
	isSet bool
}

func (v NullableReplicationCountEligibleManualSnapshots) Get() *ReplicationCountEligibleManualSnapshots {
	return v.value
}

func (v *NullableReplicationCountEligibleManualSnapshots) Set(val *ReplicationCountEligibleManualSnapshots) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationCountEligibleManualSnapshots) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationCountEligibleManualSnapshots) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationCountEligibleManualSnapshots(val *ReplicationCountEligibleManualSnapshots) *NullableReplicationCountEligibleManualSnapshots {
	return &NullableReplicationCountEligibleManualSnapshots{value: val, isSet: true}
}

func (v NullableReplicationCountEligibleManualSnapshots) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationCountEligibleManualSnapshots) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
