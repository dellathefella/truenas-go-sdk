/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// JailExport0 struct for JailExport0
type JailExport0 struct {
	Jail                 *string `json:"jail,omitempty"`
	CompressionAlgorithm *string `json:"compression_algorithm,omitempty"`
}

// NewJailExport0 instantiates a new JailExport0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJailExport0() *JailExport0 {
	this := JailExport0{}
	return &this
}

// NewJailExport0WithDefaults instantiates a new JailExport0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJailExport0WithDefaults() *JailExport0 {
	this := JailExport0{}
	return &this
}

// GetJail returns the Jail field value if set, zero value otherwise.
func (o *JailExport0) GetJail() string {
	if o == nil || o.Jail == nil {
		var ret string
		return ret
	}
	return *o.Jail
}

// GetJailOk returns a tuple with the Jail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JailExport0) GetJailOk() (*string, bool) {
	if o == nil || o.Jail == nil {
		return nil, false
	}
	return o.Jail, true
}

// HasJail returns a boolean if a field has been set.
func (o *JailExport0) HasJail() bool {
	if o != nil && o.Jail != nil {
		return true
	}

	return false
}

// SetJail gets a reference to the given string and assigns it to the Jail field.
func (o *JailExport0) SetJail(v string) {
	o.Jail = &v
}

// GetCompressionAlgorithm returns the CompressionAlgorithm field value if set, zero value otherwise.
func (o *JailExport0) GetCompressionAlgorithm() string {
	if o == nil || o.CompressionAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.CompressionAlgorithm
}

// GetCompressionAlgorithmOk returns a tuple with the CompressionAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JailExport0) GetCompressionAlgorithmOk() (*string, bool) {
	if o == nil || o.CompressionAlgorithm == nil {
		return nil, false
	}
	return o.CompressionAlgorithm, true
}

// HasCompressionAlgorithm returns a boolean if a field has been set.
func (o *JailExport0) HasCompressionAlgorithm() bool {
	if o != nil && o.CompressionAlgorithm != nil {
		return true
	}

	return false
}

// SetCompressionAlgorithm gets a reference to the given string and assigns it to the CompressionAlgorithm field.
func (o *JailExport0) SetCompressionAlgorithm(v string) {
	o.CompressionAlgorithm = &v
}

func (o JailExport0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Jail != nil {
		toSerialize["jail"] = o.Jail
	}
	if o.CompressionAlgorithm != nil {
		toSerialize["compression_algorithm"] = o.CompressionAlgorithm
	}
	return json.Marshal(toSerialize)
}

type NullableJailExport0 struct {
	value *JailExport0
	isSet bool
}

func (v NullableJailExport0) Get() *JailExport0 {
	return v.value
}

func (v *NullableJailExport0) Set(val *JailExport0) {
	v.value = val
	v.isSet = true
}

func (v NullableJailExport0) IsSet() bool {
	return v.isSet
}

func (v *NullableJailExport0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJailExport0(val *JailExport0) *NullableJailExport0 {
	return &NullableJailExport0{value: val, isSet: true}
}

func (v NullableJailExport0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJailExport0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
