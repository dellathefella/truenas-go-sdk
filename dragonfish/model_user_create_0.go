/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// UserCreate0 struct for UserCreate0
type UserCreate0 struct {
	Uid              *int32                 `json:"uid,omitempty"`
	Username         *string                `json:"username,omitempty"`
	Group            *int32                 `json:"group,omitempty"`
	GroupCreate      *bool                  `json:"group_create,omitempty"`
	Home             *string                `json:"home,omitempty"`
	HomeMode         *string                `json:"home_mode,omitempty"`
	Shell            *string                `json:"shell,omitempty"`
	FullName         *string                `json:"full_name,omitempty"`
	Email            NullableString         `json:"email,omitempty"`
	Password         *string                `json:"password,omitempty"`
	PasswordDisabled *bool                  `json:"password_disabled,omitempty"`
	Locked           *bool                  `json:"locked,omitempty"`
	MicrosoftAccount *bool                  `json:"microsoft_account,omitempty"`
	Smb              *bool                  `json:"smb,omitempty"`
	Sudo             *bool                  `json:"sudo,omitempty"`
	SudoNopasswd     *bool                  `json:"sudo_nopasswd,omitempty"`
	SudoCommands     []string               `json:"sudo_commands,omitempty"`
	Sshpubkey        NullableString         `json:"sshpubkey,omitempty"`
	Groups           []interface{}          `json:"groups,omitempty"`
	Attributes       map[string]interface{} `json:"attributes,omitempty"`
}

// NewUserCreate0 instantiates a new UserCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreate0() *UserCreate0 {
	this := UserCreate0{}
	return &this
}

// NewUserCreate0WithDefaults instantiates a new UserCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreate0WithDefaults() *UserCreate0 {
	this := UserCreate0{}
	return &this
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *UserCreate0) GetUid() int32 {
	if o == nil || o.Uid == nil {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetUidOk() (*int32, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *UserCreate0) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *UserCreate0) SetUid(v int32) {
	o.Uid = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *UserCreate0) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *UserCreate0) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *UserCreate0) SetUsername(v string) {
	o.Username = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *UserCreate0) GetGroup() int32 {
	if o == nil || o.Group == nil {
		var ret int32
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetGroupOk() (*int32, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *UserCreate0) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given int32 and assigns it to the Group field.
func (o *UserCreate0) SetGroup(v int32) {
	o.Group = &v
}

// GetGroupCreate returns the GroupCreate field value if set, zero value otherwise.
func (o *UserCreate0) GetGroupCreate() bool {
	if o == nil || o.GroupCreate == nil {
		var ret bool
		return ret
	}
	return *o.GroupCreate
}

// GetGroupCreateOk returns a tuple with the GroupCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetGroupCreateOk() (*bool, bool) {
	if o == nil || o.GroupCreate == nil {
		return nil, false
	}
	return o.GroupCreate, true
}

// HasGroupCreate returns a boolean if a field has been set.
func (o *UserCreate0) HasGroupCreate() bool {
	if o != nil && o.GroupCreate != nil {
		return true
	}

	return false
}

// SetGroupCreate gets a reference to the given bool and assigns it to the GroupCreate field.
func (o *UserCreate0) SetGroupCreate(v bool) {
	o.GroupCreate = &v
}

// GetHome returns the Home field value if set, zero value otherwise.
func (o *UserCreate0) GetHome() string {
	if o == nil || o.Home == nil {
		var ret string
		return ret
	}
	return *o.Home
}

// GetHomeOk returns a tuple with the Home field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetHomeOk() (*string, bool) {
	if o == nil || o.Home == nil {
		return nil, false
	}
	return o.Home, true
}

// HasHome returns a boolean if a field has been set.
func (o *UserCreate0) HasHome() bool {
	if o != nil && o.Home != nil {
		return true
	}

	return false
}

// SetHome gets a reference to the given string and assigns it to the Home field.
func (o *UserCreate0) SetHome(v string) {
	o.Home = &v
}

// GetHomeMode returns the HomeMode field value if set, zero value otherwise.
func (o *UserCreate0) GetHomeMode() string {
	if o == nil || o.HomeMode == nil {
		var ret string
		return ret
	}
	return *o.HomeMode
}

// GetHomeModeOk returns a tuple with the HomeMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetHomeModeOk() (*string, bool) {
	if o == nil || o.HomeMode == nil {
		return nil, false
	}
	return o.HomeMode, true
}

// HasHomeMode returns a boolean if a field has been set.
func (o *UserCreate0) HasHomeMode() bool {
	if o != nil && o.HomeMode != nil {
		return true
	}

	return false
}

// SetHomeMode gets a reference to the given string and assigns it to the HomeMode field.
func (o *UserCreate0) SetHomeMode(v string) {
	o.HomeMode = &v
}

// GetShell returns the Shell field value if set, zero value otherwise.
func (o *UserCreate0) GetShell() string {
	if o == nil || o.Shell == nil {
		var ret string
		return ret
	}
	return *o.Shell
}

// GetShellOk returns a tuple with the Shell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetShellOk() (*string, bool) {
	if o == nil || o.Shell == nil {
		return nil, false
	}
	return o.Shell, true
}

// HasShell returns a boolean if a field has been set.
func (o *UserCreate0) HasShell() bool {
	if o != nil && o.Shell != nil {
		return true
	}

	return false
}

// SetShell gets a reference to the given string and assigns it to the Shell field.
func (o *UserCreate0) SetShell(v string) {
	o.Shell = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *UserCreate0) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *UserCreate0) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *UserCreate0) SetFullName(v string) {
	o.FullName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreate0) GetEmail() string {
	if o == nil || o.Email.Get() == nil {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreate0) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *UserCreate0) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *UserCreate0) SetEmail(v string) {
	o.Email.Set(&v)
}

// SetEmailNil sets the value for Email to be an explicit nil
func (o *UserCreate0) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *UserCreate0) UnsetEmail() {
	o.Email.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UserCreate0) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UserCreate0) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UserCreate0) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordDisabled returns the PasswordDisabled field value if set, zero value otherwise.
func (o *UserCreate0) GetPasswordDisabled() bool {
	if o == nil || o.PasswordDisabled == nil {
		var ret bool
		return ret
	}
	return *o.PasswordDisabled
}

// GetPasswordDisabledOk returns a tuple with the PasswordDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetPasswordDisabledOk() (*bool, bool) {
	if o == nil || o.PasswordDisabled == nil {
		return nil, false
	}
	return o.PasswordDisabled, true
}

// HasPasswordDisabled returns a boolean if a field has been set.
func (o *UserCreate0) HasPasswordDisabled() bool {
	if o != nil && o.PasswordDisabled != nil {
		return true
	}

	return false
}

// SetPasswordDisabled gets a reference to the given bool and assigns it to the PasswordDisabled field.
func (o *UserCreate0) SetPasswordDisabled(v bool) {
	o.PasswordDisabled = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *UserCreate0) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *UserCreate0) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *UserCreate0) SetLocked(v bool) {
	o.Locked = &v
}

// GetMicrosoftAccount returns the MicrosoftAccount field value if set, zero value otherwise.
func (o *UserCreate0) GetMicrosoftAccount() bool {
	if o == nil || o.MicrosoftAccount == nil {
		var ret bool
		return ret
	}
	return *o.MicrosoftAccount
}

// GetMicrosoftAccountOk returns a tuple with the MicrosoftAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetMicrosoftAccountOk() (*bool, bool) {
	if o == nil || o.MicrosoftAccount == nil {
		return nil, false
	}
	return o.MicrosoftAccount, true
}

// HasMicrosoftAccount returns a boolean if a field has been set.
func (o *UserCreate0) HasMicrosoftAccount() bool {
	if o != nil && o.MicrosoftAccount != nil {
		return true
	}

	return false
}

// SetMicrosoftAccount gets a reference to the given bool and assigns it to the MicrosoftAccount field.
func (o *UserCreate0) SetMicrosoftAccount(v bool) {
	o.MicrosoftAccount = &v
}

// GetSmb returns the Smb field value if set, zero value otherwise.
func (o *UserCreate0) GetSmb() bool {
	if o == nil || o.Smb == nil {
		var ret bool
		return ret
	}
	return *o.Smb
}

// GetSmbOk returns a tuple with the Smb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetSmbOk() (*bool, bool) {
	if o == nil || o.Smb == nil {
		return nil, false
	}
	return o.Smb, true
}

// HasSmb returns a boolean if a field has been set.
func (o *UserCreate0) HasSmb() bool {
	if o != nil && o.Smb != nil {
		return true
	}

	return false
}

// SetSmb gets a reference to the given bool and assigns it to the Smb field.
func (o *UserCreate0) SetSmb(v bool) {
	o.Smb = &v
}

// GetSudo returns the Sudo field value if set, zero value otherwise.
func (o *UserCreate0) GetSudo() bool {
	if o == nil || o.Sudo == nil {
		var ret bool
		return ret
	}
	return *o.Sudo
}

// GetSudoOk returns a tuple with the Sudo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetSudoOk() (*bool, bool) {
	if o == nil || o.Sudo == nil {
		return nil, false
	}
	return o.Sudo, true
}

// HasSudo returns a boolean if a field has been set.
func (o *UserCreate0) HasSudo() bool {
	if o != nil && o.Sudo != nil {
		return true
	}

	return false
}

// SetSudo gets a reference to the given bool and assigns it to the Sudo field.
func (o *UserCreate0) SetSudo(v bool) {
	o.Sudo = &v
}

// GetSudoNopasswd returns the SudoNopasswd field value if set, zero value otherwise.
func (o *UserCreate0) GetSudoNopasswd() bool {
	if o == nil || o.SudoNopasswd == nil {
		var ret bool
		return ret
	}
	return *o.SudoNopasswd
}

// GetSudoNopasswdOk returns a tuple with the SudoNopasswd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetSudoNopasswdOk() (*bool, bool) {
	if o == nil || o.SudoNopasswd == nil {
		return nil, false
	}
	return o.SudoNopasswd, true
}

// HasSudoNopasswd returns a boolean if a field has been set.
func (o *UserCreate0) HasSudoNopasswd() bool {
	if o != nil && o.SudoNopasswd != nil {
		return true
	}

	return false
}

// SetSudoNopasswd gets a reference to the given bool and assigns it to the SudoNopasswd field.
func (o *UserCreate0) SetSudoNopasswd(v bool) {
	o.SudoNopasswd = &v
}

// GetSudoCommands returns the SudoCommands field value if set, zero value otherwise.
func (o *UserCreate0) GetSudoCommands() []string {
	if o == nil || o.SudoCommands == nil {
		var ret []string
		return ret
	}
	return o.SudoCommands
}

// GetSudoCommandsOk returns a tuple with the SudoCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetSudoCommandsOk() ([]string, bool) {
	if o == nil || o.SudoCommands == nil {
		return nil, false
	}
	return o.SudoCommands, true
}

// HasSudoCommands returns a boolean if a field has been set.
func (o *UserCreate0) HasSudoCommands() bool {
	if o != nil && o.SudoCommands != nil {
		return true
	}

	return false
}

// SetSudoCommands gets a reference to the given []string and assigns it to the SudoCommands field.
func (o *UserCreate0) SetSudoCommands(v []string) {
	o.SudoCommands = v
}

// GetSshpubkey returns the Sshpubkey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreate0) GetSshpubkey() string {
	if o == nil || o.Sshpubkey.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sshpubkey.Get()
}

// GetSshpubkeyOk returns a tuple with the Sshpubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreate0) GetSshpubkeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sshpubkey.Get(), o.Sshpubkey.IsSet()
}

// HasSshpubkey returns a boolean if a field has been set.
func (o *UserCreate0) HasSshpubkey() bool {
	if o != nil && o.Sshpubkey.IsSet() {
		return true
	}

	return false
}

// SetSshpubkey gets a reference to the given NullableString and assigns it to the Sshpubkey field.
func (o *UserCreate0) SetSshpubkey(v string) {
	o.Sshpubkey.Set(&v)
}

// SetSshpubkeyNil sets the value for Sshpubkey to be an explicit nil
func (o *UserCreate0) SetSshpubkeyNil() {
	o.Sshpubkey.Set(nil)
}

// UnsetSshpubkey ensures that no value is present for Sshpubkey, not even an explicit nil
func (o *UserCreate0) UnsetSshpubkey() {
	o.Sshpubkey.Unset()
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *UserCreate0) GetGroups() []interface{} {
	if o == nil || o.Groups == nil {
		var ret []interface{}
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetGroupsOk() ([]interface{}, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *UserCreate0) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []interface{} and assigns it to the Groups field.
func (o *UserCreate0) SetGroups(v []interface{}) {
	o.Groups = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *UserCreate0) GetAttributes() map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreate0) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *UserCreate0) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *UserCreate0) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

func (o UserCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.GroupCreate != nil {
		toSerialize["group_create"] = o.GroupCreate
	}
	if o.Home != nil {
		toSerialize["home"] = o.Home
	}
	if o.HomeMode != nil {
		toSerialize["home_mode"] = o.HomeMode
	}
	if o.Shell != nil {
		toSerialize["shell"] = o.Shell
	}
	if o.FullName != nil {
		toSerialize["full_name"] = o.FullName
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.PasswordDisabled != nil {
		toSerialize["password_disabled"] = o.PasswordDisabled
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.MicrosoftAccount != nil {
		toSerialize["microsoft_account"] = o.MicrosoftAccount
	}
	if o.Smb != nil {
		toSerialize["smb"] = o.Smb
	}
	if o.Sudo != nil {
		toSerialize["sudo"] = o.Sudo
	}
	if o.SudoNopasswd != nil {
		toSerialize["sudo_nopasswd"] = o.SudoNopasswd
	}
	if o.SudoCommands != nil {
		toSerialize["sudo_commands"] = o.SudoCommands
	}
	if o.Sshpubkey.IsSet() {
		toSerialize["sshpubkey"] = o.Sshpubkey.Get()
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableUserCreate0 struct {
	value *UserCreate0
	isSet bool
}

func (v NullableUserCreate0) Get() *UserCreate0 {
	return v.value
}

func (v *NullableUserCreate0) Set(val *UserCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreate0(val *UserCreate0) *NullableUserCreate0 {
	return &NullableUserCreate0{value: val, isSet: true}
}

func (v NullableUserCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
