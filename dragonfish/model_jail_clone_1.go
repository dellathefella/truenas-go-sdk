/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// JailClone1 struct for JailClone1
type JailClone1 struct {
	Uuid      *string       `json:"uuid,omitempty"`
	Pkglist   []string      `json:"pkglist,omitempty"`
	Thickjail *bool         `json:"thickjail,omitempty"`
	Props     []interface{} `json:"props,omitempty"`
}

// NewJailClone1 instantiates a new JailClone1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJailClone1() *JailClone1 {
	this := JailClone1{}
	return &this
}

// NewJailClone1WithDefaults instantiates a new JailClone1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJailClone1WithDefaults() *JailClone1 {
	this := JailClone1{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *JailClone1) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JailClone1) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *JailClone1) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *JailClone1) SetUuid(v string) {
	o.Uuid = &v
}

// GetPkglist returns the Pkglist field value if set, zero value otherwise.
func (o *JailClone1) GetPkglist() []string {
	if o == nil || o.Pkglist == nil {
		var ret []string
		return ret
	}
	return o.Pkglist
}

// GetPkglistOk returns a tuple with the Pkglist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JailClone1) GetPkglistOk() ([]string, bool) {
	if o == nil || o.Pkglist == nil {
		return nil, false
	}
	return o.Pkglist, true
}

// HasPkglist returns a boolean if a field has been set.
func (o *JailClone1) HasPkglist() bool {
	if o != nil && o.Pkglist != nil {
		return true
	}

	return false
}

// SetPkglist gets a reference to the given []string and assigns it to the Pkglist field.
func (o *JailClone1) SetPkglist(v []string) {
	o.Pkglist = v
}

// GetThickjail returns the Thickjail field value if set, zero value otherwise.
func (o *JailClone1) GetThickjail() bool {
	if o == nil || o.Thickjail == nil {
		var ret bool
		return ret
	}
	return *o.Thickjail
}

// GetThickjailOk returns a tuple with the Thickjail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JailClone1) GetThickjailOk() (*bool, bool) {
	if o == nil || o.Thickjail == nil {
		return nil, false
	}
	return o.Thickjail, true
}

// HasThickjail returns a boolean if a field has been set.
func (o *JailClone1) HasThickjail() bool {
	if o != nil && o.Thickjail != nil {
		return true
	}

	return false
}

// SetThickjail gets a reference to the given bool and assigns it to the Thickjail field.
func (o *JailClone1) SetThickjail(v bool) {
	o.Thickjail = &v
}

// GetProps returns the Props field value if set, zero value otherwise.
func (o *JailClone1) GetProps() []interface{} {
	if o == nil || o.Props == nil {
		var ret []interface{}
		return ret
	}
	return o.Props
}

// GetPropsOk returns a tuple with the Props field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JailClone1) GetPropsOk() ([]interface{}, bool) {
	if o == nil || o.Props == nil {
		return nil, false
	}
	return o.Props, true
}

// HasProps returns a boolean if a field has been set.
func (o *JailClone1) HasProps() bool {
	if o != nil && o.Props != nil {
		return true
	}

	return false
}

// SetProps gets a reference to the given []interface{} and assigns it to the Props field.
func (o *JailClone1) SetProps(v []interface{}) {
	o.Props = v
}

func (o JailClone1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Pkglist != nil {
		toSerialize["pkglist"] = o.Pkglist
	}
	if o.Thickjail != nil {
		toSerialize["thickjail"] = o.Thickjail
	}
	if o.Props != nil {
		toSerialize["props"] = o.Props
	}
	return json.Marshal(toSerialize)
}

type NullableJailClone1 struct {
	value *JailClone1
	isSet bool
}

func (v NullableJailClone1) Get() *JailClone1 {
	return v.value
}

func (v *NullableJailClone1) Set(val *JailClone1) {
	v.value = val
	v.isSet = true
}

func (v NullableJailClone1) IsSet() bool {
	return v.isSet
}

func (v *NullableJailClone1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJailClone1(val *JailClone1) *NullableJailClone1 {
	return &NullableJailClone1{value: val, isSet: true}
}

func (v NullableJailClone1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJailClone1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
