/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
	"fmt"
)

// PoolDatasetGetQuota1 the model 'PoolDatasetGetQuota1'
type PoolDatasetGetQuota1 string

// List of pool_dataset_get_quota_1
const (
	USER    PoolDatasetGetQuota1 = "USER"
	GROUP   PoolDatasetGetQuota1 = "GROUP"
	DATASET PoolDatasetGetQuota1 = "DATASET"
)

// All allowed values of PoolDatasetGetQuota1 enum
var AllowedPoolDatasetGetQuota1EnumValues = []PoolDatasetGetQuota1{
	"USER",
	"GROUP",
	"DATASET",
}

func (v *PoolDatasetGetQuota1) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PoolDatasetGetQuota1(value)
	for _, existing := range AllowedPoolDatasetGetQuota1EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PoolDatasetGetQuota1", value)
}

// NewPoolDatasetGetQuota1FromValue returns a pointer to a valid PoolDatasetGetQuota1
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPoolDatasetGetQuota1FromValue(v string) (*PoolDatasetGetQuota1, error) {
	ev := PoolDatasetGetQuota1(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PoolDatasetGetQuota1: valid values are %v", v, AllowedPoolDatasetGetQuota1EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PoolDatasetGetQuota1) IsValid() bool {
	for _, existing := range AllowedPoolDatasetGetQuota1EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to pool_dataset_get_quota_1 value
func (v PoolDatasetGetQuota1) Ptr() *PoolDatasetGetQuota1 {
	return &v
}

type NullablePoolDatasetGetQuota1 struct {
	value *PoolDatasetGetQuota1
	isSet bool
}

func (v NullablePoolDatasetGetQuota1) Get() *PoolDatasetGetQuota1 {
	return v.value
}

func (v *NullablePoolDatasetGetQuota1) Set(val *PoolDatasetGetQuota1) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolDatasetGetQuota1) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolDatasetGetQuota1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolDatasetGetQuota1(val *PoolDatasetGetQuota1) *NullablePoolDatasetGetQuota1 {
	return &NullablePoolDatasetGetQuota1{value: val, isSet: true}
}

func (v NullablePoolDatasetGetQuota1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolDatasetGetQuota1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
