/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// ReplicationUpdate1 struct for ReplicationUpdate1
type ReplicationUpdate1 struct {
	Name                            *string                          `json:"name,omitempty"`
	Direction                       *string                          `json:"direction,omitempty"`
	Transport                       *string                          `json:"transport,omitempty"`
	SshCredentials                  NullableInt32                    `json:"ssh_credentials,omitempty"`
	NetcatActiveSide                NullableString                   `json:"netcat_active_side,omitempty"`
	NetcatActiveSideListenAddress   NullableString                   `json:"netcat_active_side_listen_address,omitempty"`
	NetcatActiveSidePortMin         NullableInt32                    `json:"netcat_active_side_port_min,omitempty"`
	NetcatActiveSidePortMax         NullableInt32                    `json:"netcat_active_side_port_max,omitempty"`
	NetcatPassiveSideConnectAddress NullableString                   `json:"netcat_passive_side_connect_address,omitempty"`
	SourceDatasets                  []string                         `json:"source_datasets,omitempty"`
	TargetDataset                   *string                          `json:"target_dataset,omitempty"`
	Recursive                       *bool                            `json:"recursive,omitempty"`
	Exclude                         []string                         `json:"exclude,omitempty"`
	Properties                      *bool                            `json:"properties,omitempty"`
	PropertiesExclude               []string                         `json:"properties_exclude,omitempty"`
	Replicate                       *bool                            `json:"replicate,omitempty"`
	Encryption                      *bool                            `json:"encryption,omitempty"`
	EncryptionKey                   NullableString                   `json:"encryption_key,omitempty"`
	EncryptionKeyFormat             NullableString                   `json:"encryption_key_format,omitempty"`
	EncryptionKeyLocation           NullableString                   `json:"encryption_key_location,omitempty"`
	PeriodicSnapshotTasks           []int32                          `json:"periodic_snapshot_tasks,omitempty"`
	NamingSchema                    []string                         `json:"naming_schema,omitempty"`
	AlsoIncludeNamingSchema         []string                         `json:"also_include_naming_schema,omitempty"`
	Auto                            *bool                            `json:"auto,omitempty"`
	Schedule                        *PoolSnapshottaskCreate0Schedule `json:"schedule,omitempty"`
	RestrictSchedule                *PoolSnapshottaskCreate0Schedule `json:"restrict_schedule,omitempty"`
	OnlyMatchingSchedule            *bool                            `json:"only_matching_schedule,omitempty"`
	AllowFromScratch                *bool                            `json:"allow_from_scratch,omitempty"`
	Readonly                        *string                          `json:"readonly,omitempty"`
	HoldPendingSnapshots            *bool                            `json:"hold_pending_snapshots,omitempty"`
	RetentionPolicy                 *string                          `json:"retention_policy,omitempty"`
	LifetimeValue                   NullableInt32                    `json:"lifetime_value,omitempty"`
	LifetimeUnit                    NullableString                   `json:"lifetime_unit,omitempty"`
	Compression                     NullableString                   `json:"compression,omitempty"`
	SpeedLimit                      NullableInt32                    `json:"speed_limit,omitempty"`
	LargeBlock                      *bool                            `json:"large_block,omitempty"`
	Embed                           *bool                            `json:"embed,omitempty"`
	Compressed                      *bool                            `json:"compressed,omitempty"`
	Retries                         *int32                           `json:"retries,omitempty"`
	LoggingLevel                    NullableString                   `json:"logging_level,omitempty"`
	Enabled                         *bool                            `json:"enabled,omitempty"`
}

// NewReplicationUpdate1 instantiates a new ReplicationUpdate1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationUpdate1() *ReplicationUpdate1 {
	this := ReplicationUpdate1{}
	return &this
}

// NewReplicationUpdate1WithDefaults instantiates a new ReplicationUpdate1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationUpdate1WithDefaults() *ReplicationUpdate1 {
	this := ReplicationUpdate1{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ReplicationUpdate1) SetName(v string) {
	o.Name = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetDirection() string {
	if o == nil || o.Direction == nil {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetDirectionOk() (*string, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *ReplicationUpdate1) SetDirection(v string) {
	o.Direction = &v
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetTransport() string {
	if o == nil || o.Transport == nil {
		var ret string
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetTransportOk() (*string, bool) {
	if o == nil || o.Transport == nil {
		return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasTransport() bool {
	if o != nil && o.Transport != nil {
		return true
	}

	return false
}

// SetTransport gets a reference to the given string and assigns it to the Transport field.
func (o *ReplicationUpdate1) SetTransport(v string) {
	o.Transport = &v
}

// GetSshCredentials returns the SshCredentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetSshCredentials() int32 {
	if o == nil || o.SshCredentials.Get() == nil {
		var ret int32
		return ret
	}
	return *o.SshCredentials.Get()
}

// GetSshCredentialsOk returns a tuple with the SshCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetSshCredentialsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshCredentials.Get(), o.SshCredentials.IsSet()
}

// HasSshCredentials returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasSshCredentials() bool {
	if o != nil && o.SshCredentials.IsSet() {
		return true
	}

	return false
}

// SetSshCredentials gets a reference to the given NullableInt32 and assigns it to the SshCredentials field.
func (o *ReplicationUpdate1) SetSshCredentials(v int32) {
	o.SshCredentials.Set(&v)
}

// SetSshCredentialsNil sets the value for SshCredentials to be an explicit nil
func (o *ReplicationUpdate1) SetSshCredentialsNil() {
	o.SshCredentials.Set(nil)
}

// UnsetSshCredentials ensures that no value is present for SshCredentials, not even an explicit nil
func (o *ReplicationUpdate1) UnsetSshCredentials() {
	o.SshCredentials.Unset()
}

// GetNetcatActiveSide returns the NetcatActiveSide field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetNetcatActiveSide() string {
	if o == nil || o.NetcatActiveSide.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetcatActiveSide.Get()
}

// GetNetcatActiveSideOk returns a tuple with the NetcatActiveSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetNetcatActiveSideOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetcatActiveSide.Get(), o.NetcatActiveSide.IsSet()
}

// HasNetcatActiveSide returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasNetcatActiveSide() bool {
	if o != nil && o.NetcatActiveSide.IsSet() {
		return true
	}

	return false
}

// SetNetcatActiveSide gets a reference to the given NullableString and assigns it to the NetcatActiveSide field.
func (o *ReplicationUpdate1) SetNetcatActiveSide(v string) {
	o.NetcatActiveSide.Set(&v)
}

// SetNetcatActiveSideNil sets the value for NetcatActiveSide to be an explicit nil
func (o *ReplicationUpdate1) SetNetcatActiveSideNil() {
	o.NetcatActiveSide.Set(nil)
}

// UnsetNetcatActiveSide ensures that no value is present for NetcatActiveSide, not even an explicit nil
func (o *ReplicationUpdate1) UnsetNetcatActiveSide() {
	o.NetcatActiveSide.Unset()
}

// GetNetcatActiveSideListenAddress returns the NetcatActiveSideListenAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetNetcatActiveSideListenAddress() string {
	if o == nil || o.NetcatActiveSideListenAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetcatActiveSideListenAddress.Get()
}

// GetNetcatActiveSideListenAddressOk returns a tuple with the NetcatActiveSideListenAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetNetcatActiveSideListenAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetcatActiveSideListenAddress.Get(), o.NetcatActiveSideListenAddress.IsSet()
}

// HasNetcatActiveSideListenAddress returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasNetcatActiveSideListenAddress() bool {
	if o != nil && o.NetcatActiveSideListenAddress.IsSet() {
		return true
	}

	return false
}

// SetNetcatActiveSideListenAddress gets a reference to the given NullableString and assigns it to the NetcatActiveSideListenAddress field.
func (o *ReplicationUpdate1) SetNetcatActiveSideListenAddress(v string) {
	o.NetcatActiveSideListenAddress.Set(&v)
}

// SetNetcatActiveSideListenAddressNil sets the value for NetcatActiveSideListenAddress to be an explicit nil
func (o *ReplicationUpdate1) SetNetcatActiveSideListenAddressNil() {
	o.NetcatActiveSideListenAddress.Set(nil)
}

// UnsetNetcatActiveSideListenAddress ensures that no value is present for NetcatActiveSideListenAddress, not even an explicit nil
func (o *ReplicationUpdate1) UnsetNetcatActiveSideListenAddress() {
	o.NetcatActiveSideListenAddress.Unset()
}

// GetNetcatActiveSidePortMin returns the NetcatActiveSidePortMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetNetcatActiveSidePortMin() int32 {
	if o == nil || o.NetcatActiveSidePortMin.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NetcatActiveSidePortMin.Get()
}

// GetNetcatActiveSidePortMinOk returns a tuple with the NetcatActiveSidePortMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetNetcatActiveSidePortMinOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetcatActiveSidePortMin.Get(), o.NetcatActiveSidePortMin.IsSet()
}

// HasNetcatActiveSidePortMin returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasNetcatActiveSidePortMin() bool {
	if o != nil && o.NetcatActiveSidePortMin.IsSet() {
		return true
	}

	return false
}

// SetNetcatActiveSidePortMin gets a reference to the given NullableInt32 and assigns it to the NetcatActiveSidePortMin field.
func (o *ReplicationUpdate1) SetNetcatActiveSidePortMin(v int32) {
	o.NetcatActiveSidePortMin.Set(&v)
}

// SetNetcatActiveSidePortMinNil sets the value for NetcatActiveSidePortMin to be an explicit nil
func (o *ReplicationUpdate1) SetNetcatActiveSidePortMinNil() {
	o.NetcatActiveSidePortMin.Set(nil)
}

// UnsetNetcatActiveSidePortMin ensures that no value is present for NetcatActiveSidePortMin, not even an explicit nil
func (o *ReplicationUpdate1) UnsetNetcatActiveSidePortMin() {
	o.NetcatActiveSidePortMin.Unset()
}

// GetNetcatActiveSidePortMax returns the NetcatActiveSidePortMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetNetcatActiveSidePortMax() int32 {
	if o == nil || o.NetcatActiveSidePortMax.Get() == nil {
		var ret int32
		return ret
	}
	return *o.NetcatActiveSidePortMax.Get()
}

// GetNetcatActiveSidePortMaxOk returns a tuple with the NetcatActiveSidePortMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetNetcatActiveSidePortMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetcatActiveSidePortMax.Get(), o.NetcatActiveSidePortMax.IsSet()
}

// HasNetcatActiveSidePortMax returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasNetcatActiveSidePortMax() bool {
	if o != nil && o.NetcatActiveSidePortMax.IsSet() {
		return true
	}

	return false
}

// SetNetcatActiveSidePortMax gets a reference to the given NullableInt32 and assigns it to the NetcatActiveSidePortMax field.
func (o *ReplicationUpdate1) SetNetcatActiveSidePortMax(v int32) {
	o.NetcatActiveSidePortMax.Set(&v)
}

// SetNetcatActiveSidePortMaxNil sets the value for NetcatActiveSidePortMax to be an explicit nil
func (o *ReplicationUpdate1) SetNetcatActiveSidePortMaxNil() {
	o.NetcatActiveSidePortMax.Set(nil)
}

// UnsetNetcatActiveSidePortMax ensures that no value is present for NetcatActiveSidePortMax, not even an explicit nil
func (o *ReplicationUpdate1) UnsetNetcatActiveSidePortMax() {
	o.NetcatActiveSidePortMax.Unset()
}

// GetNetcatPassiveSideConnectAddress returns the NetcatPassiveSideConnectAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetNetcatPassiveSideConnectAddress() string {
	if o == nil || o.NetcatPassiveSideConnectAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetcatPassiveSideConnectAddress.Get()
}

// GetNetcatPassiveSideConnectAddressOk returns a tuple with the NetcatPassiveSideConnectAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetNetcatPassiveSideConnectAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetcatPassiveSideConnectAddress.Get(), o.NetcatPassiveSideConnectAddress.IsSet()
}

// HasNetcatPassiveSideConnectAddress returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasNetcatPassiveSideConnectAddress() bool {
	if o != nil && o.NetcatPassiveSideConnectAddress.IsSet() {
		return true
	}

	return false
}

// SetNetcatPassiveSideConnectAddress gets a reference to the given NullableString and assigns it to the NetcatPassiveSideConnectAddress field.
func (o *ReplicationUpdate1) SetNetcatPassiveSideConnectAddress(v string) {
	o.NetcatPassiveSideConnectAddress.Set(&v)
}

// SetNetcatPassiveSideConnectAddressNil sets the value for NetcatPassiveSideConnectAddress to be an explicit nil
func (o *ReplicationUpdate1) SetNetcatPassiveSideConnectAddressNil() {
	o.NetcatPassiveSideConnectAddress.Set(nil)
}

// UnsetNetcatPassiveSideConnectAddress ensures that no value is present for NetcatPassiveSideConnectAddress, not even an explicit nil
func (o *ReplicationUpdate1) UnsetNetcatPassiveSideConnectAddress() {
	o.NetcatPassiveSideConnectAddress.Unset()
}

// GetSourceDatasets returns the SourceDatasets field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetSourceDatasets() []string {
	if o == nil || o.SourceDatasets == nil {
		var ret []string
		return ret
	}
	return o.SourceDatasets
}

// GetSourceDatasetsOk returns a tuple with the SourceDatasets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetSourceDatasetsOk() ([]string, bool) {
	if o == nil || o.SourceDatasets == nil {
		return nil, false
	}
	return o.SourceDatasets, true
}

// HasSourceDatasets returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasSourceDatasets() bool {
	if o != nil && o.SourceDatasets != nil {
		return true
	}

	return false
}

// SetSourceDatasets gets a reference to the given []string and assigns it to the SourceDatasets field.
func (o *ReplicationUpdate1) SetSourceDatasets(v []string) {
	o.SourceDatasets = v
}

// GetTargetDataset returns the TargetDataset field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetTargetDataset() string {
	if o == nil || o.TargetDataset == nil {
		var ret string
		return ret
	}
	return *o.TargetDataset
}

// GetTargetDatasetOk returns a tuple with the TargetDataset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetTargetDatasetOk() (*string, bool) {
	if o == nil || o.TargetDataset == nil {
		return nil, false
	}
	return o.TargetDataset, true
}

// HasTargetDataset returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasTargetDataset() bool {
	if o != nil && o.TargetDataset != nil {
		return true
	}

	return false
}

// SetTargetDataset gets a reference to the given string and assigns it to the TargetDataset field.
func (o *ReplicationUpdate1) SetTargetDataset(v string) {
	o.TargetDataset = &v
}

// GetRecursive returns the Recursive field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetRecursive() bool {
	if o == nil || o.Recursive == nil {
		var ret bool
		return ret
	}
	return *o.Recursive
}

// GetRecursiveOk returns a tuple with the Recursive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetRecursiveOk() (*bool, bool) {
	if o == nil || o.Recursive == nil {
		return nil, false
	}
	return o.Recursive, true
}

// HasRecursive returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasRecursive() bool {
	if o != nil && o.Recursive != nil {
		return true
	}

	return false
}

// SetRecursive gets a reference to the given bool and assigns it to the Recursive field.
func (o *ReplicationUpdate1) SetRecursive(v bool) {
	o.Recursive = &v
}

// GetExclude returns the Exclude field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetExclude() []string {
	if o == nil || o.Exclude == nil {
		var ret []string
		return ret
	}
	return o.Exclude
}

// GetExcludeOk returns a tuple with the Exclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetExcludeOk() ([]string, bool) {
	if o == nil || o.Exclude == nil {
		return nil, false
	}
	return o.Exclude, true
}

// HasExclude returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasExclude() bool {
	if o != nil && o.Exclude != nil {
		return true
	}

	return false
}

// SetExclude gets a reference to the given []string and assigns it to the Exclude field.
func (o *ReplicationUpdate1) SetExclude(v []string) {
	o.Exclude = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetProperties() bool {
	if o == nil || o.Properties == nil {
		var ret bool
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetPropertiesOk() (*bool, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given bool and assigns it to the Properties field.
func (o *ReplicationUpdate1) SetProperties(v bool) {
	o.Properties = &v
}

// GetPropertiesExclude returns the PropertiesExclude field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetPropertiesExclude() []string {
	if o == nil || o.PropertiesExclude == nil {
		var ret []string
		return ret
	}
	return o.PropertiesExclude
}

// GetPropertiesExcludeOk returns a tuple with the PropertiesExclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetPropertiesExcludeOk() ([]string, bool) {
	if o == nil || o.PropertiesExclude == nil {
		return nil, false
	}
	return o.PropertiesExclude, true
}

// HasPropertiesExclude returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasPropertiesExclude() bool {
	if o != nil && o.PropertiesExclude != nil {
		return true
	}

	return false
}

// SetPropertiesExclude gets a reference to the given []string and assigns it to the PropertiesExclude field.
func (o *ReplicationUpdate1) SetPropertiesExclude(v []string) {
	o.PropertiesExclude = v
}

// GetReplicate returns the Replicate field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetReplicate() bool {
	if o == nil || o.Replicate == nil {
		var ret bool
		return ret
	}
	return *o.Replicate
}

// GetReplicateOk returns a tuple with the Replicate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetReplicateOk() (*bool, bool) {
	if o == nil || o.Replicate == nil {
		return nil, false
	}
	return o.Replicate, true
}

// HasReplicate returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasReplicate() bool {
	if o != nil && o.Replicate != nil {
		return true
	}

	return false
}

// SetReplicate gets a reference to the given bool and assigns it to the Replicate field.
func (o *ReplicationUpdate1) SetReplicate(v bool) {
	o.Replicate = &v
}

// GetEncryption returns the Encryption field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetEncryption() bool {
	if o == nil || o.Encryption == nil {
		var ret bool
		return ret
	}
	return *o.Encryption
}

// GetEncryptionOk returns a tuple with the Encryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetEncryptionOk() (*bool, bool) {
	if o == nil || o.Encryption == nil {
		return nil, false
	}
	return o.Encryption, true
}

// HasEncryption returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasEncryption() bool {
	if o != nil && o.Encryption != nil {
		return true
	}

	return false
}

// SetEncryption gets a reference to the given bool and assigns it to the Encryption field.
func (o *ReplicationUpdate1) SetEncryption(v bool) {
	o.Encryption = &v
}

// GetEncryptionKey returns the EncryptionKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetEncryptionKey() string {
	if o == nil || o.EncryptionKey.Get() == nil {
		var ret string
		return ret
	}
	return *o.EncryptionKey.Get()
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetEncryptionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncryptionKey.Get(), o.EncryptionKey.IsSet()
}

// HasEncryptionKey returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasEncryptionKey() bool {
	if o != nil && o.EncryptionKey.IsSet() {
		return true
	}

	return false
}

// SetEncryptionKey gets a reference to the given NullableString and assigns it to the EncryptionKey field.
func (o *ReplicationUpdate1) SetEncryptionKey(v string) {
	o.EncryptionKey.Set(&v)
}

// SetEncryptionKeyNil sets the value for EncryptionKey to be an explicit nil
func (o *ReplicationUpdate1) SetEncryptionKeyNil() {
	o.EncryptionKey.Set(nil)
}

// UnsetEncryptionKey ensures that no value is present for EncryptionKey, not even an explicit nil
func (o *ReplicationUpdate1) UnsetEncryptionKey() {
	o.EncryptionKey.Unset()
}

// GetEncryptionKeyFormat returns the EncryptionKeyFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetEncryptionKeyFormat() string {
	if o == nil || o.EncryptionKeyFormat.Get() == nil {
		var ret string
		return ret
	}
	return *o.EncryptionKeyFormat.Get()
}

// GetEncryptionKeyFormatOk returns a tuple with the EncryptionKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetEncryptionKeyFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncryptionKeyFormat.Get(), o.EncryptionKeyFormat.IsSet()
}

// HasEncryptionKeyFormat returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasEncryptionKeyFormat() bool {
	if o != nil && o.EncryptionKeyFormat.IsSet() {
		return true
	}

	return false
}

// SetEncryptionKeyFormat gets a reference to the given NullableString and assigns it to the EncryptionKeyFormat field.
func (o *ReplicationUpdate1) SetEncryptionKeyFormat(v string) {
	o.EncryptionKeyFormat.Set(&v)
}

// SetEncryptionKeyFormatNil sets the value for EncryptionKeyFormat to be an explicit nil
func (o *ReplicationUpdate1) SetEncryptionKeyFormatNil() {
	o.EncryptionKeyFormat.Set(nil)
}

// UnsetEncryptionKeyFormat ensures that no value is present for EncryptionKeyFormat, not even an explicit nil
func (o *ReplicationUpdate1) UnsetEncryptionKeyFormat() {
	o.EncryptionKeyFormat.Unset()
}

// GetEncryptionKeyLocation returns the EncryptionKeyLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetEncryptionKeyLocation() string {
	if o == nil || o.EncryptionKeyLocation.Get() == nil {
		var ret string
		return ret
	}
	return *o.EncryptionKeyLocation.Get()
}

// GetEncryptionKeyLocationOk returns a tuple with the EncryptionKeyLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetEncryptionKeyLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncryptionKeyLocation.Get(), o.EncryptionKeyLocation.IsSet()
}

// HasEncryptionKeyLocation returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasEncryptionKeyLocation() bool {
	if o != nil && o.EncryptionKeyLocation.IsSet() {
		return true
	}

	return false
}

// SetEncryptionKeyLocation gets a reference to the given NullableString and assigns it to the EncryptionKeyLocation field.
func (o *ReplicationUpdate1) SetEncryptionKeyLocation(v string) {
	o.EncryptionKeyLocation.Set(&v)
}

// SetEncryptionKeyLocationNil sets the value for EncryptionKeyLocation to be an explicit nil
func (o *ReplicationUpdate1) SetEncryptionKeyLocationNil() {
	o.EncryptionKeyLocation.Set(nil)
}

// UnsetEncryptionKeyLocation ensures that no value is present for EncryptionKeyLocation, not even an explicit nil
func (o *ReplicationUpdate1) UnsetEncryptionKeyLocation() {
	o.EncryptionKeyLocation.Unset()
}

// GetPeriodicSnapshotTasks returns the PeriodicSnapshotTasks field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetPeriodicSnapshotTasks() []int32 {
	if o == nil || o.PeriodicSnapshotTasks == nil {
		var ret []int32
		return ret
	}
	return o.PeriodicSnapshotTasks
}

// GetPeriodicSnapshotTasksOk returns a tuple with the PeriodicSnapshotTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetPeriodicSnapshotTasksOk() ([]int32, bool) {
	if o == nil || o.PeriodicSnapshotTasks == nil {
		return nil, false
	}
	return o.PeriodicSnapshotTasks, true
}

// HasPeriodicSnapshotTasks returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasPeriodicSnapshotTasks() bool {
	if o != nil && o.PeriodicSnapshotTasks != nil {
		return true
	}

	return false
}

// SetPeriodicSnapshotTasks gets a reference to the given []int32 and assigns it to the PeriodicSnapshotTasks field.
func (o *ReplicationUpdate1) SetPeriodicSnapshotTasks(v []int32) {
	o.PeriodicSnapshotTasks = v
}

// GetNamingSchema returns the NamingSchema field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetNamingSchema() []string {
	if o == nil || o.NamingSchema == nil {
		var ret []string
		return ret
	}
	return o.NamingSchema
}

// GetNamingSchemaOk returns a tuple with the NamingSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetNamingSchemaOk() ([]string, bool) {
	if o == nil || o.NamingSchema == nil {
		return nil, false
	}
	return o.NamingSchema, true
}

// HasNamingSchema returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasNamingSchema() bool {
	if o != nil && o.NamingSchema != nil {
		return true
	}

	return false
}

// SetNamingSchema gets a reference to the given []string and assigns it to the NamingSchema field.
func (o *ReplicationUpdate1) SetNamingSchema(v []string) {
	o.NamingSchema = v
}

// GetAlsoIncludeNamingSchema returns the AlsoIncludeNamingSchema field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetAlsoIncludeNamingSchema() []string {
	if o == nil || o.AlsoIncludeNamingSchema == nil {
		var ret []string
		return ret
	}
	return o.AlsoIncludeNamingSchema
}

// GetAlsoIncludeNamingSchemaOk returns a tuple with the AlsoIncludeNamingSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetAlsoIncludeNamingSchemaOk() ([]string, bool) {
	if o == nil || o.AlsoIncludeNamingSchema == nil {
		return nil, false
	}
	return o.AlsoIncludeNamingSchema, true
}

// HasAlsoIncludeNamingSchema returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasAlsoIncludeNamingSchema() bool {
	if o != nil && o.AlsoIncludeNamingSchema != nil {
		return true
	}

	return false
}

// SetAlsoIncludeNamingSchema gets a reference to the given []string and assigns it to the AlsoIncludeNamingSchema field.
func (o *ReplicationUpdate1) SetAlsoIncludeNamingSchema(v []string) {
	o.AlsoIncludeNamingSchema = v
}

// GetAuto returns the Auto field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetAuto() bool {
	if o == nil || o.Auto == nil {
		var ret bool
		return ret
	}
	return *o.Auto
}

// GetAutoOk returns a tuple with the Auto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetAutoOk() (*bool, bool) {
	if o == nil || o.Auto == nil {
		return nil, false
	}
	return o.Auto, true
}

// HasAuto returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasAuto() bool {
	if o != nil && o.Auto != nil {
		return true
	}

	return false
}

// SetAuto gets a reference to the given bool and assigns it to the Auto field.
func (o *ReplicationUpdate1) SetAuto(v bool) {
	o.Auto = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetSchedule() PoolSnapshottaskCreate0Schedule {
	if o == nil || o.Schedule == nil {
		var ret PoolSnapshottaskCreate0Schedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetScheduleOk() (*PoolSnapshottaskCreate0Schedule, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given PoolSnapshottaskCreate0Schedule and assigns it to the Schedule field.
func (o *ReplicationUpdate1) SetSchedule(v PoolSnapshottaskCreate0Schedule) {
	o.Schedule = &v
}

// GetRestrictSchedule returns the RestrictSchedule field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetRestrictSchedule() PoolSnapshottaskCreate0Schedule {
	if o == nil || o.RestrictSchedule == nil {
		var ret PoolSnapshottaskCreate0Schedule
		return ret
	}
	return *o.RestrictSchedule
}

// GetRestrictScheduleOk returns a tuple with the RestrictSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetRestrictScheduleOk() (*PoolSnapshottaskCreate0Schedule, bool) {
	if o == nil || o.RestrictSchedule == nil {
		return nil, false
	}
	return o.RestrictSchedule, true
}

// HasRestrictSchedule returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasRestrictSchedule() bool {
	if o != nil && o.RestrictSchedule != nil {
		return true
	}

	return false
}

// SetRestrictSchedule gets a reference to the given PoolSnapshottaskCreate0Schedule and assigns it to the RestrictSchedule field.
func (o *ReplicationUpdate1) SetRestrictSchedule(v PoolSnapshottaskCreate0Schedule) {
	o.RestrictSchedule = &v
}

// GetOnlyMatchingSchedule returns the OnlyMatchingSchedule field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetOnlyMatchingSchedule() bool {
	if o == nil || o.OnlyMatchingSchedule == nil {
		var ret bool
		return ret
	}
	return *o.OnlyMatchingSchedule
}

// GetOnlyMatchingScheduleOk returns a tuple with the OnlyMatchingSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetOnlyMatchingScheduleOk() (*bool, bool) {
	if o == nil || o.OnlyMatchingSchedule == nil {
		return nil, false
	}
	return o.OnlyMatchingSchedule, true
}

// HasOnlyMatchingSchedule returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasOnlyMatchingSchedule() bool {
	if o != nil && o.OnlyMatchingSchedule != nil {
		return true
	}

	return false
}

// SetOnlyMatchingSchedule gets a reference to the given bool and assigns it to the OnlyMatchingSchedule field.
func (o *ReplicationUpdate1) SetOnlyMatchingSchedule(v bool) {
	o.OnlyMatchingSchedule = &v
}

// GetAllowFromScratch returns the AllowFromScratch field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetAllowFromScratch() bool {
	if o == nil || o.AllowFromScratch == nil {
		var ret bool
		return ret
	}
	return *o.AllowFromScratch
}

// GetAllowFromScratchOk returns a tuple with the AllowFromScratch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetAllowFromScratchOk() (*bool, bool) {
	if o == nil || o.AllowFromScratch == nil {
		return nil, false
	}
	return o.AllowFromScratch, true
}

// HasAllowFromScratch returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasAllowFromScratch() bool {
	if o != nil && o.AllowFromScratch != nil {
		return true
	}

	return false
}

// SetAllowFromScratch gets a reference to the given bool and assigns it to the AllowFromScratch field.
func (o *ReplicationUpdate1) SetAllowFromScratch(v bool) {
	o.AllowFromScratch = &v
}

// GetReadonly returns the Readonly field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetReadonly() string {
	if o == nil || o.Readonly == nil {
		var ret string
		return ret
	}
	return *o.Readonly
}

// GetReadonlyOk returns a tuple with the Readonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetReadonlyOk() (*string, bool) {
	if o == nil || o.Readonly == nil {
		return nil, false
	}
	return o.Readonly, true
}

// HasReadonly returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasReadonly() bool {
	if o != nil && o.Readonly != nil {
		return true
	}

	return false
}

// SetReadonly gets a reference to the given string and assigns it to the Readonly field.
func (o *ReplicationUpdate1) SetReadonly(v string) {
	o.Readonly = &v
}

// GetHoldPendingSnapshots returns the HoldPendingSnapshots field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetHoldPendingSnapshots() bool {
	if o == nil || o.HoldPendingSnapshots == nil {
		var ret bool
		return ret
	}
	return *o.HoldPendingSnapshots
}

// GetHoldPendingSnapshotsOk returns a tuple with the HoldPendingSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetHoldPendingSnapshotsOk() (*bool, bool) {
	if o == nil || o.HoldPendingSnapshots == nil {
		return nil, false
	}
	return o.HoldPendingSnapshots, true
}

// HasHoldPendingSnapshots returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasHoldPendingSnapshots() bool {
	if o != nil && o.HoldPendingSnapshots != nil {
		return true
	}

	return false
}

// SetHoldPendingSnapshots gets a reference to the given bool and assigns it to the HoldPendingSnapshots field.
func (o *ReplicationUpdate1) SetHoldPendingSnapshots(v bool) {
	o.HoldPendingSnapshots = &v
}

// GetRetentionPolicy returns the RetentionPolicy field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetRetentionPolicy() string {
	if o == nil || o.RetentionPolicy == nil {
		var ret string
		return ret
	}
	return *o.RetentionPolicy
}

// GetRetentionPolicyOk returns a tuple with the RetentionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetRetentionPolicyOk() (*string, bool) {
	if o == nil || o.RetentionPolicy == nil {
		return nil, false
	}
	return o.RetentionPolicy, true
}

// HasRetentionPolicy returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasRetentionPolicy() bool {
	if o != nil && o.RetentionPolicy != nil {
		return true
	}

	return false
}

// SetRetentionPolicy gets a reference to the given string and assigns it to the RetentionPolicy field.
func (o *ReplicationUpdate1) SetRetentionPolicy(v string) {
	o.RetentionPolicy = &v
}

// GetLifetimeValue returns the LifetimeValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetLifetimeValue() int32 {
	if o == nil || o.LifetimeValue.Get() == nil {
		var ret int32
		return ret
	}
	return *o.LifetimeValue.Get()
}

// GetLifetimeValueOk returns a tuple with the LifetimeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetLifetimeValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LifetimeValue.Get(), o.LifetimeValue.IsSet()
}

// HasLifetimeValue returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasLifetimeValue() bool {
	if o != nil && o.LifetimeValue.IsSet() {
		return true
	}

	return false
}

// SetLifetimeValue gets a reference to the given NullableInt32 and assigns it to the LifetimeValue field.
func (o *ReplicationUpdate1) SetLifetimeValue(v int32) {
	o.LifetimeValue.Set(&v)
}

// SetLifetimeValueNil sets the value for LifetimeValue to be an explicit nil
func (o *ReplicationUpdate1) SetLifetimeValueNil() {
	o.LifetimeValue.Set(nil)
}

// UnsetLifetimeValue ensures that no value is present for LifetimeValue, not even an explicit nil
func (o *ReplicationUpdate1) UnsetLifetimeValue() {
	o.LifetimeValue.Unset()
}

// GetLifetimeUnit returns the LifetimeUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetLifetimeUnit() string {
	if o == nil || o.LifetimeUnit.Get() == nil {
		var ret string
		return ret
	}
	return *o.LifetimeUnit.Get()
}

// GetLifetimeUnitOk returns a tuple with the LifetimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetLifetimeUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LifetimeUnit.Get(), o.LifetimeUnit.IsSet()
}

// HasLifetimeUnit returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasLifetimeUnit() bool {
	if o != nil && o.LifetimeUnit.IsSet() {
		return true
	}

	return false
}

// SetLifetimeUnit gets a reference to the given NullableString and assigns it to the LifetimeUnit field.
func (o *ReplicationUpdate1) SetLifetimeUnit(v string) {
	o.LifetimeUnit.Set(&v)
}

// SetLifetimeUnitNil sets the value for LifetimeUnit to be an explicit nil
func (o *ReplicationUpdate1) SetLifetimeUnitNil() {
	o.LifetimeUnit.Set(nil)
}

// UnsetLifetimeUnit ensures that no value is present for LifetimeUnit, not even an explicit nil
func (o *ReplicationUpdate1) UnsetLifetimeUnit() {
	o.LifetimeUnit.Unset()
}

// GetCompression returns the Compression field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetCompression() string {
	if o == nil || o.Compression.Get() == nil {
		var ret string
		return ret
	}
	return *o.Compression.Get()
}

// GetCompressionOk returns a tuple with the Compression field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetCompressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Compression.Get(), o.Compression.IsSet()
}

// HasCompression returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasCompression() bool {
	if o != nil && o.Compression.IsSet() {
		return true
	}

	return false
}

// SetCompression gets a reference to the given NullableString and assigns it to the Compression field.
func (o *ReplicationUpdate1) SetCompression(v string) {
	o.Compression.Set(&v)
}

// SetCompressionNil sets the value for Compression to be an explicit nil
func (o *ReplicationUpdate1) SetCompressionNil() {
	o.Compression.Set(nil)
}

// UnsetCompression ensures that no value is present for Compression, not even an explicit nil
func (o *ReplicationUpdate1) UnsetCompression() {
	o.Compression.Unset()
}

// GetSpeedLimit returns the SpeedLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetSpeedLimit() int32 {
	if o == nil || o.SpeedLimit.Get() == nil {
		var ret int32
		return ret
	}
	return *o.SpeedLimit.Get()
}

// GetSpeedLimitOk returns a tuple with the SpeedLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetSpeedLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpeedLimit.Get(), o.SpeedLimit.IsSet()
}

// HasSpeedLimit returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasSpeedLimit() bool {
	if o != nil && o.SpeedLimit.IsSet() {
		return true
	}

	return false
}

// SetSpeedLimit gets a reference to the given NullableInt32 and assigns it to the SpeedLimit field.
func (o *ReplicationUpdate1) SetSpeedLimit(v int32) {
	o.SpeedLimit.Set(&v)
}

// SetSpeedLimitNil sets the value for SpeedLimit to be an explicit nil
func (o *ReplicationUpdate1) SetSpeedLimitNil() {
	o.SpeedLimit.Set(nil)
}

// UnsetSpeedLimit ensures that no value is present for SpeedLimit, not even an explicit nil
func (o *ReplicationUpdate1) UnsetSpeedLimit() {
	o.SpeedLimit.Unset()
}

// GetLargeBlock returns the LargeBlock field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetLargeBlock() bool {
	if o == nil || o.LargeBlock == nil {
		var ret bool
		return ret
	}
	return *o.LargeBlock
}

// GetLargeBlockOk returns a tuple with the LargeBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetLargeBlockOk() (*bool, bool) {
	if o == nil || o.LargeBlock == nil {
		return nil, false
	}
	return o.LargeBlock, true
}

// HasLargeBlock returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasLargeBlock() bool {
	if o != nil && o.LargeBlock != nil {
		return true
	}

	return false
}

// SetLargeBlock gets a reference to the given bool and assigns it to the LargeBlock field.
func (o *ReplicationUpdate1) SetLargeBlock(v bool) {
	o.LargeBlock = &v
}

// GetEmbed returns the Embed field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetEmbed() bool {
	if o == nil || o.Embed == nil {
		var ret bool
		return ret
	}
	return *o.Embed
}

// GetEmbedOk returns a tuple with the Embed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetEmbedOk() (*bool, bool) {
	if o == nil || o.Embed == nil {
		return nil, false
	}
	return o.Embed, true
}

// HasEmbed returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasEmbed() bool {
	if o != nil && o.Embed != nil {
		return true
	}

	return false
}

// SetEmbed gets a reference to the given bool and assigns it to the Embed field.
func (o *ReplicationUpdate1) SetEmbed(v bool) {
	o.Embed = &v
}

// GetCompressed returns the Compressed field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetCompressed() bool {
	if o == nil || o.Compressed == nil {
		var ret bool
		return ret
	}
	return *o.Compressed
}

// GetCompressedOk returns a tuple with the Compressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetCompressedOk() (*bool, bool) {
	if o == nil || o.Compressed == nil {
		return nil, false
	}
	return o.Compressed, true
}

// HasCompressed returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasCompressed() bool {
	if o != nil && o.Compressed != nil {
		return true
	}

	return false
}

// SetCompressed gets a reference to the given bool and assigns it to the Compressed field.
func (o *ReplicationUpdate1) SetCompressed(v bool) {
	o.Compressed = &v
}

// GetRetries returns the Retries field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetRetries() int32 {
	if o == nil || o.Retries == nil {
		var ret int32
		return ret
	}
	return *o.Retries
}

// GetRetriesOk returns a tuple with the Retries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetRetriesOk() (*int32, bool) {
	if o == nil || o.Retries == nil {
		return nil, false
	}
	return o.Retries, true
}

// HasRetries returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasRetries() bool {
	if o != nil && o.Retries != nil {
		return true
	}

	return false
}

// SetRetries gets a reference to the given int32 and assigns it to the Retries field.
func (o *ReplicationUpdate1) SetRetries(v int32) {
	o.Retries = &v
}

// GetLoggingLevel returns the LoggingLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationUpdate1) GetLoggingLevel() string {
	if o == nil || o.LoggingLevel.Get() == nil {
		var ret string
		return ret
	}
	return *o.LoggingLevel.Get()
}

// GetLoggingLevelOk returns a tuple with the LoggingLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationUpdate1) GetLoggingLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LoggingLevel.Get(), o.LoggingLevel.IsSet()
}

// HasLoggingLevel returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasLoggingLevel() bool {
	if o != nil && o.LoggingLevel.IsSet() {
		return true
	}

	return false
}

// SetLoggingLevel gets a reference to the given NullableString and assigns it to the LoggingLevel field.
func (o *ReplicationUpdate1) SetLoggingLevel(v string) {
	o.LoggingLevel.Set(&v)
}

// SetLoggingLevelNil sets the value for LoggingLevel to be an explicit nil
func (o *ReplicationUpdate1) SetLoggingLevelNil() {
	o.LoggingLevel.Set(nil)
}

// UnsetLoggingLevel ensures that no value is present for LoggingLevel, not even an explicit nil
func (o *ReplicationUpdate1) UnsetLoggingLevel() {
	o.LoggingLevel.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ReplicationUpdate1) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdate1) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ReplicationUpdate1) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ReplicationUpdate1) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o ReplicationUpdate1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.Transport != nil {
		toSerialize["transport"] = o.Transport
	}
	if o.SshCredentials.IsSet() {
		toSerialize["ssh_credentials"] = o.SshCredentials.Get()
	}
	if o.NetcatActiveSide.IsSet() {
		toSerialize["netcat_active_side"] = o.NetcatActiveSide.Get()
	}
	if o.NetcatActiveSideListenAddress.IsSet() {
		toSerialize["netcat_active_side_listen_address"] = o.NetcatActiveSideListenAddress.Get()
	}
	if o.NetcatActiveSidePortMin.IsSet() {
		toSerialize["netcat_active_side_port_min"] = o.NetcatActiveSidePortMin.Get()
	}
	if o.NetcatActiveSidePortMax.IsSet() {
		toSerialize["netcat_active_side_port_max"] = o.NetcatActiveSidePortMax.Get()
	}
	if o.NetcatPassiveSideConnectAddress.IsSet() {
		toSerialize["netcat_passive_side_connect_address"] = o.NetcatPassiveSideConnectAddress.Get()
	}
	if o.SourceDatasets != nil {
		toSerialize["source_datasets"] = o.SourceDatasets
	}
	if o.TargetDataset != nil {
		toSerialize["target_dataset"] = o.TargetDataset
	}
	if o.Recursive != nil {
		toSerialize["recursive"] = o.Recursive
	}
	if o.Exclude != nil {
		toSerialize["exclude"] = o.Exclude
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.PropertiesExclude != nil {
		toSerialize["properties_exclude"] = o.PropertiesExclude
	}
	if o.Replicate != nil {
		toSerialize["replicate"] = o.Replicate
	}
	if o.Encryption != nil {
		toSerialize["encryption"] = o.Encryption
	}
	if o.EncryptionKey.IsSet() {
		toSerialize["encryption_key"] = o.EncryptionKey.Get()
	}
	if o.EncryptionKeyFormat.IsSet() {
		toSerialize["encryption_key_format"] = o.EncryptionKeyFormat.Get()
	}
	if o.EncryptionKeyLocation.IsSet() {
		toSerialize["encryption_key_location"] = o.EncryptionKeyLocation.Get()
	}
	if o.PeriodicSnapshotTasks != nil {
		toSerialize["periodic_snapshot_tasks"] = o.PeriodicSnapshotTasks
	}
	if o.NamingSchema != nil {
		toSerialize["naming_schema"] = o.NamingSchema
	}
	if o.AlsoIncludeNamingSchema != nil {
		toSerialize["also_include_naming_schema"] = o.AlsoIncludeNamingSchema
	}
	if o.Auto != nil {
		toSerialize["auto"] = o.Auto
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	if o.RestrictSchedule != nil {
		toSerialize["restrict_schedule"] = o.RestrictSchedule
	}
	if o.OnlyMatchingSchedule != nil {
		toSerialize["only_matching_schedule"] = o.OnlyMatchingSchedule
	}
	if o.AllowFromScratch != nil {
		toSerialize["allow_from_scratch"] = o.AllowFromScratch
	}
	if o.Readonly != nil {
		toSerialize["readonly"] = o.Readonly
	}
	if o.HoldPendingSnapshots != nil {
		toSerialize["hold_pending_snapshots"] = o.HoldPendingSnapshots
	}
	if o.RetentionPolicy != nil {
		toSerialize["retention_policy"] = o.RetentionPolicy
	}
	if o.LifetimeValue.IsSet() {
		toSerialize["lifetime_value"] = o.LifetimeValue.Get()
	}
	if o.LifetimeUnit.IsSet() {
		toSerialize["lifetime_unit"] = o.LifetimeUnit.Get()
	}
	if o.Compression.IsSet() {
		toSerialize["compression"] = o.Compression.Get()
	}
	if o.SpeedLimit.IsSet() {
		toSerialize["speed_limit"] = o.SpeedLimit.Get()
	}
	if o.LargeBlock != nil {
		toSerialize["large_block"] = o.LargeBlock
	}
	if o.Embed != nil {
		toSerialize["embed"] = o.Embed
	}
	if o.Compressed != nil {
		toSerialize["compressed"] = o.Compressed
	}
	if o.Retries != nil {
		toSerialize["retries"] = o.Retries
	}
	if o.LoggingLevel.IsSet() {
		toSerialize["logging_level"] = o.LoggingLevel.Get()
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableReplicationUpdate1 struct {
	value *ReplicationUpdate1
	isSet bool
}

func (v NullableReplicationUpdate1) Get() *ReplicationUpdate1 {
	return v.value
}

func (v *NullableReplicationUpdate1) Set(val *ReplicationUpdate1) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationUpdate1) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationUpdate1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationUpdate1(val *ReplicationUpdate1) *NullableReplicationUpdate1 {
	return &NullableReplicationUpdate1{value: val, isSet: true}
}

func (v NullableReplicationUpdate1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationUpdate1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
