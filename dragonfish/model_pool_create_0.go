/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// PoolCreate0 struct for PoolCreate0
type PoolCreate0 struct {
	Name                  *string                       `json:"name,omitempty"`
	Encryption            *bool                         `json:"encryption,omitempty"`
	Deduplication         NullableString                `json:"deduplication,omitempty"`
	Checksum              NullableString                `json:"checksum,omitempty"`
	EncryptionOptions     *PoolCreate0EncryptionOptions `json:"encryption_options,omitempty"`
	Topology              *PoolCreate0Topology          `json:"topology,omitempty"`
	AllowDuplicateSerials *bool                         `json:"allow_duplicate_serials,omitempty"`
}

// NewPoolCreate0 instantiates a new PoolCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolCreate0() *PoolCreate0 {
	this := PoolCreate0{}
	return &this
}

// NewPoolCreate0WithDefaults instantiates a new PoolCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolCreate0WithDefaults() *PoolCreate0 {
	this := PoolCreate0{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PoolCreate0) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolCreate0) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PoolCreate0) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PoolCreate0) SetName(v string) {
	o.Name = &v
}

// GetEncryption returns the Encryption field value if set, zero value otherwise.
func (o *PoolCreate0) GetEncryption() bool {
	if o == nil || o.Encryption == nil {
		var ret bool
		return ret
	}
	return *o.Encryption
}

// GetEncryptionOk returns a tuple with the Encryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolCreate0) GetEncryptionOk() (*bool, bool) {
	if o == nil || o.Encryption == nil {
		return nil, false
	}
	return o.Encryption, true
}

// HasEncryption returns a boolean if a field has been set.
func (o *PoolCreate0) HasEncryption() bool {
	if o != nil && o.Encryption != nil {
		return true
	}

	return false
}

// SetEncryption gets a reference to the given bool and assigns it to the Encryption field.
func (o *PoolCreate0) SetEncryption(v bool) {
	o.Encryption = &v
}

// GetDeduplication returns the Deduplication field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolCreate0) GetDeduplication() string {
	if o == nil || o.Deduplication.Get() == nil {
		var ret string
		return ret
	}
	return *o.Deduplication.Get()
}

// GetDeduplicationOk returns a tuple with the Deduplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolCreate0) GetDeduplicationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Deduplication.Get(), o.Deduplication.IsSet()
}

// HasDeduplication returns a boolean if a field has been set.
func (o *PoolCreate0) HasDeduplication() bool {
	if o != nil && o.Deduplication.IsSet() {
		return true
	}

	return false
}

// SetDeduplication gets a reference to the given NullableString and assigns it to the Deduplication field.
func (o *PoolCreate0) SetDeduplication(v string) {
	o.Deduplication.Set(&v)
}

// SetDeduplicationNil sets the value for Deduplication to be an explicit nil
func (o *PoolCreate0) SetDeduplicationNil() {
	o.Deduplication.Set(nil)
}

// UnsetDeduplication ensures that no value is present for Deduplication, not even an explicit nil
func (o *PoolCreate0) UnsetDeduplication() {
	o.Deduplication.Unset()
}

// GetChecksum returns the Checksum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PoolCreate0) GetChecksum() string {
	if o == nil || o.Checksum.Get() == nil {
		var ret string
		return ret
	}
	return *o.Checksum.Get()
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PoolCreate0) GetChecksumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Checksum.Get(), o.Checksum.IsSet()
}

// HasChecksum returns a boolean if a field has been set.
func (o *PoolCreate0) HasChecksum() bool {
	if o != nil && o.Checksum.IsSet() {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given NullableString and assigns it to the Checksum field.
func (o *PoolCreate0) SetChecksum(v string) {
	o.Checksum.Set(&v)
}

// SetChecksumNil sets the value for Checksum to be an explicit nil
func (o *PoolCreate0) SetChecksumNil() {
	o.Checksum.Set(nil)
}

// UnsetChecksum ensures that no value is present for Checksum, not even an explicit nil
func (o *PoolCreate0) UnsetChecksum() {
	o.Checksum.Unset()
}

// GetEncryptionOptions returns the EncryptionOptions field value if set, zero value otherwise.
func (o *PoolCreate0) GetEncryptionOptions() PoolCreate0EncryptionOptions {
	if o == nil || o.EncryptionOptions == nil {
		var ret PoolCreate0EncryptionOptions
		return ret
	}
	return *o.EncryptionOptions
}

// GetEncryptionOptionsOk returns a tuple with the EncryptionOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolCreate0) GetEncryptionOptionsOk() (*PoolCreate0EncryptionOptions, bool) {
	if o == nil || o.EncryptionOptions == nil {
		return nil, false
	}
	return o.EncryptionOptions, true
}

// HasEncryptionOptions returns a boolean if a field has been set.
func (o *PoolCreate0) HasEncryptionOptions() bool {
	if o != nil && o.EncryptionOptions != nil {
		return true
	}

	return false
}

// SetEncryptionOptions gets a reference to the given PoolCreate0EncryptionOptions and assigns it to the EncryptionOptions field.
func (o *PoolCreate0) SetEncryptionOptions(v PoolCreate0EncryptionOptions) {
	o.EncryptionOptions = &v
}

// GetTopology returns the Topology field value if set, zero value otherwise.
func (o *PoolCreate0) GetTopology() PoolCreate0Topology {
	if o == nil || o.Topology == nil {
		var ret PoolCreate0Topology
		return ret
	}
	return *o.Topology
}

// GetTopologyOk returns a tuple with the Topology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolCreate0) GetTopologyOk() (*PoolCreate0Topology, bool) {
	if o == nil || o.Topology == nil {
		return nil, false
	}
	return o.Topology, true
}

// HasTopology returns a boolean if a field has been set.
func (o *PoolCreate0) HasTopology() bool {
	if o != nil && o.Topology != nil {
		return true
	}

	return false
}

// SetTopology gets a reference to the given PoolCreate0Topology and assigns it to the Topology field.
func (o *PoolCreate0) SetTopology(v PoolCreate0Topology) {
	o.Topology = &v
}

// GetAllowDuplicateSerials returns the AllowDuplicateSerials field value if set, zero value otherwise.
func (o *PoolCreate0) GetAllowDuplicateSerials() bool {
	if o == nil || o.AllowDuplicateSerials == nil {
		var ret bool
		return ret
	}
	return *o.AllowDuplicateSerials
}

// GetAllowDuplicateSerialsOk returns a tuple with the AllowDuplicateSerials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolCreate0) GetAllowDuplicateSerialsOk() (*bool, bool) {
	if o == nil || o.AllowDuplicateSerials == nil {
		return nil, false
	}
	return o.AllowDuplicateSerials, true
}

// HasAllowDuplicateSerials returns a boolean if a field has been set.
func (o *PoolCreate0) HasAllowDuplicateSerials() bool {
	if o != nil && o.AllowDuplicateSerials != nil {
		return true
	}

	return false
}

// SetAllowDuplicateSerials gets a reference to the given bool and assigns it to the AllowDuplicateSerials field.
func (o *PoolCreate0) SetAllowDuplicateSerials(v bool) {
	o.AllowDuplicateSerials = &v
}

func (o PoolCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Encryption != nil {
		toSerialize["encryption"] = o.Encryption
	}
	if o.Deduplication.IsSet() {
		toSerialize["deduplication"] = o.Deduplication.Get()
	}
	if o.Checksum.IsSet() {
		toSerialize["checksum"] = o.Checksum.Get()
	}
	if o.EncryptionOptions != nil {
		toSerialize["encryption_options"] = o.EncryptionOptions
	}
	if o.Topology != nil {
		toSerialize["topology"] = o.Topology
	}
	if o.AllowDuplicateSerials != nil {
		toSerialize["allow_duplicate_serials"] = o.AllowDuplicateSerials
	}
	return json.Marshal(toSerialize)
}

type NullablePoolCreate0 struct {
	value *PoolCreate0
	isSet bool
}

func (v NullablePoolCreate0) Get() *PoolCreate0 {
	return v.value
}

func (v *NullablePoolCreate0) Set(val *PoolCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolCreate0(val *PoolCreate0) *NullablePoolCreate0 {
	return &NullablePoolCreate0{value: val, isSet: true}
}

func (v NullablePoolCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
