/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// IpmiIdentify0 struct for IpmiIdentify0
type IpmiIdentify0 struct {
	Seconds *int32 `json:"seconds,omitempty"`
	Force   *bool  `json:"force,omitempty"`
}

// NewIpmiIdentify0 instantiates a new IpmiIdentify0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpmiIdentify0() *IpmiIdentify0 {
	this := IpmiIdentify0{}
	return &this
}

// NewIpmiIdentify0WithDefaults instantiates a new IpmiIdentify0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpmiIdentify0WithDefaults() *IpmiIdentify0 {
	this := IpmiIdentify0{}
	return &this
}

// GetSeconds returns the Seconds field value if set, zero value otherwise.
func (o *IpmiIdentify0) GetSeconds() int32 {
	if o == nil || o.Seconds == nil {
		var ret int32
		return ret
	}
	return *o.Seconds
}

// GetSecondsOk returns a tuple with the Seconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpmiIdentify0) GetSecondsOk() (*int32, bool) {
	if o == nil || o.Seconds == nil {
		return nil, false
	}
	return o.Seconds, true
}

// HasSeconds returns a boolean if a field has been set.
func (o *IpmiIdentify0) HasSeconds() bool {
	if o != nil && o.Seconds != nil {
		return true
	}

	return false
}

// SetSeconds gets a reference to the given int32 and assigns it to the Seconds field.
func (o *IpmiIdentify0) SetSeconds(v int32) {
	o.Seconds = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *IpmiIdentify0) GetForce() bool {
	if o == nil || o.Force == nil {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpmiIdentify0) GetForceOk() (*bool, bool) {
	if o == nil || o.Force == nil {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *IpmiIdentify0) HasForce() bool {
	if o != nil && o.Force != nil {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *IpmiIdentify0) SetForce(v bool) {
	o.Force = &v
}

func (o IpmiIdentify0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Seconds != nil {
		toSerialize["seconds"] = o.Seconds
	}
	if o.Force != nil {
		toSerialize["force"] = o.Force
	}
	return json.Marshal(toSerialize)
}

type NullableIpmiIdentify0 struct {
	value *IpmiIdentify0
	isSet bool
}

func (v NullableIpmiIdentify0) Get() *IpmiIdentify0 {
	return v.value
}

func (v *NullableIpmiIdentify0) Set(val *IpmiIdentify0) {
	v.value = val
	v.isSet = true
}

func (v NullableIpmiIdentify0) IsSet() bool {
	return v.isSet
}

func (v *NullableIpmiIdentify0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpmiIdentify0(val *IpmiIdentify0) *NullableIpmiIdentify0 {
	return &NullableIpmiIdentify0{value: val, isSet: true}
}

func (v NullableIpmiIdentify0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpmiIdentify0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
