/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// PoolDatasetUserpropCreate0 struct for PoolDatasetUserpropCreate0
type PoolDatasetUserpropCreate0 struct {
	Id       *string                             `json:"id,omitempty"`
	Property *PoolDatasetUserpropCreate0Property `json:"property,omitempty"`
}

// NewPoolDatasetUserpropCreate0 instantiates a new PoolDatasetUserpropCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolDatasetUserpropCreate0() *PoolDatasetUserpropCreate0 {
	this := PoolDatasetUserpropCreate0{}
	return &this
}

// NewPoolDatasetUserpropCreate0WithDefaults instantiates a new PoolDatasetUserpropCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolDatasetUserpropCreate0WithDefaults() *PoolDatasetUserpropCreate0 {
	this := PoolDatasetUserpropCreate0{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PoolDatasetUserpropCreate0) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetUserpropCreate0) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PoolDatasetUserpropCreate0) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PoolDatasetUserpropCreate0) SetId(v string) {
	o.Id = &v
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *PoolDatasetUserpropCreate0) GetProperty() PoolDatasetUserpropCreate0Property {
	if o == nil || o.Property == nil {
		var ret PoolDatasetUserpropCreate0Property
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetUserpropCreate0) GetPropertyOk() (*PoolDatasetUserpropCreate0Property, bool) {
	if o == nil || o.Property == nil {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *PoolDatasetUserpropCreate0) HasProperty() bool {
	if o != nil && o.Property != nil {
		return true
	}

	return false
}

// SetProperty gets a reference to the given PoolDatasetUserpropCreate0Property and assigns it to the Property field.
func (o *PoolDatasetUserpropCreate0) SetProperty(v PoolDatasetUserpropCreate0Property) {
	o.Property = &v
}

func (o PoolDatasetUserpropCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Property != nil {
		toSerialize["property"] = o.Property
	}
	return json.Marshal(toSerialize)
}

type NullablePoolDatasetUserpropCreate0 struct {
	value *PoolDatasetUserpropCreate0
	isSet bool
}

func (v NullablePoolDatasetUserpropCreate0) Get() *PoolDatasetUserpropCreate0 {
	return v.value
}

func (v *NullablePoolDatasetUserpropCreate0) Set(val *PoolDatasetUserpropCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolDatasetUserpropCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolDatasetUserpropCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolDatasetUserpropCreate0(val *PoolDatasetUserpropCreate0) *NullablePoolDatasetUserpropCreate0 {
	return &NullablePoolDatasetUserpropCreate0{value: val, isSet: true}
}

func (v NullablePoolDatasetUserpropCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolDatasetUserpropCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
