/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// InterfaceCommit0 struct for InterfaceCommit0
type InterfaceCommit0 struct {
	Rollback       *bool  `json:"rollback,omitempty"`
	CheckinTimeout *int32 `json:"checkin_timeout,omitempty"`
}

// NewInterfaceCommit0 instantiates a new InterfaceCommit0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceCommit0() *InterfaceCommit0 {
	this := InterfaceCommit0{}
	return &this
}

// NewInterfaceCommit0WithDefaults instantiates a new InterfaceCommit0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceCommit0WithDefaults() *InterfaceCommit0 {
	this := InterfaceCommit0{}
	return &this
}

// GetRollback returns the Rollback field value if set, zero value otherwise.
func (o *InterfaceCommit0) GetRollback() bool {
	if o == nil || o.Rollback == nil {
		var ret bool
		return ret
	}
	return *o.Rollback
}

// GetRollbackOk returns a tuple with the Rollback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCommit0) GetRollbackOk() (*bool, bool) {
	if o == nil || o.Rollback == nil {
		return nil, false
	}
	return o.Rollback, true
}

// HasRollback returns a boolean if a field has been set.
func (o *InterfaceCommit0) HasRollback() bool {
	if o != nil && o.Rollback != nil {
		return true
	}

	return false
}

// SetRollback gets a reference to the given bool and assigns it to the Rollback field.
func (o *InterfaceCommit0) SetRollback(v bool) {
	o.Rollback = &v
}

// GetCheckinTimeout returns the CheckinTimeout field value if set, zero value otherwise.
func (o *InterfaceCommit0) GetCheckinTimeout() int32 {
	if o == nil || o.CheckinTimeout == nil {
		var ret int32
		return ret
	}
	return *o.CheckinTimeout
}

// GetCheckinTimeoutOk returns a tuple with the CheckinTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCommit0) GetCheckinTimeoutOk() (*int32, bool) {
	if o == nil || o.CheckinTimeout == nil {
		return nil, false
	}
	return o.CheckinTimeout, true
}

// HasCheckinTimeout returns a boolean if a field has been set.
func (o *InterfaceCommit0) HasCheckinTimeout() bool {
	if o != nil && o.CheckinTimeout != nil {
		return true
	}

	return false
}

// SetCheckinTimeout gets a reference to the given int32 and assigns it to the CheckinTimeout field.
func (o *InterfaceCommit0) SetCheckinTimeout(v int32) {
	o.CheckinTimeout = &v
}

func (o InterfaceCommit0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rollback != nil {
		toSerialize["rollback"] = o.Rollback
	}
	if o.CheckinTimeout != nil {
		toSerialize["checkin_timeout"] = o.CheckinTimeout
	}
	return json.Marshal(toSerialize)
}

type NullableInterfaceCommit0 struct {
	value *InterfaceCommit0
	isSet bool
}

func (v NullableInterfaceCommit0) Get() *InterfaceCommit0 {
	return v.value
}

func (v *NullableInterfaceCommit0) Set(val *InterfaceCommit0) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceCommit0) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceCommit0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceCommit0(val *InterfaceCommit0) *NullableInterfaceCommit0 {
	return &NullableInterfaceCommit0{value: val, isSet: true}
}

func (v NullableInterfaceCommit0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceCommit0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
