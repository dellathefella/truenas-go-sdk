/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// GroupCreate0 struct for GroupCreate0
type GroupCreate0 struct {
	Gid               *int32   `json:"gid,omitempty"`
	Name              *string  `json:"name,omitempty"`
	Smb               *bool    `json:"smb,omitempty"`
	Sudo              *bool    `json:"sudo,omitempty"`
	SudoNopasswd      *bool    `json:"sudo_nopasswd,omitempty"`
	SudoCommands      []string `json:"sudo_commands,omitempty"`
	AllowDuplicateGid *bool    `json:"allow_duplicate_gid,omitempty"`
	Users             []int32  `json:"users,omitempty"`
}

// NewGroupCreate0 instantiates a new GroupCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupCreate0() *GroupCreate0 {
	this := GroupCreate0{}
	return &this
}

// NewGroupCreate0WithDefaults instantiates a new GroupCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupCreate0WithDefaults() *GroupCreate0 {
	this := GroupCreate0{}
	return &this
}

// GetGid returns the Gid field value if set, zero value otherwise.
func (o *GroupCreate0) GetGid() int32 {
	if o == nil || o.Gid == nil {
		var ret int32
		return ret
	}
	return *o.Gid
}

// GetGidOk returns a tuple with the Gid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate0) GetGidOk() (*int32, bool) {
	if o == nil || o.Gid == nil {
		return nil, false
	}
	return o.Gid, true
}

// HasGid returns a boolean if a field has been set.
func (o *GroupCreate0) HasGid() bool {
	if o != nil && o.Gid != nil {
		return true
	}

	return false
}

// SetGid gets a reference to the given int32 and assigns it to the Gid field.
func (o *GroupCreate0) SetGid(v int32) {
	o.Gid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GroupCreate0) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate0) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GroupCreate0) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GroupCreate0) SetName(v string) {
	o.Name = &v
}

// GetSmb returns the Smb field value if set, zero value otherwise.
func (o *GroupCreate0) GetSmb() bool {
	if o == nil || o.Smb == nil {
		var ret bool
		return ret
	}
	return *o.Smb
}

// GetSmbOk returns a tuple with the Smb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate0) GetSmbOk() (*bool, bool) {
	if o == nil || o.Smb == nil {
		return nil, false
	}
	return o.Smb, true
}

// HasSmb returns a boolean if a field has been set.
func (o *GroupCreate0) HasSmb() bool {
	if o != nil && o.Smb != nil {
		return true
	}

	return false
}

// SetSmb gets a reference to the given bool and assigns it to the Smb field.
func (o *GroupCreate0) SetSmb(v bool) {
	o.Smb = &v
}

// GetSudo returns the Sudo field value if set, zero value otherwise.
func (o *GroupCreate0) GetSudo() bool {
	if o == nil || o.Sudo == nil {
		var ret bool
		return ret
	}
	return *o.Sudo
}

// GetSudoOk returns a tuple with the Sudo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate0) GetSudoOk() (*bool, bool) {
	if o == nil || o.Sudo == nil {
		return nil, false
	}
	return o.Sudo, true
}

// HasSudo returns a boolean if a field has been set.
func (o *GroupCreate0) HasSudo() bool {
	if o != nil && o.Sudo != nil {
		return true
	}

	return false
}

// SetSudo gets a reference to the given bool and assigns it to the Sudo field.
func (o *GroupCreate0) SetSudo(v bool) {
	o.Sudo = &v
}

// GetSudoNopasswd returns the SudoNopasswd field value if set, zero value otherwise.
func (o *GroupCreate0) GetSudoNopasswd() bool {
	if o == nil || o.SudoNopasswd == nil {
		var ret bool
		return ret
	}
	return *o.SudoNopasswd
}

// GetSudoNopasswdOk returns a tuple with the SudoNopasswd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate0) GetSudoNopasswdOk() (*bool, bool) {
	if o == nil || o.SudoNopasswd == nil {
		return nil, false
	}
	return o.SudoNopasswd, true
}

// HasSudoNopasswd returns a boolean if a field has been set.
func (o *GroupCreate0) HasSudoNopasswd() bool {
	if o != nil && o.SudoNopasswd != nil {
		return true
	}

	return false
}

// SetSudoNopasswd gets a reference to the given bool and assigns it to the SudoNopasswd field.
func (o *GroupCreate0) SetSudoNopasswd(v bool) {
	o.SudoNopasswd = &v
}

// GetSudoCommands returns the SudoCommands field value if set, zero value otherwise.
func (o *GroupCreate0) GetSudoCommands() []string {
	if o == nil || o.SudoCommands == nil {
		var ret []string
		return ret
	}
	return o.SudoCommands
}

// GetSudoCommandsOk returns a tuple with the SudoCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate0) GetSudoCommandsOk() ([]string, bool) {
	if o == nil || o.SudoCommands == nil {
		return nil, false
	}
	return o.SudoCommands, true
}

// HasSudoCommands returns a boolean if a field has been set.
func (o *GroupCreate0) HasSudoCommands() bool {
	if o != nil && o.SudoCommands != nil {
		return true
	}

	return false
}

// SetSudoCommands gets a reference to the given []string and assigns it to the SudoCommands field.
func (o *GroupCreate0) SetSudoCommands(v []string) {
	o.SudoCommands = v
}

// GetAllowDuplicateGid returns the AllowDuplicateGid field value if set, zero value otherwise.
func (o *GroupCreate0) GetAllowDuplicateGid() bool {
	if o == nil || o.AllowDuplicateGid == nil {
		var ret bool
		return ret
	}
	return *o.AllowDuplicateGid
}

// GetAllowDuplicateGidOk returns a tuple with the AllowDuplicateGid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate0) GetAllowDuplicateGidOk() (*bool, bool) {
	if o == nil || o.AllowDuplicateGid == nil {
		return nil, false
	}
	return o.AllowDuplicateGid, true
}

// HasAllowDuplicateGid returns a boolean if a field has been set.
func (o *GroupCreate0) HasAllowDuplicateGid() bool {
	if o != nil && o.AllowDuplicateGid != nil {
		return true
	}

	return false
}

// SetAllowDuplicateGid gets a reference to the given bool and assigns it to the AllowDuplicateGid field.
func (o *GroupCreate0) SetAllowDuplicateGid(v bool) {
	o.AllowDuplicateGid = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *GroupCreate0) GetUsers() []int32 {
	if o == nil || o.Users == nil {
		var ret []int32
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreate0) GetUsersOk() ([]int32, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *GroupCreate0) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []int32 and assigns it to the Users field.
func (o *GroupCreate0) SetUsers(v []int32) {
	o.Users = v
}

func (o GroupCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Gid != nil {
		toSerialize["gid"] = o.Gid
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Smb != nil {
		toSerialize["smb"] = o.Smb
	}
	if o.Sudo != nil {
		toSerialize["sudo"] = o.Sudo
	}
	if o.SudoNopasswd != nil {
		toSerialize["sudo_nopasswd"] = o.SudoNopasswd
	}
	if o.SudoCommands != nil {
		toSerialize["sudo_commands"] = o.SudoCommands
	}
	if o.AllowDuplicateGid != nil {
		toSerialize["allow_duplicate_gid"] = o.AllowDuplicateGid
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableGroupCreate0 struct {
	value *GroupCreate0
	isSet bool
}

func (v NullableGroupCreate0) Get() *GroupCreate0 {
	return v.value
}

func (v *NullableGroupCreate0) Set(val *GroupCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupCreate0(val *GroupCreate0) *NullableGroupCreate0 {
	return &NullableGroupCreate0{value: val, isSet: true}
}

func (v NullableGroupCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
