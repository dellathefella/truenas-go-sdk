/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// TruenasUpdateCustomerInformation0PhysicalLocation struct for TruenasUpdateCustomerInformation0PhysicalLocation
type TruenasUpdateCustomerInformation0PhysicalLocation struct {
	Address            *string `json:"address,omitempty"`
	City               *string `json:"city,omitempty"`
	State              *string `json:"state,omitempty"`
	Zip                *string `json:"zip,omitempty"`
	Country            *string `json:"country,omitempty"`
	ContactName        *string `json:"contact_name,omitempty"`
	ContactPhoneNumber *string `json:"contact_phone_number,omitempty"`
	ContactEmail       *string `json:"contact_email,omitempty"`
}

// NewTruenasUpdateCustomerInformation0PhysicalLocation instantiates a new TruenasUpdateCustomerInformation0PhysicalLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTruenasUpdateCustomerInformation0PhysicalLocation() *TruenasUpdateCustomerInformation0PhysicalLocation {
	this := TruenasUpdateCustomerInformation0PhysicalLocation{}
	return &this
}

// NewTruenasUpdateCustomerInformation0PhysicalLocationWithDefaults instantiates a new TruenasUpdateCustomerInformation0PhysicalLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTruenasUpdateCustomerInformation0PhysicalLocationWithDefaults() *TruenasUpdateCustomerInformation0PhysicalLocation {
	this := TruenasUpdateCustomerInformation0PhysicalLocation{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) SetAddress(v string) {
	o.Address = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) SetState(v string) {
	o.State = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetZip() string {
	if o == nil || o.Zip == nil {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetZipOk() (*string, bool) {
	if o == nil || o.Zip == nil {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) HasZip() bool {
	if o != nil && o.Zip != nil {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) SetZip(v string) {
	o.Zip = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) SetCountry(v string) {
	o.Country = &v
}

// GetContactName returns the ContactName field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetContactName() string {
	if o == nil || o.ContactName == nil {
		var ret string
		return ret
	}
	return *o.ContactName
}

// GetContactNameOk returns a tuple with the ContactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetContactNameOk() (*string, bool) {
	if o == nil || o.ContactName == nil {
		return nil, false
	}
	return o.ContactName, true
}

// HasContactName returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) HasContactName() bool {
	if o != nil && o.ContactName != nil {
		return true
	}

	return false
}

// SetContactName gets a reference to the given string and assigns it to the ContactName field.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) SetContactName(v string) {
	o.ContactName = &v
}

// GetContactPhoneNumber returns the ContactPhoneNumber field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetContactPhoneNumber() string {
	if o == nil || o.ContactPhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.ContactPhoneNumber
}

// GetContactPhoneNumberOk returns a tuple with the ContactPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetContactPhoneNumberOk() (*string, bool) {
	if o == nil || o.ContactPhoneNumber == nil {
		return nil, false
	}
	return o.ContactPhoneNumber, true
}

// HasContactPhoneNumber returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) HasContactPhoneNumber() bool {
	if o != nil && o.ContactPhoneNumber != nil {
		return true
	}

	return false
}

// SetContactPhoneNumber gets a reference to the given string and assigns it to the ContactPhoneNumber field.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) SetContactPhoneNumber(v string) {
	o.ContactPhoneNumber = &v
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetContactEmail() string {
	if o == nil || o.ContactEmail == nil {
		var ret string
		return ret
	}
	return *o.ContactEmail
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) GetContactEmailOk() (*string, bool) {
	if o == nil || o.ContactEmail == nil {
		return nil, false
	}
	return o.ContactEmail, true
}

// HasContactEmail returns a boolean if a field has been set.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) HasContactEmail() bool {
	if o != nil && o.ContactEmail != nil {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given string and assigns it to the ContactEmail field.
func (o *TruenasUpdateCustomerInformation0PhysicalLocation) SetContactEmail(v string) {
	o.ContactEmail = &v
}

func (o TruenasUpdateCustomerInformation0PhysicalLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Zip != nil {
		toSerialize["zip"] = o.Zip
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.ContactName != nil {
		toSerialize["contact_name"] = o.ContactName
	}
	if o.ContactPhoneNumber != nil {
		toSerialize["contact_phone_number"] = o.ContactPhoneNumber
	}
	if o.ContactEmail != nil {
		toSerialize["contact_email"] = o.ContactEmail
	}
	return json.Marshal(toSerialize)
}

type NullableTruenasUpdateCustomerInformation0PhysicalLocation struct {
	value *TruenasUpdateCustomerInformation0PhysicalLocation
	isSet bool
}

func (v NullableTruenasUpdateCustomerInformation0PhysicalLocation) Get() *TruenasUpdateCustomerInformation0PhysicalLocation {
	return v.value
}

func (v *NullableTruenasUpdateCustomerInformation0PhysicalLocation) Set(val *TruenasUpdateCustomerInformation0PhysicalLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableTruenasUpdateCustomerInformation0PhysicalLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableTruenasUpdateCustomerInformation0PhysicalLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTruenasUpdateCustomerInformation0PhysicalLocation(val *TruenasUpdateCustomerInformation0PhysicalLocation) *NullableTruenasUpdateCustomerInformation0PhysicalLocation {
	return &NullableTruenasUpdateCustomerInformation0PhysicalLocation{value: val, isSet: true}
}

func (v NullableTruenasUpdateCustomerInformation0PhysicalLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTruenasUpdateCustomerInformation0PhysicalLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
