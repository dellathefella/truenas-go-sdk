/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// KeychaincredentialUpdate1 struct for KeychaincredentialUpdate1
type KeychaincredentialUpdate1 struct {
	Name       *string                `json:"name,omitempty"`
	Attributes map[string]interface{} `json:"attributes,omitempty"`
}

// NewKeychaincredentialUpdate1 instantiates a new KeychaincredentialUpdate1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeychaincredentialUpdate1() *KeychaincredentialUpdate1 {
	this := KeychaincredentialUpdate1{}
	return &this
}

// NewKeychaincredentialUpdate1WithDefaults instantiates a new KeychaincredentialUpdate1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeychaincredentialUpdate1WithDefaults() *KeychaincredentialUpdate1 {
	this := KeychaincredentialUpdate1{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KeychaincredentialUpdate1) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialUpdate1) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KeychaincredentialUpdate1) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KeychaincredentialUpdate1) SetName(v string) {
	o.Name = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *KeychaincredentialUpdate1) GetAttributes() map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialUpdate1) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *KeychaincredentialUpdate1) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *KeychaincredentialUpdate1) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

func (o KeychaincredentialUpdate1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableKeychaincredentialUpdate1 struct {
	value *KeychaincredentialUpdate1
	isSet bool
}

func (v NullableKeychaincredentialUpdate1) Get() *KeychaincredentialUpdate1 {
	return v.value
}

func (v *NullableKeychaincredentialUpdate1) Set(val *KeychaincredentialUpdate1) {
	v.value = val
	v.isSet = true
}

func (v NullableKeychaincredentialUpdate1) IsSet() bool {
	return v.isSet
}

func (v *NullableKeychaincredentialUpdate1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeychaincredentialUpdate1(val *KeychaincredentialUpdate1) *NullableKeychaincredentialUpdate1 {
	return &NullableKeychaincredentialUpdate1{value: val, isSet: true}
}

func (v NullableKeychaincredentialUpdate1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeychaincredentialUpdate1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
