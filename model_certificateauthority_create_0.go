/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// CertificateauthorityCreate0 struct for CertificateauthorityCreate0
type CertificateauthorityCreate0 struct {
	Tos                *bool                             `json:"tos,omitempty"`
	CsrId              *int32                            `json:"csr_id,omitempty"`
	Signedby           *int32                            `json:"signedby,omitempty"`
	KeyLength          *int32                            `json:"key_length,omitempty"`
	RenewDays          *int32                            `json:"renew_days,omitempty"`
	Type               *int32                            `json:"type,omitempty"`
	Lifetime           *int32                            `json:"lifetime,omitempty"`
	Serial             *int32                            `json:"serial,omitempty"`
	AcmeDirectoryUri   *string                           `json:"acme_directory_uri,omitempty"`
	Certificate        *string                           `json:"certificate,omitempty"`
	City               *string                           `json:"city,omitempty"`
	Common             NullableString                    `json:"common,omitempty"`
	Country            *string                           `json:"country,omitempty"`
	CSR                *string                           `json:"CSR,omitempty"`
	EcCurve            *string                           `json:"ec_curve,omitempty"`
	Email              *string                           `json:"email,omitempty"`
	KeyType            *string                           `json:"key_type,omitempty"`
	Name               *string                           `json:"name,omitempty"`
	Organization       *string                           `json:"organization,omitempty"`
	OrganizationalUnit *string                           `json:"organizational_unit,omitempty"`
	Passphrase         *string                           `json:"passphrase,omitempty"`
	Privatekey         *string                           `json:"privatekey,omitempty"`
	State              *string                           `json:"state,omitempty"`
	CreateType         *string                           `json:"create_type,omitempty"`
	DigestAlgorithm    *string                           `json:"digest_algorithm,omitempty"`
	San                []string                          `json:"san,omitempty"`
	CertExtensions     *CertificateCreate0CertExtensions `json:"cert_extensions,omitempty"`
}

// NewCertificateauthorityCreate0 instantiates a new CertificateauthorityCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateauthorityCreate0() *CertificateauthorityCreate0 {
	this := CertificateauthorityCreate0{}
	return &this
}

// NewCertificateauthorityCreate0WithDefaults instantiates a new CertificateauthorityCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateauthorityCreate0WithDefaults() *CertificateauthorityCreate0 {
	this := CertificateauthorityCreate0{}
	return &this
}

// GetTos returns the Tos field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetTos() bool {
	if o == nil || o.Tos == nil {
		var ret bool
		return ret
	}
	return *o.Tos
}

// GetTosOk returns a tuple with the Tos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetTosOk() (*bool, bool) {
	if o == nil || o.Tos == nil {
		return nil, false
	}
	return o.Tos, true
}

// HasTos returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasTos() bool {
	if o != nil && o.Tos != nil {
		return true
	}

	return false
}

// SetTos gets a reference to the given bool and assigns it to the Tos field.
func (o *CertificateauthorityCreate0) SetTos(v bool) {
	o.Tos = &v
}

// GetCsrId returns the CsrId field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetCsrId() int32 {
	if o == nil || o.CsrId == nil {
		var ret int32
		return ret
	}
	return *o.CsrId
}

// GetCsrIdOk returns a tuple with the CsrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetCsrIdOk() (*int32, bool) {
	if o == nil || o.CsrId == nil {
		return nil, false
	}
	return o.CsrId, true
}

// HasCsrId returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasCsrId() bool {
	if o != nil && o.CsrId != nil {
		return true
	}

	return false
}

// SetCsrId gets a reference to the given int32 and assigns it to the CsrId field.
func (o *CertificateauthorityCreate0) SetCsrId(v int32) {
	o.CsrId = &v
}

// GetSignedby returns the Signedby field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetSignedby() int32 {
	if o == nil || o.Signedby == nil {
		var ret int32
		return ret
	}
	return *o.Signedby
}

// GetSignedbyOk returns a tuple with the Signedby field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetSignedbyOk() (*int32, bool) {
	if o == nil || o.Signedby == nil {
		return nil, false
	}
	return o.Signedby, true
}

// HasSignedby returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasSignedby() bool {
	if o != nil && o.Signedby != nil {
		return true
	}

	return false
}

// SetSignedby gets a reference to the given int32 and assigns it to the Signedby field.
func (o *CertificateauthorityCreate0) SetSignedby(v int32) {
	o.Signedby = &v
}

// GetKeyLength returns the KeyLength field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetKeyLength() int32 {
	if o == nil || o.KeyLength == nil {
		var ret int32
		return ret
	}
	return *o.KeyLength
}

// GetKeyLengthOk returns a tuple with the KeyLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetKeyLengthOk() (*int32, bool) {
	if o == nil || o.KeyLength == nil {
		return nil, false
	}
	return o.KeyLength, true
}

// HasKeyLength returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasKeyLength() bool {
	if o != nil && o.KeyLength != nil {
		return true
	}

	return false
}

// SetKeyLength gets a reference to the given int32 and assigns it to the KeyLength field.
func (o *CertificateauthorityCreate0) SetKeyLength(v int32) {
	o.KeyLength = &v
}

// GetRenewDays returns the RenewDays field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetRenewDays() int32 {
	if o == nil || o.RenewDays == nil {
		var ret int32
		return ret
	}
	return *o.RenewDays
}

// GetRenewDaysOk returns a tuple with the RenewDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetRenewDaysOk() (*int32, bool) {
	if o == nil || o.RenewDays == nil {
		return nil, false
	}
	return o.RenewDays, true
}

// HasRenewDays returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasRenewDays() bool {
	if o != nil && o.RenewDays != nil {
		return true
	}

	return false
}

// SetRenewDays gets a reference to the given int32 and assigns it to the RenewDays field.
func (o *CertificateauthorityCreate0) SetRenewDays(v int32) {
	o.RenewDays = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *CertificateauthorityCreate0) SetType(v int32) {
	o.Type = &v
}

// GetLifetime returns the Lifetime field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetLifetime() int32 {
	if o == nil || o.Lifetime == nil {
		var ret int32
		return ret
	}
	return *o.Lifetime
}

// GetLifetimeOk returns a tuple with the Lifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetLifetimeOk() (*int32, bool) {
	if o == nil || o.Lifetime == nil {
		return nil, false
	}
	return o.Lifetime, true
}

// HasLifetime returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasLifetime() bool {
	if o != nil && o.Lifetime != nil {
		return true
	}

	return false
}

// SetLifetime gets a reference to the given int32 and assigns it to the Lifetime field.
func (o *CertificateauthorityCreate0) SetLifetime(v int32) {
	o.Lifetime = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetSerial() int32 {
	if o == nil || o.Serial == nil {
		var ret int32
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetSerialOk() (*int32, bool) {
	if o == nil || o.Serial == nil {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasSerial() bool {
	if o != nil && o.Serial != nil {
		return true
	}

	return false
}

// SetSerial gets a reference to the given int32 and assigns it to the Serial field.
func (o *CertificateauthorityCreate0) SetSerial(v int32) {
	o.Serial = &v
}

// GetAcmeDirectoryUri returns the AcmeDirectoryUri field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetAcmeDirectoryUri() string {
	if o == nil || o.AcmeDirectoryUri == nil {
		var ret string
		return ret
	}
	return *o.AcmeDirectoryUri
}

// GetAcmeDirectoryUriOk returns a tuple with the AcmeDirectoryUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetAcmeDirectoryUriOk() (*string, bool) {
	if o == nil || o.AcmeDirectoryUri == nil {
		return nil, false
	}
	return o.AcmeDirectoryUri, true
}

// HasAcmeDirectoryUri returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasAcmeDirectoryUri() bool {
	if o != nil && o.AcmeDirectoryUri != nil {
		return true
	}

	return false
}

// SetAcmeDirectoryUri gets a reference to the given string and assigns it to the AcmeDirectoryUri field.
func (o *CertificateauthorityCreate0) SetAcmeDirectoryUri(v string) {
	o.AcmeDirectoryUri = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *CertificateauthorityCreate0) SetCertificate(v string) {
	o.Certificate = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CertificateauthorityCreate0) SetCity(v string) {
	o.City = &v
}

// GetCommon returns the Common field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CertificateauthorityCreate0) GetCommon() string {
	if o == nil || o.Common.Get() == nil {
		var ret string
		return ret
	}
	return *o.Common.Get()
}

// GetCommonOk returns a tuple with the Common field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CertificateauthorityCreate0) GetCommonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Common.Get(), o.Common.IsSet()
}

// HasCommon returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasCommon() bool {
	if o != nil && o.Common.IsSet() {
		return true
	}

	return false
}

// SetCommon gets a reference to the given NullableString and assigns it to the Common field.
func (o *CertificateauthorityCreate0) SetCommon(v string) {
	o.Common.Set(&v)
}

// SetCommonNil sets the value for Common to be an explicit nil
func (o *CertificateauthorityCreate0) SetCommonNil() {
	o.Common.Set(nil)
}

// UnsetCommon ensures that no value is present for Common, not even an explicit nil
func (o *CertificateauthorityCreate0) UnsetCommon() {
	o.Common.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CertificateauthorityCreate0) SetCountry(v string) {
	o.Country = &v
}

// GetCSR returns the CSR field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetCSR() string {
	if o == nil || o.CSR == nil {
		var ret string
		return ret
	}
	return *o.CSR
}

// GetCSROk returns a tuple with the CSR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetCSROk() (*string, bool) {
	if o == nil || o.CSR == nil {
		return nil, false
	}
	return o.CSR, true
}

// HasCSR returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasCSR() bool {
	if o != nil && o.CSR != nil {
		return true
	}

	return false
}

// SetCSR gets a reference to the given string and assigns it to the CSR field.
func (o *CertificateauthorityCreate0) SetCSR(v string) {
	o.CSR = &v
}

// GetEcCurve returns the EcCurve field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetEcCurve() string {
	if o == nil || o.EcCurve == nil {
		var ret string
		return ret
	}
	return *o.EcCurve
}

// GetEcCurveOk returns a tuple with the EcCurve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetEcCurveOk() (*string, bool) {
	if o == nil || o.EcCurve == nil {
		return nil, false
	}
	return o.EcCurve, true
}

// HasEcCurve returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasEcCurve() bool {
	if o != nil && o.EcCurve != nil {
		return true
	}

	return false
}

// SetEcCurve gets a reference to the given string and assigns it to the EcCurve field.
func (o *CertificateauthorityCreate0) SetEcCurve(v string) {
	o.EcCurve = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *CertificateauthorityCreate0) SetEmail(v string) {
	o.Email = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *CertificateauthorityCreate0) SetKeyType(v string) {
	o.KeyType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CertificateauthorityCreate0) SetName(v string) {
	o.Name = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetOrganization() string {
	if o == nil || o.Organization == nil {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetOrganizationOk() (*string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *CertificateauthorityCreate0) SetOrganization(v string) {
	o.Organization = &v
}

// GetOrganizationalUnit returns the OrganizationalUnit field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetOrganizationalUnit() string {
	if o == nil || o.OrganizationalUnit == nil {
		var ret string
		return ret
	}
	return *o.OrganizationalUnit
}

// GetOrganizationalUnitOk returns a tuple with the OrganizationalUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetOrganizationalUnitOk() (*string, bool) {
	if o == nil || o.OrganizationalUnit == nil {
		return nil, false
	}
	return o.OrganizationalUnit, true
}

// HasOrganizationalUnit returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasOrganizationalUnit() bool {
	if o != nil && o.OrganizationalUnit != nil {
		return true
	}

	return false
}

// SetOrganizationalUnit gets a reference to the given string and assigns it to the OrganizationalUnit field.
func (o *CertificateauthorityCreate0) SetOrganizationalUnit(v string) {
	o.OrganizationalUnit = &v
}

// GetPassphrase returns the Passphrase field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetPassphrase() string {
	if o == nil || o.Passphrase == nil {
		var ret string
		return ret
	}
	return *o.Passphrase
}

// GetPassphraseOk returns a tuple with the Passphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetPassphraseOk() (*string, bool) {
	if o == nil || o.Passphrase == nil {
		return nil, false
	}
	return o.Passphrase, true
}

// HasPassphrase returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasPassphrase() bool {
	if o != nil && o.Passphrase != nil {
		return true
	}

	return false
}

// SetPassphrase gets a reference to the given string and assigns it to the Passphrase field.
func (o *CertificateauthorityCreate0) SetPassphrase(v string) {
	o.Passphrase = &v
}

// GetPrivatekey returns the Privatekey field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetPrivatekey() string {
	if o == nil || o.Privatekey == nil {
		var ret string
		return ret
	}
	return *o.Privatekey
}

// GetPrivatekeyOk returns a tuple with the Privatekey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetPrivatekeyOk() (*string, bool) {
	if o == nil || o.Privatekey == nil {
		return nil, false
	}
	return o.Privatekey, true
}

// HasPrivatekey returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasPrivatekey() bool {
	if o != nil && o.Privatekey != nil {
		return true
	}

	return false
}

// SetPrivatekey gets a reference to the given string and assigns it to the Privatekey field.
func (o *CertificateauthorityCreate0) SetPrivatekey(v string) {
	o.Privatekey = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CertificateauthorityCreate0) SetState(v string) {
	o.State = &v
}

// GetCreateType returns the CreateType field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetCreateType() string {
	if o == nil || o.CreateType == nil {
		var ret string
		return ret
	}
	return *o.CreateType
}

// GetCreateTypeOk returns a tuple with the CreateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetCreateTypeOk() (*string, bool) {
	if o == nil || o.CreateType == nil {
		return nil, false
	}
	return o.CreateType, true
}

// HasCreateType returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasCreateType() bool {
	if o != nil && o.CreateType != nil {
		return true
	}

	return false
}

// SetCreateType gets a reference to the given string and assigns it to the CreateType field.
func (o *CertificateauthorityCreate0) SetCreateType(v string) {
	o.CreateType = &v
}

// GetDigestAlgorithm returns the DigestAlgorithm field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetDigestAlgorithm() string {
	if o == nil || o.DigestAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.DigestAlgorithm
}

// GetDigestAlgorithmOk returns a tuple with the DigestAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetDigestAlgorithmOk() (*string, bool) {
	if o == nil || o.DigestAlgorithm == nil {
		return nil, false
	}
	return o.DigestAlgorithm, true
}

// HasDigestAlgorithm returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasDigestAlgorithm() bool {
	if o != nil && o.DigestAlgorithm != nil {
		return true
	}

	return false
}

// SetDigestAlgorithm gets a reference to the given string and assigns it to the DigestAlgorithm field.
func (o *CertificateauthorityCreate0) SetDigestAlgorithm(v string) {
	o.DigestAlgorithm = &v
}

// GetSan returns the San field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetSan() []string {
	if o == nil || o.San == nil {
		var ret []string
		return ret
	}
	return o.San
}

// GetSanOk returns a tuple with the San field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetSanOk() ([]string, bool) {
	if o == nil || o.San == nil {
		return nil, false
	}
	return o.San, true
}

// HasSan returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasSan() bool {
	if o != nil && o.San != nil {
		return true
	}

	return false
}

// SetSan gets a reference to the given []string and assigns it to the San field.
func (o *CertificateauthorityCreate0) SetSan(v []string) {
	o.San = v
}

// GetCertExtensions returns the CertExtensions field value if set, zero value otherwise.
func (o *CertificateauthorityCreate0) GetCertExtensions() CertificateCreate0CertExtensions {
	if o == nil || o.CertExtensions == nil {
		var ret CertificateCreate0CertExtensions
		return ret
	}
	return *o.CertExtensions
}

// GetCertExtensionsOk returns a tuple with the CertExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCreate0) GetCertExtensionsOk() (*CertificateCreate0CertExtensions, bool) {
	if o == nil || o.CertExtensions == nil {
		return nil, false
	}
	return o.CertExtensions, true
}

// HasCertExtensions returns a boolean if a field has been set.
func (o *CertificateauthorityCreate0) HasCertExtensions() bool {
	if o != nil && o.CertExtensions != nil {
		return true
	}

	return false
}

// SetCertExtensions gets a reference to the given CertificateCreate0CertExtensions and assigns it to the CertExtensions field.
func (o *CertificateauthorityCreate0) SetCertExtensions(v CertificateCreate0CertExtensions) {
	o.CertExtensions = &v
}

func (o CertificateauthorityCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tos != nil {
		toSerialize["tos"] = o.Tos
	}
	if o.CsrId != nil {
		toSerialize["csr_id"] = o.CsrId
	}
	if o.Signedby != nil {
		toSerialize["signedby"] = o.Signedby
	}
	if o.KeyLength != nil {
		toSerialize["key_length"] = o.KeyLength
	}
	if o.RenewDays != nil {
		toSerialize["renew_days"] = o.RenewDays
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Lifetime != nil {
		toSerialize["lifetime"] = o.Lifetime
	}
	if o.Serial != nil {
		toSerialize["serial"] = o.Serial
	}
	if o.AcmeDirectoryUri != nil {
		toSerialize["acme_directory_uri"] = o.AcmeDirectoryUri
	}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Common.IsSet() {
		toSerialize["common"] = o.Common.Get()
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.CSR != nil {
		toSerialize["CSR"] = o.CSR
	}
	if o.EcCurve != nil {
		toSerialize["ec_curve"] = o.EcCurve
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OrganizationalUnit != nil {
		toSerialize["organizational_unit"] = o.OrganizationalUnit
	}
	if o.Passphrase != nil {
		toSerialize["passphrase"] = o.Passphrase
	}
	if o.Privatekey != nil {
		toSerialize["privatekey"] = o.Privatekey
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.CreateType != nil {
		toSerialize["create_type"] = o.CreateType
	}
	if o.DigestAlgorithm != nil {
		toSerialize["digest_algorithm"] = o.DigestAlgorithm
	}
	if o.San != nil {
		toSerialize["san"] = o.San
	}
	if o.CertExtensions != nil {
		toSerialize["cert_extensions"] = o.CertExtensions
	}
	return json.Marshal(toSerialize)
}

type NullableCertificateauthorityCreate0 struct {
	value *CertificateauthorityCreate0
	isSet bool
}

func (v NullableCertificateauthorityCreate0) Get() *CertificateauthorityCreate0 {
	return v.value
}

func (v *NullableCertificateauthorityCreate0) Set(val *CertificateauthorityCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateauthorityCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateauthorityCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateauthorityCreate0(val *CertificateauthorityCreate0) *NullableCertificateauthorityCreate0 {
	return &NullableCertificateauthorityCreate0{value: val, isSet: true}
}

func (v NullableCertificateauthorityCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateauthorityCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
