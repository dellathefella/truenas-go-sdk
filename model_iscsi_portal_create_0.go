/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// IscsiPortalCreate0 struct for IscsiPortalCreate0
type IscsiPortalCreate0 struct {
	Comment             *string                  `json:"comment,omitempty"`
	DiscoveryAuthmethod *string                  `json:"discovery_authmethod,omitempty"`
	DiscoveryAuthgroup  NullableInt32            `json:"discovery_authgroup,omitempty"`
	Listen              []map[string]interface{} `json:"listen,omitempty"`
}

// NewIscsiPortalCreate0 instantiates a new IscsiPortalCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIscsiPortalCreate0() *IscsiPortalCreate0 {
	this := IscsiPortalCreate0{}
	return &this
}

// NewIscsiPortalCreate0WithDefaults instantiates a new IscsiPortalCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIscsiPortalCreate0WithDefaults() *IscsiPortalCreate0 {
	this := IscsiPortalCreate0{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *IscsiPortalCreate0) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiPortalCreate0) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *IscsiPortalCreate0) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *IscsiPortalCreate0) SetComment(v string) {
	o.Comment = &v
}

// GetDiscoveryAuthmethod returns the DiscoveryAuthmethod field value if set, zero value otherwise.
func (o *IscsiPortalCreate0) GetDiscoveryAuthmethod() string {
	if o == nil || o.DiscoveryAuthmethod == nil {
		var ret string
		return ret
	}
	return *o.DiscoveryAuthmethod
}

// GetDiscoveryAuthmethodOk returns a tuple with the DiscoveryAuthmethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiPortalCreate0) GetDiscoveryAuthmethodOk() (*string, bool) {
	if o == nil || o.DiscoveryAuthmethod == nil {
		return nil, false
	}
	return o.DiscoveryAuthmethod, true
}

// HasDiscoveryAuthmethod returns a boolean if a field has been set.
func (o *IscsiPortalCreate0) HasDiscoveryAuthmethod() bool {
	if o != nil && o.DiscoveryAuthmethod != nil {
		return true
	}

	return false
}

// SetDiscoveryAuthmethod gets a reference to the given string and assigns it to the DiscoveryAuthmethod field.
func (o *IscsiPortalCreate0) SetDiscoveryAuthmethod(v string) {
	o.DiscoveryAuthmethod = &v
}

// GetDiscoveryAuthgroup returns the DiscoveryAuthgroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IscsiPortalCreate0) GetDiscoveryAuthgroup() int32 {
	if o == nil || o.DiscoveryAuthgroup.Get() == nil {
		var ret int32
		return ret
	}
	return *o.DiscoveryAuthgroup.Get()
}

// GetDiscoveryAuthgroupOk returns a tuple with the DiscoveryAuthgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IscsiPortalCreate0) GetDiscoveryAuthgroupOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscoveryAuthgroup.Get(), o.DiscoveryAuthgroup.IsSet()
}

// HasDiscoveryAuthgroup returns a boolean if a field has been set.
func (o *IscsiPortalCreate0) HasDiscoveryAuthgroup() bool {
	if o != nil && o.DiscoveryAuthgroup.IsSet() {
		return true
	}

	return false
}

// SetDiscoveryAuthgroup gets a reference to the given NullableInt32 and assigns it to the DiscoveryAuthgroup field.
func (o *IscsiPortalCreate0) SetDiscoveryAuthgroup(v int32) {
	o.DiscoveryAuthgroup.Set(&v)
}

// SetDiscoveryAuthgroupNil sets the value for DiscoveryAuthgroup to be an explicit nil
func (o *IscsiPortalCreate0) SetDiscoveryAuthgroupNil() {
	o.DiscoveryAuthgroup.Set(nil)
}

// UnsetDiscoveryAuthgroup ensures that no value is present for DiscoveryAuthgroup, not even an explicit nil
func (o *IscsiPortalCreate0) UnsetDiscoveryAuthgroup() {
	o.DiscoveryAuthgroup.Unset()
}

// GetListen returns the Listen field value if set, zero value otherwise.
func (o *IscsiPortalCreate0) GetListen() []map[string]interface{} {
	if o == nil || o.Listen == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.Listen
}

// GetListenOk returns a tuple with the Listen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiPortalCreate0) GetListenOk() ([]map[string]interface{}, bool) {
	if o == nil || o.Listen == nil {
		return nil, false
	}
	return o.Listen, true
}

// HasListen returns a boolean if a field has been set.
func (o *IscsiPortalCreate0) HasListen() bool {
	if o != nil && o.Listen != nil {
		return true
	}

	return false
}

// SetListen gets a reference to the given []map[string]interface{} and assigns it to the Listen field.
func (o *IscsiPortalCreate0) SetListen(v []map[string]interface{}) {
	o.Listen = v
}

func (o IscsiPortalCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.DiscoveryAuthmethod != nil {
		toSerialize["discovery_authmethod"] = o.DiscoveryAuthmethod
	}
	if o.DiscoveryAuthgroup.IsSet() {
		toSerialize["discovery_authgroup"] = o.DiscoveryAuthgroup.Get()
	}
	if o.Listen != nil {
		toSerialize["listen"] = o.Listen
	}
	return json.Marshal(toSerialize)
}

type NullableIscsiPortalCreate0 struct {
	value *IscsiPortalCreate0
	isSet bool
}

func (v NullableIscsiPortalCreate0) Get() *IscsiPortalCreate0 {
	return v.value
}

func (v *NullableIscsiPortalCreate0) Set(val *IscsiPortalCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableIscsiPortalCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableIscsiPortalCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIscsiPortalCreate0(val *IscsiPortalCreate0) *NullableIscsiPortalCreate0 {
	return &NullableIscsiPortalCreate0{value: val, isSet: true}
}

func (v NullableIscsiPortalCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIscsiPortalCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
