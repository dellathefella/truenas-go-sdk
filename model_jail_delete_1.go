/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// JailDelete1 struct for JailDelete1
type JailDelete1 struct {
	Force *bool `json:"force,omitempty"`
}

// NewJailDelete1 instantiates a new JailDelete1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJailDelete1() *JailDelete1 {
	this := JailDelete1{}
	return &this
}

// NewJailDelete1WithDefaults instantiates a new JailDelete1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJailDelete1WithDefaults() *JailDelete1 {
	this := JailDelete1{}
	return &this
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *JailDelete1) GetForce() bool {
	if o == nil || o.Force == nil {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JailDelete1) GetForceOk() (*bool, bool) {
	if o == nil || o.Force == nil {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *JailDelete1) HasForce() bool {
	if o != nil && o.Force != nil {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *JailDelete1) SetForce(v bool) {
	o.Force = &v
}

func (o JailDelete1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Force != nil {
		toSerialize["force"] = o.Force
	}
	return json.Marshal(toSerialize)
}

type NullableJailDelete1 struct {
	value *JailDelete1
	isSet bool
}

func (v NullableJailDelete1) Get() *JailDelete1 {
	return v.value
}

func (v *NullableJailDelete1) Set(val *JailDelete1) {
	v.value = val
	v.isSet = true
}

func (v NullableJailDelete1) IsSet() bool {
	return v.isSet
}

func (v *NullableJailDelete1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJailDelete1(val *JailDelete1) *NullableJailDelete1 {
	return &NullableJailDelete1{value: val, isSet: true}
}

func (v NullableJailDelete1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJailDelete1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
