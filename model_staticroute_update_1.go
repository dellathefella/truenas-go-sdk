/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// StaticrouteUpdate1 struct for StaticrouteUpdate1
type StaticrouteUpdate1 struct {
	Destination *string `json:"destination,omitempty"`
	Gateway     *string `json:"gateway,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewStaticrouteUpdate1 instantiates a new StaticrouteUpdate1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStaticrouteUpdate1() *StaticrouteUpdate1 {
	this := StaticrouteUpdate1{}
	return &this
}

// NewStaticrouteUpdate1WithDefaults instantiates a new StaticrouteUpdate1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStaticrouteUpdate1WithDefaults() *StaticrouteUpdate1 {
	this := StaticrouteUpdate1{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *StaticrouteUpdate1) GetDestination() string {
	if o == nil || o.Destination == nil {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StaticrouteUpdate1) GetDestinationOk() (*string, bool) {
	if o == nil || o.Destination == nil {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *StaticrouteUpdate1) HasDestination() bool {
	if o != nil && o.Destination != nil {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *StaticrouteUpdate1) SetDestination(v string) {
	o.Destination = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *StaticrouteUpdate1) GetGateway() string {
	if o == nil || o.Gateway == nil {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StaticrouteUpdate1) GetGatewayOk() (*string, bool) {
	if o == nil || o.Gateway == nil {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *StaticrouteUpdate1) HasGateway() bool {
	if o != nil && o.Gateway != nil {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *StaticrouteUpdate1) SetGateway(v string) {
	o.Gateway = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *StaticrouteUpdate1) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StaticrouteUpdate1) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *StaticrouteUpdate1) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *StaticrouteUpdate1) SetDescription(v string) {
	o.Description = &v
}

func (o StaticrouteUpdate1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.Gateway != nil {
		toSerialize["gateway"] = o.Gateway
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableStaticrouteUpdate1 struct {
	value *StaticrouteUpdate1
	isSet bool
}

func (v NullableStaticrouteUpdate1) Get() *StaticrouteUpdate1 {
	return v.value
}

func (v *NullableStaticrouteUpdate1) Set(val *StaticrouteUpdate1) {
	v.value = val
	v.isSet = true
}

func (v NullableStaticrouteUpdate1) IsSet() bool {
	return v.isSet
}

func (v *NullableStaticrouteUpdate1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStaticrouteUpdate1(val *StaticrouteUpdate1) *NullableStaticrouteUpdate1 {
	return &NullableStaticrouteUpdate1{value: val, isSet: true}
}

func (v NullableStaticrouteUpdate1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStaticrouteUpdate1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
