components:
  responses:
    NotFound:
      description: Endpoint not found
    Success:
      description: Operation succeeded
    Unauthorized:
      description: No authorization for this endpoint
  schemas:
    acme_dns_authenticator_create_0:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        authenticator:
          type: string
        name:
          type: string
      title: dns_authenticator_create
      type: object
    acme_dns_authenticator_update_1:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        name:
          type: string
      title: dns_authenticator_update
      type: object
    activedirectory_domain_info_0:
      default: ''
      title: domain
      type: string
    activedirectory_leave_0:
      additionalProperties: false
      default: {}
      properties:
        password:
          type: string
        username:
          type: string
      title: leave_ad
      type: object
    activedirectory_update_0:
      additionalProperties: false
      default: {}
      properties:
        allow_dns_updates:
          type: boolean
        allow_trusted_doms:
          type: boolean
        bindname:
          type: string
        bindpw:
          type: string
        createcomputer:
          type: string
        disable_freenas_cache:
          type: boolean
        dns_timeout:
          type: integer
        domainname:
          type: string
        enable:
          type: boolean
        kerberos_principal:
          nullable: true
          type: string
        kerberos_realm:
          nullable: true
          type: integer
        netbiosalias:
          items: {}
          type: array
        netbiosname:
          type: string
        netbiosname_b:
          type: string
        nss_info:
          enum:
          - SFU
          - SFU20
          - RFC2307
          nullable: true
          type: string
        restrict_pam:
          type: boolean
        site:
          nullable: true
          type: string
        timeout:
          type: integer
        use_default_domain:
          type: boolean
        verbose_logging:
          type: boolean
      title: activedirectory_update
      type: object
    afp_update_0:
      additionalProperties: false
      default: {}
      properties:
        bindip:
          items:
            type: string
          type: array
        chmod_request:
          enum:
          - PRESERVE
          - SIMPLE
          - IGNORE
          type: string
        connections_limit:
          type: integer
        dbpath:
          type: string
        global_aux:
          type: string
        guest:
          type: boolean
        guest_user:
          type: string
        loglevel:
          enum:
          - NONE
          - MINIMUM
          - NORMAL
          - FULL
          - DEBUG
          type: string
        map_acls:
          enum:
          - RIGHTS
          - MODE
          - NONE
          type: string
      title: afp_update
      type: object
    alert_dismiss_0:
      title: uuid
      type: string
    alert_restore_0:
      title: uuid
      type: string
    alertclasses_update_0:
      additionalProperties: false
      default: {}
      properties:
        classes:
          additionalProperties: true
          properties: {}
          type: object
      title: alert_classes_update
      type: object
    alertservice_create_0:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        enabled:
          type: boolean
        level:
          enum:
          - INFO
          - NOTICE
          - WARNING
          - ERROR
          - CRITICAL
          - ALERT
          - EMERGENCY
          type: string
        name:
          type: string
        type:
          type: string
      title: alert_service_create
      type: object
    alertservice_test_0:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        enabled:
          type: boolean
        level:
          enum:
          - INFO
          - NOTICE
          - WARNING
          - ERROR
          - CRITICAL
          - ALERT
          - EMERGENCY
          type: string
        name:
          type: string
        type:
          type: string
      title: alert_service_create
      type: object
    alertservice_update_1:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        enabled:
          type: boolean
        level:
          enum:
          - INFO
          - NOTICE
          - WARNING
          - ERROR
          - CRITICAL
          - ALERT
          - EMERGENCY
          type: string
        name:
          type: string
        type:
          type: string
      title: alert_service_create
      type: object
    api_key_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          type: string
      title: api_key_create
      type: object
    api_key_update_1:
      additionalProperties: false
      default: {}
      properties:
        name:
          type: string
        reset:
          type: boolean
      title: api_key_create
      type: object
    auth_check_password:
      properties:
        password:
          $ref: '#/components/schemas/auth_check_password_1'
        username:
          $ref: '#/components/schemas/auth_check_password_0'
      type: object
    auth_check_password_0:
      title: username
      type: string
    auth_check_password_1:
      title: password
      type: string
    auth_check_user:
      properties:
        password:
          $ref: '#/components/schemas/auth_check_user_1'
        username:
          $ref: '#/components/schemas/auth_check_user_0'
      type: object
    auth_check_user_0:
      title: username
      type: string
    auth_check_user_1:
      title: password
      type: string
    auth_generate_token:
      properties:
        attrs:
          $ref: '#/components/schemas/auth_generate_token_1'
        ttl:
          $ref: '#/components/schemas/auth_generate_token_0'
      type: object
    auth_generate_token_0:
      default: 600
      nullable: true
      title: ttl
      type: integer
    auth_generate_token_1:
      additionalProperties: true
      default: {}
      properties: {}
      title: attrs
      type: object
    auth_twofactor_update_0:
      additionalProperties: false
      default: {}
      properties:
        enabled:
          type: boolean
        interval:
          type: integer
        otp_digits:
          type: integer
        services:
          additionalProperties: false
          properties:
            ssh:
              type: boolean
          type: object
        window:
          type: integer
      title: auth_twofactor_update
      type: object
    auth_twofactor_verify_0:
      nullable: true
      title: token
      type: string
    boot_attach:
      properties:
        dev:
          $ref: '#/components/schemas/boot_attach_0'
        options:
          $ref: '#/components/schemas/boot_attach_1'
      type: object
    boot_attach_0:
      title: dev
      type: string
    boot_attach_1:
      additionalProperties: false
      default: {}
      properties:
        expand:
          type: boolean
      title: options
      type: object
    boot_detach_0:
      title: dev
      type: string
    boot_replace:
      properties:
        dev:
          $ref: '#/components/schemas/boot_replace_1'
        label:
          $ref: '#/components/schemas/boot_replace_0'
      type: object
    boot_replace_0:
      title: label
      type: string
    boot_replace_1:
      title: dev
      type: string
    boot_set_scrub_interval_0:
      title: interval
      type: integer
    bootenv_activate:
      properties: {}
      type: object
    bootenv_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          type: string
        source:
          type: string
      title: bootenv_create
      type: object
    bootenv_set_attribute_1:
      additionalProperties: false
      default: {}
      properties:
        keep:
          type: boolean
      title: attributes
      type: object
    bootenv_update_1:
      additionalProperties: false
      default: {}
      properties:
        name:
          type: string
      title: bootenv_update
      type: object
    certificate_create_0:
      additionalProperties: false
      default: {}
      properties:
        CSR:
          type: string
        acme_directory_uri:
          type: string
        cert_extensions:
          additionalProperties: false
          properties:
            AuthorityKeyIdentifier:
              additionalProperties: false
              properties:
                authority_cert_issuer:
                  type: boolean
                enabled:
                  type: boolean
                extension_critical:
                  type: boolean
              type: object
            BasicConstraints:
              additionalProperties: false
              properties:
                ca:
                  type: boolean
                enabled:
                  type: boolean
                extension_critical:
                  type: boolean
                path_length:
                  nullable: true
                  type: integer
              type: object
            ExtendedKeyUsage:
              additionalProperties: false
              properties:
                enabled:
                  type: boolean
                extension_critical:
                  type: boolean
                usages:
                  items:
                    type: string
                  type: array
              type: object
            KeyUsage:
              additionalProperties: false
              properties:
                content_commitment:
                  type: boolean
                crl_sign:
                  type: boolean
                data_encipherment:
                  type: boolean
                decipher_only:
                  type: boolean
                digital_signature:
                  type: boolean
                enabled:
                  type: boolean
                encipher_only:
                  type: boolean
                extension_critical:
                  type: boolean
                key_agreement:
                  type: boolean
                key_cert_sign:
                  type: boolean
                key_encipherment:
                  type: boolean
              type: object
          type: object
        certificate:
          type: string
        city:
          type: string
        common:
          nullable: true
          type: string
        country:
          type: string
        create_type:
          enum:
          - CERTIFICATE_CREATE_INTERNAL
          - CERTIFICATE_CREATE_IMPORTED
          - CERTIFICATE_CREATE_CSR
          - CERTIFICATE_CREATE_IMPORTED_CSR
          - CERTIFICATE_CREATE_ACME
          type: string
        csr_id:
          type: integer
        digest_algorithm:
          enum:
          - SHA1
          - SHA224
          - SHA256
          - SHA384
          - SHA512
          type: string
        dns_mapping:
          additionalProperties: true
          properties: {}
          type: object
        ec_curve:
          enum:
          - BrainpoolP512R1
          - BrainpoolP384R1
          - BrainpoolP256R1
          - SECP256K1
          - SECP384R1
          - SECP521R1
          - ed25519
          type: string
        email:
          type: string
        key_length:
          type: integer
        key_type:
          enum:
          - RSA
          - EC
          type: string
        lifetime:
          type: integer
        name:
          type: string
        organization:
          type: string
        organizational_unit:
          type: string
        passphrase:
          type: string
        privatekey:
          type: string
        renew_days:
          type: integer
        san:
          items:
            type: string
          type: array
        serial:
          type: integer
        signedby:
          type: integer
        state:
          type: string
        tos:
          type: boolean
        type:
          type: integer
      title: certificate_create
      type: object
    certificate_delete_1:
      default: false
      title: force
      type: boolean
    certificate_update_1:
      additionalProperties: false
      default: {}
      properties:
        name:
          type: string
        revoked:
          type: boolean
      title: certificate_update
      type: object
    certificateauthority_ca_sign_csr_0:
      additionalProperties: false
      default: {}
      properties:
        ca_id:
          type: integer
        cert_extensions:
          additionalProperties: false
          properties:
            AuthorityKeyIdentifier:
              additionalProperties: false
              properties:
                authority_cert_issuer:
                  type: boolean
                enabled:
                  type: boolean
                extension_critical:
                  type: boolean
              type: object
            BasicConstraints:
              additionalProperties: false
              properties:
                ca:
                  type: boolean
                enabled:
                  type: boolean
                extension_critical:
                  type: boolean
                path_length:
                  nullable: true
                  type: integer
              type: object
            ExtendedKeyUsage:
              additionalProperties: false
              properties:
                enabled:
                  type: boolean
                extension_critical:
                  type: boolean
                usages:
                  items:
                    type: string
                  type: array
              type: object
            KeyUsage:
              additionalProperties: false
              properties:
                content_commitment:
                  type: boolean
                crl_sign:
                  type: boolean
                data_encipherment:
                  type: boolean
                decipher_only:
                  type: boolean
                digital_signature:
                  type: boolean
                enabled:
                  type: boolean
                encipher_only:
                  type: boolean
                extension_critical:
                  type: boolean
                key_agreement:
                  type: boolean
                key_cert_sign:
                  type: boolean
                key_encipherment:
                  type: boolean
              type: object
          type: object
        csr_cert_id:
          type: integer
        name:
          type: string
      title: ca_sign_csr
      type: object
    certificateauthority_create_0:
      additionalProperties: false
      default: {}
      properties:
        CSR:
          type: string
        acme_directory_uri:
          type: string
        cert_extensions:
          additionalProperties: false
          properties:
            AuthorityKeyIdentifier:
              additionalProperties: false
              properties:
                authority_cert_issuer:
                  type: boolean
                enabled:
                  type: boolean
                extension_critical:
                  type: boolean
              type: object
            BasicConstraints:
              additionalProperties: false
              properties:
                ca:
                  type: boolean
                enabled:
                  type: boolean
                extension_critical:
                  type: boolean
                path_length:
                  nullable: true
                  type: integer
              type: object
            ExtendedKeyUsage:
              additionalProperties: false
              properties:
                enabled:
                  type: boolean
                extension_critical:
                  type: boolean
                usages:
                  items:
                    type: string
                  type: array
              type: object
            KeyUsage:
              additionalProperties: false
              properties:
                content_commitment:
                  type: boolean
                crl_sign:
                  type: boolean
                data_encipherment:
                  type: boolean
                decipher_only:
                  type: boolean
                digital_signature:
                  type: boolean
                enabled:
                  type: boolean
                encipher_only:
                  type: boolean
                extension_critical:
                  type: boolean
                key_agreement:
                  type: boolean
                key_cert_sign:
                  type: boolean
                key_encipherment:
                  type: boolean
              type: object
          type: object
        certificate:
          type: string
        city:
          type: string
        common:
          nullable: true
          type: string
        country:
          type: string
        create_type:
          enum:
          - CA_CREATE_INTERNAL
          - CA_CREATE_IMPORTED
          - CA_CREATE_INTERMEDIATE
          type: string
        csr_id:
          type: integer
        digest_algorithm:
          enum:
          - SHA1
          - SHA224
          - SHA256
          - SHA384
          - SHA512
          type: string
        ec_curve:
          enum:
          - BrainpoolP512R1
          - BrainpoolP384R1
          - BrainpoolP256R1
          - SECP256K1
          - SECP384R1
          - SECP521R1
          - ed25519
          type: string
        email:
          type: string
        key_length:
          type: integer
        key_type:
          enum:
          - RSA
          - EC
          type: string
        lifetime:
          type: integer
        name:
          type: string
        organization:
          type: string
        organizational_unit:
          type: string
        passphrase:
          type: string
        privatekey:
          type: string
        renew_days:
          type: integer
        san:
          items:
            type: string
          type: array
        serial:
          type: integer
        signedby:
          type: integer
        state:
          type: string
        tos:
          type: boolean
        type:
          type: integer
      title: certificate_create
      type: object
    certificateauthority_update_1:
      additionalProperties: false
      default: {}
      properties:
        ca_id:
          type: integer
        create_type:
          enum:
          - CA_SIGN_CSR
          type: string
        csr_cert_id:
          type: integer
        name:
          type: string
        revoked:
          type: boolean
      title: ca_update
      type: object
    cloudsync_abort:
      properties: {}
      type: object
    cloudsync_create_0:
      additionalProperties: false
      default: {}
      properties:
        args:
          type: string
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        bwlimit:
          items:
            type: object
          type: array
        credentials:
          type: integer
        description:
          type: string
        direction:
          enum:
          - PUSH
          - PULL
          type: string
        enabled:
          type: boolean
        encryption:
          type: boolean
        encryption_password:
          type: string
        encryption_salt:
          type: string
        exclude:
          items:
            type: string
          type: array
        filename_encryption:
          type: boolean
        follow_symlinks:
          type: boolean
        path:
          type: string
        post_script:
          type: string
        pre_script:
          type: string
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        snapshot:
          type: boolean
        transfer_mode:
          enum:
          - SYNC
          - COPY
          - MOVE
          type: string
        transfers:
          nullable: true
          type: integer
      title: cloud_sync_create
      type: object
    cloudsync_credentials_create_0:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        name:
          type: string
        provider:
          type: string
      title: cloud_sync_credentials_create
      type: object
    cloudsync_credentials_update_1:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        name:
          type: string
        provider:
          type: string
      title: cloud_sync_credentials_create
      type: object
    cloudsync_credentials_verify_0:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        provider:
          type: string
      title: cloud_sync_credentials_verify
      type: object
    cloudsync_list_buckets_0:
      title: credentials_id
      type: integer
    cloudsync_list_directory_0:
      additionalProperties: false
      default: {}
      properties:
        args:
          type: string
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        credentials:
          type: integer
        encryption:
          type: boolean
        encryption_password:
          type: string
        encryption_salt:
          type: string
        filename_encryption:
          type: boolean
      title: cloud_sync_ls
      type: object
    cloudsync_onedrive_list_drives_0:
      additionalProperties: false
      default: {}
      properties:
        client_id:
          type: string
        client_secret:
          type: string
        token:
          type: string
      title: onedrive_list_drives
      type: object
    cloudsync_restore_1:
      additionalProperties: false
      default: {}
      properties:
        description:
          type: string
        path:
          type: string
        transfer_mode:
          enum:
          - SYNC
          - COPY
          type: string
      title: cloud_sync_restore
      type: object
    cloudsync_sync_1:
      additionalProperties: false
      default: {}
      properties:
        dry_run:
          type: boolean
      title: cloud_sync_sync_options
      type: object
    cloudsync_sync_onetime:
      properties:
        cloud_sync_create:
          $ref: '#/components/schemas/cloudsync_sync_onetime_0'
        cloud_sync_sync_options:
          $ref: '#/components/schemas/cloudsync_sync_onetime_1'
      type: object
    cloudsync_sync_onetime_0:
      additionalProperties: false
      default: {}
      properties:
        args:
          type: string
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        bwlimit:
          items:
            type: object
          type: array
        credentials:
          type: integer
        description:
          type: string
        direction:
          enum:
          - PUSH
          - PULL
          type: string
        enabled:
          type: boolean
        encryption:
          type: boolean
        encryption_password:
          type: string
        encryption_salt:
          type: string
        exclude:
          items:
            type: string
          type: array
        filename_encryption:
          type: boolean
        follow_symlinks:
          type: boolean
        path:
          type: string
        post_script:
          type: string
        pre_script:
          type: string
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        snapshot:
          type: boolean
        transfer_mode:
          enum:
          - SYNC
          - COPY
          - MOVE
          type: string
        transfers:
          nullable: true
          type: integer
      title: cloud_sync_create
      type: object
    cloudsync_sync_onetime_1:
      additionalProperties: false
      default: {}
      properties:
        dry_run:
          type: boolean
      title: cloud_sync_sync_options
      type: object
    cloudsync_update_1:
      additionalProperties: false
      default: {}
      properties:
        args:
          type: string
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        bwlimit:
          items:
            type: object
          type: array
        credentials:
          type: integer
        description:
          type: string
        direction:
          enum:
          - PUSH
          - PULL
          type: string
        enabled:
          type: boolean
        encryption:
          type: boolean
        encryption_password:
          type: string
        encryption_salt:
          type: string
        exclude:
          items:
            type: string
          type: array
        filename_encryption:
          type: boolean
        follow_symlinks:
          type: boolean
        path:
          type: string
        post_script:
          type: string
        pre_script:
          type: string
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        snapshot:
          type: boolean
        transfer_mode:
          enum:
          - SYNC
          - COPY
          - MOVE
          type: string
        transfers:
          nullable: true
          type: integer
      title: cloud_sync_create
      type: object
    config_reset_0:
      additionalProperties: false
      default: {}
      properties:
        reboot:
          type: boolean
      title: options
      type: object
    core_bulk:
      properties:
        description:
          $ref: '#/components/schemas/core_bulk_2'
        method:
          $ref: '#/components/schemas/core_bulk_0'
        params:
          $ref: '#/components/schemas/core_bulk_1'
      type: object
    core_bulk_0:
      title: method
      type: string
    core_bulk_1:
      default: []
      items: {}
      title: params
      type: array
    core_bulk_2:
      default: null
      nullable: true
      title: description
      type: string
    core_debug:
      properties:
        engine:
          $ref: '#/components/schemas/core_debug_0'
        options:
          $ref: '#/components/schemas/core_debug_1'
      type: object
    core_debug_0:
      enum:
      - PTVS
      - PYDEV
      - REMOTE_PDB
      title: engine
      type: string
    core_debug_1:
      additionalProperties: false
      default: {}
      properties:
        bind_address:
          type: string
        bind_port:
          type: integer
        host:
          type: string
        local_path:
          type: string
        secret:
          type: string
        threaded:
          type: boolean
        wait_attach:
          type: boolean
      title: options
      type: object
    core_download:
      properties:
        args:
          $ref: '#/components/schemas/core_download_1'
        buffered:
          $ref: '#/components/schemas/core_download_3'
        filename:
          $ref: '#/components/schemas/core_download_2'
        method:
          $ref: '#/components/schemas/core_download_0'
      type: object
    core_download_0:
      title: method
      type: string
    core_download_1:
      default: []
      items: {}
      title: args
      type: array
    core_download_2:
      title: filename
      type: string
    core_download_3:
      default: false
      title: buffered
      type: boolean
    core_get_methods_0:
      default: null
      nullable: true
      title: service
      type: string
    core_job_abort_0:
      title: id
      type: integer
    core_job_update:
      properties:
        id:
          $ref: '#/components/schemas/core_job_update_0'
        job-update:
          $ref: '#/components/schemas/core_job_update_1'
      type: object
    core_job_update_0:
      title: id
      type: integer
    core_job_update_1:
      additionalProperties: false
      default: {}
      properties:
        progress:
          additionalProperties: true
          properties: {}
          type: object
      title: job-update
      type: object
    core_job_wait_0:
      title: id
      type: integer
    core_ping_remote_0:
      additionalProperties: false
      default: {}
      properties:
        hostname:
          type: string
        timeout:
          type: integer
        type:
          enum:
          - ICMP
          - ICMPV4
          - ICMPV6
          type: string
      title: options
      type: object
    core_resize_shell:
      properties:
        cols:
          $ref: '#/components/schemas/core_resize_shell_1'
        id:
          $ref: '#/components/schemas/core_resize_shell_0'
        rows:
          $ref: '#/components/schemas/core_resize_shell_2'
      type: object
    core_resize_shell_0:
      title: id
      type: string
    core_resize_shell_1:
      title: cols
      type: integer
    core_resize_shell_2:
      title: rows
      type: integer
    cronjob_create_0:
      additionalProperties: false
      default: {}
      properties:
        command:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        stderr:
          type: boolean
        stdout:
          type: boolean
        user:
          type: string
      title: cron_job_create
      type: object
    cronjob_run:
      properties:
        id:
          $ref: '#/components/schemas/cronjob_run_0'
        skip_disabled:
          $ref: '#/components/schemas/cronjob_run_1'
      type: object
    cronjob_run_0:
      title: id
      type: integer
    cronjob_run_1:
      default: false
      title: skip_disabled
      type: boolean
    cronjob_update_1:
      additionalProperties: false
      default: {}
      properties:
        command:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        stderr:
          type: boolean
        stdout:
          type: boolean
        user:
          type: string
      title: cron_job_create
      type: object
    device_get_info_0:
      enum:
      - SERIAL
      - DISK
      title: type
      type: string
    disk_get_encrypted_0:
      additionalProperties: false
      default: {}
      properties:
        unused:
          type: boolean
      title: options
      type: object
    disk_get_unused_0:
      default: false
      title: join_partitions
      type: boolean
    disk_overprovision:
      properties:
        devname:
          $ref: '#/components/schemas/disk_overprovision_0'
        size:
          $ref: '#/components/schemas/disk_overprovision_1'
      type: object
    disk_overprovision_0:
      title: devname
      type: string
    disk_overprovision_1:
      title: size
      type: integer
    disk_smart_attributes_0:
      title: name
      type: string
    disk_spindown_0:
      title: disk
      type: string
    disk_temperature:
      properties:
        name:
          $ref: '#/components/schemas/disk_temperature_0'
        powermode:
          $ref: '#/components/schemas/disk_temperature_1'
      type: object
    disk_temperature_0:
      title: name
      type: string
    disk_temperature_1:
      default: NEVER
      enum:
      - NEVER
      - SLEEP
      - STANDBY
      - IDLE
      title: powermode
      type: string
    disk_temperatures:
      properties:
        names:
          $ref: '#/components/schemas/disk_temperatures_0'
        powermode:
          $ref: '#/components/schemas/disk_temperatures_1'
      type: object
    disk_temperatures_0:
      items:
        type: string
      title: names
      type: array
    disk_temperatures_1:
      default: NEVER
      enum:
      - NEVER
      - SLEEP
      - STANDBY
      - IDLE
      title: powermode
      type: string
    disk_unoverprovision_0:
      title: devname
      type: string
    disk_update_1:
      additionalProperties: false
      default: {}
      properties:
        acousticlevel:
          enum:
          - DISABLED
          - MINIMUM
          - MEDIUM
          - MAXIMUM
          type: string
        advpowermgmt:
          enum:
          - DISABLED
          - '1'
          - '64'
          - '127'
          - '128'
          - '192'
          - '254'
          type: string
        critical:
          nullable: true
          type: integer
        description:
          type: string
        difference:
          nullable: true
          type: integer
        enclosure:
          additionalProperties: false
          properties:
            number:
              type: integer
            slot:
              type: integer
          type: object
        hddstandby:
          enum:
          - ALWAYS ON
          - '5'
          - '10'
          - '20'
          - '30'
          - '60'
          - '120'
          - '180'
          - '240'
          - '300'
          - '330'
          type: string
        hddstandby_force:
          type: boolean
        informational:
          nullable: true
          type: integer
        passwd:
          type: string
        smartoptions:
          type: string
        togglesmart:
          type: boolean
      title: disk_update
      type: object
    disk_wipe:
      properties:
        dev:
          $ref: '#/components/schemas/disk_wipe_0'
        mode:
          $ref: '#/components/schemas/disk_wipe_1'
        swap_removal_options:
          $ref: '#/components/schemas/disk_wipe_3'
        synccache:
          $ref: '#/components/schemas/disk_wipe_2'
      type: object
    disk_wipe_0:
      title: dev
      type: string
    disk_wipe_1:
      enum:
      - QUICK
      - FULL
      - FULL_RANDOM
      title: mode
      type: string
    disk_wipe_2:
      default: true
      title: synccache
      type: boolean
    disk_wipe_3:
      additionalProperties: false
      default: {}
      properties:
        configure_swap:
          type: boolean
      title: swap_removal_options
      type: object
    dyndns_update_0:
      additionalProperties: false
      default: {}
      properties:
        checkip_path:
          type: string
        checkip_server:
          type: string
        checkip_ssl:
          type: boolean
        custom_ddns_path:
          type: string
        custom_ddns_server:
          type: string
        domain:
          items:
            type: string
          type: array
        password:
          type: string
        period:
          type: integer
        provider:
          type: string
        ssl:
          type: boolean
        username:
          type: string
      title: dyndns_update
      type: object
    enclosure_set_slot_status:
      properties:
        enclosure_id:
          $ref: '#/components/schemas/enclosure_set_slot_status_0'
        slot:
          $ref: '#/components/schemas/enclosure_set_slot_status_1'
        status:
          $ref: '#/components/schemas/enclosure_set_slot_status_2'
      type: object
    enclosure_set_slot_status_0:
      title: enclosure_id
      type: string
    enclosure_set_slot_status_1:
      title: slot
      type: integer
    enclosure_set_slot_status_2:
      enum:
      - CLEAR
      - FAULT
      - IDENTIFY
      title: status
      type: string
    enclosure_update_1:
      additionalProperties: false
      default: {}
      properties:
        label:
          type: string
      title: enclosure_update
      type: object
    failover_call_remote:
      properties:
        args:
          $ref: '#/components/schemas/failover_call_remote_1'
        method:
          $ref: '#/components/schemas/failover_call_remote_0'
        options:
          $ref: '#/components/schemas/failover_call_remote_2'
      type: object
    failover_call_remote_0:
      title: method
      type: string
    failover_call_remote_1:
      default: []
      items: {}
      title: args
      type: array
    failover_call_remote_2:
      additionalProperties: false
      default: {}
      properties:
        callback:
          anyOf:
          - type: string
          - type: integer
          - type: boolean
          - type: object
          - items: {}
            type: array
          title: callback
        job:
          type: boolean
        job_return:
          nullable: true
          type: boolean
        timeout:
          type: integer
      title: options
      type: object
    failover_control:
      properties:
        action:
          $ref: '#/components/schemas/failover_control_0'
        options:
          $ref: '#/components/schemas/failover_control_1'
      type: object
    failover_control_0:
      enum:
      - ENABLE
      - DISABLE
      title: action
      type: string
    failover_control_1:
      additionalProperties: false
      default: {}
      properties:
        active:
          type: boolean
      title: options
      type: object
    failover_sync_to_peer_0:
      additionalProperties: false
      default: {}
      properties:
        reboot:
          type: boolean
      title: options
      type: object
    failover_unlock_0:
      additionalProperties: false
      default: {}
      properties:
        datasets:
          items:
            type: object
          type: array
        pools:
          items:
            type: object
          type: array
      title: options
      type: object
    failover_update_0:
      additionalProperties: false
      default: {}
      properties:
        disabled:
          type: boolean
        master:
          nullable: true
          type: boolean
        timeout:
          type: integer
      title: failover_update
      type: object
    failover_upgrade_0:
      additionalProperties: false
      default: {}
      properties:
        train:
          type: string
      title: failover_upgrade
      type: object
    fcport_update_1:
      additionalProperties: false
      default: {}
      properties:
        mode:
          enum:
          - INITIATOR
          - TARGET
          - DISABLED
          type: string
        target:
          nullable: true
          type: integer
      title: fcport_update
      type: object
    filesystem_acl_is_trivial_0:
      title: path
      type: string
    filesystem_chown_0:
      additionalProperties: false
      default: {}
      properties:
        gid:
          nullable: true
          type: integer
        options:
          additionalProperties: false
          properties:
            recursive:
              type: boolean
            traverse:
              type: boolean
          type: object
        path:
          type: string
        uid:
          nullable: true
          type: integer
      title: filesystem_ownership
      type: object
    filesystem_get_default_acl:
      properties:
        acl_type:
          $ref: '#/components/schemas/filesystem_get_default_acl_0'
        share_type:
          $ref: '#/components/schemas/filesystem_get_default_acl_1'
      type: object
    filesystem_get_default_acl_0:
      default: OPEN
      enum:
      - OPEN
      - RESTRICTED
      - HOME
      - DOMAIN_HOME
      title: acl_type
      type: string
    filesystem_get_default_acl_1:
      default: NONE
      enum:
      - NONE
      - AFP
      - SMB
      - NFS
      title: share_type
      type: string
    filesystem_getacl:
      properties:
        path:
          $ref: '#/components/schemas/filesystem_getacl_0'
        simplified:
          $ref: '#/components/schemas/filesystem_getacl_1'
      type: object
    filesystem_getacl_0:
      title: path
      type: string
    filesystem_getacl_1:
      default: true
      title: simplified
      type: boolean
    filesystem_listdir:
      properties:
        path:
          $ref: '#/components/schemas/filesystem_listdir_0'
        query-filters:
          $ref: '#/components/schemas/filesystem_listdir_1'
        query-options:
          $ref: '#/components/schemas/filesystem_listdir_2'
      type: object
    filesystem_listdir_0:
      title: path
      type: string
    filesystem_listdir_1:
      default: []
      items: {}
      title: query-filters
      type: array
    filesystem_listdir_2:
      additionalProperties: false
      default: {}
      properties:
        count:
          type: boolean
        extend:
          nullable: true
          type: string
        extend_context:
          nullable: true
          type: string
        extra:
          additionalProperties: true
          properties: {}
          type: object
        force_sql_filters:
          type: boolean
        get:
          type: boolean
        limit:
          type: integer
        offset:
          type: integer
        order_by:
          items: {}
          type: array
        prefix:
          nullable: true
          type: string
        relationships:
          type: boolean
        select:
          items: {}
          type: array
      title: query-options
      type: object
    filesystem_setacl_0:
      additionalProperties: false
      default: {}
      properties:
        acltype:
          enum:
          - NFS4
          - POSIX1E
          - RICH
          type: string
        dacl:
          items:
            oneOf:
            - type: object
            - type: object
          type: array
        gid:
          nullable: true
          type: integer
        nfs41_flags:
          additionalProperties: false
          properties:
            autoinherit:
              type: boolean
            protected:
              type: boolean
          type: object
        options:
          additionalProperties: false
          properties:
            canonicalize:
              type: boolean
            recursive:
              type: boolean
            stripacl:
              type: boolean
            traverse:
              type: boolean
          type: object
        path:
          type: string
        uid:
          nullable: true
          type: integer
      title: filesystem_acl
      type: object
    filesystem_setperm_0:
      additionalProperties: false
      default: {}
      properties:
        gid:
          nullable: true
          type: integer
        mode:
          nullable: true
          type: string
        options:
          additionalProperties: false
          properties:
            recursive:
              type: boolean
            stripacl:
              type: boolean
            traverse:
              type: boolean
          type: object
        path:
          type: string
        uid:
          nullable: true
          type: integer
      title: filesystem_permission
      type: object
    filesystem_stat_0:
      title: path
      type: string
    filesystem_statfs_0:
      title: path
      type: string
    ftp_update_0:
      additionalProperties: false
      default: {}
      properties:
        anonpath:
          nullable: true
          type: string
        anonuserbw:
          type: integer
        anonuserdlbw:
          type: integer
        banner:
          type: string
        clients:
          type: integer
        defaultroot:
          type: boolean
        dirmask:
          type: string
        filemask:
          type: string
        fxp:
          type: boolean
        ident:
          type: boolean
        ipconnections:
          type: integer
        localuserbw:
          type: integer
        localuserdlbw:
          type: integer
        loginattempt:
          type: integer
        masqaddress:
          type: string
        onlyanonymous:
          type: boolean
        onlylocal:
          type: boolean
        options:
          type: string
        passiveportsmax:
          type: integer
        passiveportsmin:
          type: integer
        port:
          type: integer
        resume:
          type: boolean
        reversedns:
          type: boolean
        rootlogin:
          type: boolean
        ssltls_certificate:
          nullable: true
          type: integer
        timeout:
          type: integer
        tls:
          type: boolean
        tls_opt_allow_client_renegotiations:
          type: boolean
        tls_opt_allow_dot_login:
          type: boolean
        tls_opt_allow_per_user:
          type: boolean
        tls_opt_common_name_required:
          type: boolean
        tls_opt_dns_name_required:
          type: boolean
        tls_opt_enable_diags:
          type: boolean
        tls_opt_export_cert_data:
          type: boolean
        tls_opt_ip_address_required:
          type: boolean
        tls_opt_no_cert_request:
          type: boolean
        tls_opt_no_empty_fragments:
          type: boolean
        tls_opt_no_session_reuse_required:
          type: boolean
        tls_opt_stdenvvars:
          type: boolean
        tls_policy:
          enum:
          - 'on'
          - 'off'
          - data
          - '!data'
          - auth
          - ctrl
          - ctrl+data
          - ctrl+!data
          - auth+data
          - auth+!data
          type: string
      title: ftp_update
      type: object
    group_create_0:
      additionalProperties: false
      default: {}
      properties:
        allow_duplicate_gid:
          type: boolean
        gid:
          type: integer
        name:
          type: string
        smb:
          type: boolean
        sudo:
          type: boolean
        sudo_commands:
          items:
            type: string
          type: array
        sudo_nopasswd:
          type: boolean
        users:
          items:
            type: integer
          type: array
      title: group_create
      type: object
    group_delete_1:
      additionalProperties: false
      default: {}
      properties:
        delete_users:
          type: boolean
      title: options
      type: object
    group_get_group_obj_0:
      additionalProperties: false
      default: {}
      properties:
        gid:
          type: integer
        groupname:
          type: string
      title: get_group_obj
      type: object
    group_update_1:
      additionalProperties: false
      default: {}
      properties:
        allow_duplicate_gid:
          type: boolean
        gid:
          type: integer
        name:
          type: string
        smb:
          type: boolean
        sudo:
          type: boolean
        sudo_commands:
          items:
            type: string
          type: array
        sudo_nopasswd:
          type: boolean
        users:
          items:
            type: integer
          type: array
      title: group_create
      type: object
    idmap_create_0:
      additionalProperties: false
      default: {}
      properties:
        certificate:
          nullable: true
          type: integer
        dns_domain_name:
          type: string
        idmap_backend:
          enum:
          - AD
          - AUTORID
          - LDAP
          - NSS
          - RFC2307
          - RID
          - TDB
          type: string
        name:
          type: string
        options:
          additionalProperties: false
          properties:
            bind_path_group:
              type: string
            bind_path_user:
              type: string
            cn_realm:
              type: string
            ignore_builtin:
              type: boolean
            ldap_base_dn:
              type: string
            ldap_domain:
              type: string
            ldap_realm:
              type: boolean
            ldap_server:
              type: string
            ldap_url:
              type: string
            ldap_user_dn:
              type: string
            ldap_user_dn_password:
              type: string
            linked_service:
              enum:
              - LOCAL_ACCOUNT
              - LDAP
              - NIS
              type: string
            rangesize:
              type: integer
            readonly:
              type: boolean
            schema_mode:
              enum:
              - RFC2307
              - SFU
              - SFU20
              type: string
            ssl:
              enum:
              - 'OFF'
              - 'ON'
              - START_TLS
              type: string
            sssd_compat:
              type: boolean
            unix_nss_info:
              type: boolean
            unix_primary_group:
              type: boolean
            user_cn:
              type: boolean
          type: object
        range_high:
          type: integer
        range_low:
          type: integer
      title: idmap_domain_create
      type: object
    idmap_options_choices_0:
      enum:
      - AD
      - AUTORID
      - LDAP
      - NSS
      - RFC2307
      - RID
      - TDB
      title: idmap_backend
      type: string
    idmap_update_1:
      additionalProperties: false
      default: {}
      properties:
        certificate:
          nullable: true
          type: integer
        dns_domain_name:
          type: string
        idmap_backend:
          enum:
          - AD
          - AUTORID
          - LDAP
          - NSS
          - RFC2307
          - RID
          - TDB
          type: string
        name:
          type: string
        options:
          additionalProperties: false
          properties:
            bind_path_group:
              type: string
            bind_path_user:
              type: string
            cn_realm:
              type: string
            ignore_builtin:
              type: boolean
            ldap_base_dn:
              type: string
            ldap_domain:
              type: string
            ldap_realm:
              type: boolean
            ldap_server:
              type: string
            ldap_url:
              type: string
            ldap_user_dn:
              type: string
            ldap_user_dn_password:
              type: string
            linked_service:
              enum:
              - LOCAL_ACCOUNT
              - LDAP
              - NIS
              type: string
            rangesize:
              type: integer
            readonly:
              type: boolean
            schema_mode:
              enum:
              - RFC2307
              - SFU
              - SFU20
              type: string
            ssl:
              enum:
              - 'OFF'
              - 'ON'
              - START_TLS
              type: string
            sssd_compat:
              type: boolean
            unix_nss_info:
              type: boolean
            unix_primary_group:
              type: boolean
            user_cn:
              type: boolean
          type: object
        range_high:
          type: integer
        range_low:
          type: integer
      title: idmap_domain_create
      type: object
    initshutdownscript_create_0:
      additionalProperties: false
      default: {}
      properties:
        command:
          nullable: true
          type: string
        comment:
          type: string
        enabled:
          type: boolean
        script:
          nullable: true
          type: string
        script_text:
          nullable: true
          type: string
        timeout:
          type: integer
        type:
          enum:
          - COMMAND
          - SCRIPT
          type: string
        when:
          enum:
          - PREINIT
          - POSTINIT
          - SHUTDOWN
          type: string
      title: init_shutdown_script_create
      type: object
    initshutdownscript_update_1:
      additionalProperties: false
      default: {}
      properties:
        command:
          nullable: true
          type: string
        comment:
          type: string
        enabled:
          type: boolean
        script:
          nullable: true
          type: string
        script_text:
          nullable: true
          type: string
        timeout:
          type: integer
        type:
          enum:
          - COMMAND
          - SCRIPT
          type: string
        when:
          enum:
          - PREINIT
          - POSTINIT
          - SHUTDOWN
          type: string
      title: init_shutdown_script_create
      type: object
    interface_bridge_members_choices_0:
      default: null
      nullable: true
      title: id
      type: string
    interface_choices_0:
      additionalProperties: false
      default: {}
      properties:
        bridge_members:
          type: boolean
        exclude:
          items: {}
          type: array
        exclude_types:
          items:
            type: string
          type: array
        include:
          items: {}
          type: array
        lag_ports:
          type: boolean
        vlan_parent:
          type: boolean
      title: options
      type: object
    interface_commit_0:
      additionalProperties: false
      default: {}
      properties:
        checkin_timeout:
          type: integer
        rollback:
          type: boolean
      title: options
      type: object
    interface_create_0:
      additionalProperties: false
      default: {}
      properties:
        aliases:
          items:
            type: object
          type: array
        bridge_members:
          items: {}
          type: array
        description:
          nullable: true
          type: string
        disable_offload_capabilities:
          type: boolean
        failover_aliases:
          items:
            type: object
          type: array
        failover_critical:
          type: boolean
        failover_group:
          nullable: true
          type: integer
        failover_vhid:
          nullable: true
          type: integer
        failover_virtual_aliases:
          items:
            type: object
          type: array
        ipv4_dhcp:
          type: boolean
        ipv6_auto:
          type: boolean
        lag_ports:
          items:
            type: string
          type: array
        lag_protocol:
          enum:
          - LACP
          - FAILOVER
          - LOADBALANCE
          - ROUNDROBIN
          - NONE
          type: string
        mtu:
          nullable: true
          type: integer
        name:
          type: string
        options:
          type: string
        type:
          enum:
          - BRIDGE
          - LINK_AGGREGATION
          - VLAN
          type: string
        vlan_parent_interface:
          type: string
        vlan_pcp:
          nullable: true
          type: integer
        vlan_tag:
          type: integer
      title: interface_create
      type: object
    interface_ip_in_use_0:
      additionalProperties: false
      default: {}
      properties:
        any:
          type: boolean
        ipv4:
          type: boolean
        ipv6:
          type: boolean
        ipv6_link_local:
          type: boolean
        loopback:
          type: boolean
        static:
          type: boolean
      title: ips
      type: object
    interface_lag_ports_choices_0:
      default: null
      nullable: true
      title: id
      type: string
    interface_update_1:
      additionalProperties: false
      default: {}
      properties:
        aliases:
          items:
            type: object
          type: array
        bridge_members:
          items: {}
          type: array
        description:
          nullable: true
          type: string
        disable_offload_capabilities:
          type: boolean
        failover_aliases:
          items:
            type: object
          type: array
        failover_critical:
          type: boolean
        failover_group:
          nullable: true
          type: integer
        failover_vhid:
          nullable: true
          type: integer
        failover_virtual_aliases:
          items:
            type: object
          type: array
        ipv4_dhcp:
          type: boolean
        ipv6_auto:
          type: boolean
        lag_ports:
          items:
            type: string
          type: array
        lag_protocol:
          enum:
          - LACP
          - FAILOVER
          - LOADBALANCE
          - ROUNDROBIN
          - NONE
          type: string
        mtu:
          nullable: true
          type: integer
        name:
          type: string
        options:
          type: string
        vlan_parent_interface:
          type: string
        vlan_pcp:
          nullable: true
          type: integer
        vlan_tag:
          type: integer
      title: interface_create
      type: object
    ipmi_identify_0:
      additionalProperties: false
      default: {}
      properties:
        force:
          type: boolean
        seconds:
          type: integer
      title: options
      type: object
    ipmi_update_1:
      additionalProperties: false
      default: {}
      properties:
        dhcp:
          type: boolean
        gateway:
          type: string
        ipaddress:
          type: string
        netmask:
          type: string
        password:
          type: string
        vlan:
          nullable: true
          type: integer
      title: ipmi
      type: object
    iscsi_auth_create_0:
      additionalProperties: false
      default: {}
      properties:
        peersecret:
          type: string
        peeruser:
          type: string
        secret:
          type: string
        tag:
          type: integer
        user:
          type: string
      title: iscsi_auth_create
      type: object
    iscsi_auth_update_1:
      additionalProperties: false
      default: {}
      properties:
        peersecret:
          type: string
        peeruser:
          type: string
        secret:
          type: string
        tag:
          type: integer
        user:
          type: string
      title: iscsi_auth_create
      type: object
    iscsi_extent_create_0:
      additionalProperties: false
      default: {}
      properties:
        avail_threshold:
          nullable: true
          type: integer
        blocksize:
          type: integer
        comment:
          type: string
        disk:
          nullable: true
          type: string
        enabled:
          type: boolean
        filesize:
          type: integer
        insecure_tpc:
          type: boolean
        name:
          type: string
        path:
          nullable: true
          type: string
        pblocksize:
          type: boolean
        ro:
          type: boolean
        rpm:
          enum:
          - UNKNOWN
          - SSD
          - '5400'
          - '7200'
          - '10000'
          - '15000'
          type: string
        serial:
          nullable: true
          type: string
        type:
          enum:
          - DISK
          - FILE
          type: string
        xen:
          type: boolean
      title: iscsi_extent_create
      type: object
    iscsi_extent_delete:
      properties:
        force:
          $ref: '#/components/schemas/iscsi_extent_delete_2'
        remove:
          $ref: '#/components/schemas/iscsi_extent_delete_1'
      type: object
    iscsi_extent_delete_1:
      default: false
      title: remove
      type: boolean
    iscsi_extent_delete_2:
      default: false
      title: force
      type: boolean
    iscsi_extent_disk_choices_0:
      default: []
      items: {}
      title: exclude
      type: array
    iscsi_extent_update_1:
      additionalProperties: false
      default: {}
      properties:
        avail_threshold:
          nullable: true
          type: integer
        blocksize:
          type: integer
        comment:
          type: string
        disk:
          nullable: true
          type: string
        enabled:
          type: boolean
        filesize:
          type: integer
        insecure_tpc:
          type: boolean
        name:
          type: string
        path:
          nullable: true
          type: string
        pblocksize:
          type: boolean
        ro:
          type: boolean
        rpm:
          enum:
          - UNKNOWN
          - SSD
          - '5400'
          - '7200'
          - '10000'
          - '15000'
          type: string
        serial:
          nullable: true
          type: string
        type:
          enum:
          - DISK
          - FILE
          type: string
        xen:
          type: boolean
      title: iscsi_extent_create
      type: object
    iscsi_global_update_0:
      additionalProperties: false
      default: {}
      properties:
        alua:
          type: boolean
        basename:
          type: string
        isns_servers:
          items:
            type: string
          type: array
        pool_avail_threshold:
          nullable: true
          type: integer
      title: iscsiglobal_update
      type: object
    iscsi_initiator_create_0:
      additionalProperties: false
      default: {}
      properties:
        auth_network:
          items:
            type: string
          type: array
        comment:
          type: string
        initiators:
          items: {}
          type: array
      title: iscsi_initiator_create
      type: object
    iscsi_initiator_update_1:
      additionalProperties: false
      default: {}
      properties:
        auth_network:
          items:
            type: string
          type: array
        comment:
          type: string
        initiators:
          items: {}
          type: array
      title: iscsi_initiator_create
      type: object
    iscsi_portal_create_0:
      additionalProperties: false
      default: {}
      properties:
        comment:
          type: string
        discovery_authgroup:
          nullable: true
          type: integer
        discovery_authmethod:
          enum:
          - NONE
          - CHAP
          - CHAP_MUTUAL
          type: string
        listen:
          items:
            type: object
          type: array
      title: iscsiportal_create
      type: object
    iscsi_portal_update_1:
      additionalProperties: false
      default: {}
      properties:
        comment:
          type: string
        discovery_authgroup:
          nullable: true
          type: integer
        discovery_authmethod:
          enum:
          - NONE
          - CHAP
          - CHAP_MUTUAL
          type: string
        listen:
          items:
            type: object
          type: array
      title: iscsiportal_create
      type: object
    iscsi_target_create_0:
      additionalProperties: false
      default: {}
      properties:
        alias:
          nullable: true
          type: string
        groups:
          items:
            type: object
          type: array
        mode:
          enum:
          - ISCSI
          - FC
          - BOTH
          type: string
        name:
          type: string
      title: iscsi_target_create
      type: object
    iscsi_target_delete_1:
      default: false
      title: force
      type: boolean
    iscsi_target_update_1:
      additionalProperties: false
      default: {}
      properties:
        alias:
          nullable: true
          type: string
        groups:
          items:
            type: object
          type: array
        mode:
          enum:
          - ISCSI
          - FC
          - BOTH
          type: string
        name:
          type: string
      title: iscsi_target_create
      type: object
    iscsi_targetextent_create_0:
      additionalProperties: false
      default: {}
      properties:
        extent:
          type: integer
        lunid:
          nullable: true
          type: integer
        target:
          type: integer
      title: iscsi_targetextent_create
      type: object
    iscsi_targetextent_delete_1:
      default: false
      title: force
      type: boolean
    iscsi_targetextent_update_1:
      additionalProperties: false
      default: {}
      properties:
        extent:
          type: integer
        lunid:
          type: integer
        target:
          type: integer
      title: iscsi_targetextent_create
      type: object
    jail_activate_0:
      title: pool
      type: string
    jail_clean_0:
      enum:
      - ALL
      - JAIL
      - TEMPLATE
      - RELEASE
      title: ds_type
      type: string
    jail_clone_1:
      additionalProperties: false
      default: {}
      properties:
        pkglist:
          items:
            type: string
          type: array
        props:
          items: {}
          type: array
        thickjail:
          type: boolean
        uuid:
          type: string
      title: clone_jail
      type: object
    jail_create_0:
      additionalProperties: false
      default: {}
      properties:
        basejail:
          type: boolean
        empty:
          type: boolean
        https:
          type: boolean
        pkglist:
          items:
            type: string
          type: array
        props:
          items: {}
          type: array
        release:
          type: string
        short:
          type: boolean
        template:
          type: string
        uuid:
          type: string
      title: options
      type: object
    jail_delete_1:
      additionalProperties: false
      default: {}
      properties:
        force:
          type: boolean
      title: options
      type: object
    jail_exec:
      properties:
        command:
          $ref: '#/components/schemas/jail_exec_1'
        jail:
          $ref: '#/components/schemas/jail_exec_0'
        options:
          $ref: '#/components/schemas/jail_exec_2'
      type: object
    jail_exec_0:
      title: jail
      type: string
    jail_exec_1:
      items: {}
      title: command
      type: array
    jail_exec_2:
      additionalProperties: false
      default: {}
      properties:
        host_user:
          type: string
        jail_user:
          type: string
      title: options
      type: object
    jail_export_0:
      additionalProperties: false
      default: {}
      properties:
        compression_algorithm:
          enum:
          - ZIP
          - LZMA
          type: string
        jail:
          type: string
      title: options
      type: object
    jail_fetch_0:
      additionalProperties: false
      default: {}
      properties:
        accept:
          type: boolean
        branch:
          nullable: true
          type: string
        files:
          items: {}
          type: array
        https:
          type: boolean
        jail_name:
          type: string
        name:
          nullable: true
          type: string
        password:
          type: string
        props:
          items: {}
          type: array
        release:
          type: string
        server:
          type: string
        user:
          type: string
      title: options
      type: object
    jail_fstab:
      properties:
        jail:
          $ref: '#/components/schemas/jail_fstab_0'
        options:
          $ref: '#/components/schemas/jail_fstab_1'
      type: object
    jail_fstab_0:
      title: jail
      type: string
    jail_fstab_1:
      additionalProperties: false
      default: {}
      properties:
        action:
          enum:
          - ADD
          - REMOVE
          - REPLACE
          - LIST
          type: string
        destination:
          type: string
        dump:
          type: string
        fsoptions:
          type: string
        fstype:
          type: string
        index:
          type: integer
        pass:
          type: string
        source:
          type: string
      title: options
      type: object
    jail_import_image_0:
      additionalProperties: false
      default: {}
      properties:
        compression_algorithm:
          enum:
          - ZIP
          - LZMA
          - null
          nullable: true
          type: string
        jail:
          type: string
        path:
          nullable: true
          type: string
      title: options
      type: object
    jail_rc_action_0:
      enum:
      - START
      - STOP
      - RESTART
      title: action
      type: string
    jail_releases_choices_0:
      default: false
      title: remote
      type: boolean
    jail_restart_0:
      title: jail
      type: string
    jail_start_0:
      title: jail
      type: string
    jail_stop:
      properties:
        force:
          $ref: '#/components/schemas/jail_stop_1'
        jail:
          $ref: '#/components/schemas/jail_stop_0'
      type: object
    jail_stop_0:
      title: jail
      type: string
    jail_stop_1:
      default: false
      title: force
      type: boolean
    jail_update_1:
      additionalProperties: true
      default: {}
      properties:
        plugin:
          type: boolean
      title: jail_update
      type: object
    jail_update_defaults_0:
      additionalProperties: true
      default: {}
      properties: {}
      title: props
      type: object
    jail_update_to_latest_patch:
      properties:
        jail:
          $ref: '#/components/schemas/jail_update_to_latest_patch_0'
        update_pkgs:
          $ref: '#/components/schemas/jail_update_to_latest_patch_1'
      type: object
    jail_update_to_latest_patch_0:
      title: jail
      type: string
    jail_update_to_latest_patch_1:
      default: false
      title: update_pkgs
      type: boolean
    kerberos_keytab_create_0:
      additionalProperties: false
      default: {}
      properties:
        file:
          type: string
        name:
          type: string
      title: kerberos_keytab_create
      type: object
    kerberos_keytab_update_1:
      additionalProperties: false
      default: {}
      properties:
        file:
          type: string
        name:
          type: string
      title: kerberos_keytab_update
      type: object
    kerberos_realm_create_0:
      additionalProperties: false
      default: {}
      properties:
        admin_server:
          items: {}
          type: array
        kdc:
          items: {}
          type: array
        kpasswd_server:
          items: {}
          type: array
        realm:
          type: string
      title: kerberos_realm_create
      type: object
    kerberos_realm_update_1:
      additionalProperties: false
      default: {}
      properties:
        admin_server:
          items: {}
          type: array
        kdc:
          items: {}
          type: array
        kpasswd_server:
          items: {}
          type: array
        realm:
          type: string
      title: kerberos_realm_create
      type: object
    kerberos_update_0:
      additionalProperties: false
      default: {}
      properties:
        appdefaults_aux:
          type: string
        libdefaults_aux:
          type: string
      title: kerberos_settings_update
      type: object
    keychaincredential_create_0:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        name:
          type: string
        type:
          type: string
      title: keychain_credential_create
      type: object
    keychaincredential_delete_1:
      additionalProperties: false
      default: {}
      properties:
        cascade:
          type: boolean
      title: options
      type: object
    keychaincredential_remote_ssh_host_key_scan_0:
      additionalProperties: false
      default: {}
      properties:
        connect_timeout:
          type: integer
        host:
          type: string
        port:
          type: string
      title: keychain_remote_ssh_host_key_scan
      type: object
    keychaincredential_remote_ssh_semiautomatic_setup_0:
      additionalProperties: false
      default: {}
      properties:
        cipher:
          enum:
          - STANDARD
          - FAST
          - DISABLED
          type: string
        connect_timeout:
          type: integer
        name:
          type: string
        password:
          type: string
        private_key:
          type: integer
        token:
          type: string
        url:
          type: string
        username:
          type: string
      title: keychain_remote_ssh_semiautomatic_setup
      type: object
    keychaincredential_update_1:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        name:
          type: string
      title: keychain_credential_create
      type: object
    keychaincredential_used_by_0:
      title: id
      type: integer
    kmip_update_0:
      additionalProperties: false
      default: {}
      properties:
        certificate:
          nullable: true
          type: integer
        certificate_authority:
          nullable: true
          type: integer
        change_server:
          type: boolean
        enabled:
          type: boolean
        force_clear:
          type: boolean
        manage_sed_disks:
          type: boolean
        manage_zfs_keys:
          type: boolean
        port:
          type: integer
        server:
          type: string
        validate:
          type: boolean
      title: kmip_update
      type: object
    ldap_update_0:
      additionalProperties: false
      default: {}
      properties:
        anonbind:
          type: boolean
        auxiliary_parameters:
          type: string
        basedn:
          type: string
        binddn:
          type: string
        bindpw:
          type: string
        certificate:
          nullable: true
          type: integer
        disable_freenas_cache:
          type: boolean
        dns_timeout:
          type: integer
        enable:
          type: boolean
        has_samba_schema:
          type: boolean
        hostname:
          items: {}
          type: array
        kerberos_principal:
          type: string
        kerberos_realm:
          nullable: true
          type: integer
        schema:
          enum:
          - RFC2307
          - RFC2307BIS
          type: string
        ssl:
          enum:
          - 'OFF'
          - 'ON'
          - START_TLS
          type: string
        timeout:
          type: integer
        validate_certificates:
          type: boolean
      title: ldap_update
      type: object
    lldp_update_0:
      additionalProperties: false
      default: {}
      properties:
        country:
          type: string
        intdesc:
          type: boolean
        location:
          type: string
      title: lldp_update
      type: object
    mail_send:
      properties:
        mail_message:
          $ref: '#/components/schemas/mail_send_0'
        mail_update:
          $ref: '#/components/schemas/mail_send_1'
      type: object
    mail_send_0:
      additionalProperties: false
      default: {}
      properties:
        attachments:
          type: boolean
        cc:
          items:
            type: string
          type: array
        channel:
          nullable: true
          type: string
        extra_headers:
          additionalProperties: true
          properties: {}
          type: object
        html:
          nullable: true
          type: string
        interval:
          nullable: true
          type: integer
        queue:
          type: boolean
        subject:
          type: string
        text:
          type: string
        timeout:
          type: integer
        to:
          items:
            type: string
          type: array
      title: mail_message
      type: object
    mail_send_1:
      additionalProperties: false
      default: {}
      properties:
        fromemail:
          type: string
        fromname:
          type: string
        oauth:
          additionalProperties: false
          properties:
            client_id:
              type: string
            client_secret:
              type: string
            refresh_token:
              type: string
          type: object
        outgoingserver:
          type: string
        pass:
          type: string
        port:
          type: integer
        security:
          enum:
          - PLAIN
          - SSL
          - TLS
          type: string
        smtp:
          type: boolean
        user:
          type: string
      title: mail_update
      type: object
    mail_update_0:
      additionalProperties: false
      default: {}
      properties:
        fromemail:
          type: string
        fromname:
          type: string
        oauth:
          additionalProperties: false
          properties:
            client_id:
              type: string
            client_secret:
              type: string
            refresh_token:
              type: string
          type: object
        outgoingserver:
          type: string
        pass:
          type: string
        port:
          type: integer
        security:
          enum:
          - PLAIN
          - SSL
          - TLS
          type: string
        smtp:
          type: boolean
        user:
          type: string
      title: mail_update
      type: object
    network_configuration_update_0:
      additionalProperties: false
      default: {}
      properties:
        domain:
          type: string
        domains:
          items:
            type: string
          type: array
        hostname:
          type: string
        hostname_b:
          type: string
        hostname_virtual:
          type: string
        hosts:
          type: string
        httpproxy:
          type: string
        ipv4gateway:
          type: string
        ipv6gateway:
          type: string
        nameserver1:
          type: string
        nameserver2:
          type: string
        nameserver3:
          type: string
        netwait_enabled:
          type: boolean
        netwait_ip:
          items:
            type: string
          type: array
        service_announcement:
          additionalProperties: false
          properties:
            mdns:
              type: boolean
            netbios:
              type: boolean
            wsd:
              type: boolean
          type: object
      title: global_configuration_update
      type: object
    nfs_add_principal_0:
      additionalProperties: false
      default: {}
      properties:
        password:
          type: string
        username:
          type: string
      title: add_nfs_principal_creds
      type: object
    nfs_update_0:
      additionalProperties: false
      default: {}
      properties:
        allow_nonroot:
          type: boolean
        bindip:
          items:
            type: string
          type: array
        mountd_log:
          type: boolean
        mountd_port:
          nullable: true
          type: integer
        rpclockd_port:
          nullable: true
          type: integer
        rpcstatd_port:
          nullable: true
          type: integer
        servers:
          type: integer
        statd_lockd_log:
          type: boolean
        udp:
          type: boolean
        userd_manage_gids:
          type: boolean
        v4:
          type: boolean
        v4_domain:
          type: string
        v4_krb:
          type: boolean
        v4_v3owner:
          type: boolean
      title: nfs_update
      type: object
    nis_update_0:
      additionalProperties: false
      default: {}
      properties:
        domain:
          type: string
        enable:
          type: boolean
        manycast:
          type: boolean
        secure_mode:
          type: boolean
        servers:
          items: {}
          type: array
      title: nis_update
      type: object
    openvpn_client_update_0:
      additionalProperties: false
      default: {}
      properties:
        additional_parameters:
          type: string
        authentication_algorithm:
          nullable: true
          type: string
        cipher:
          nullable: true
          type: string
        client_certificate:
          nullable: true
          type: integer
        compression:
          enum:
          - LZO
          - LZ4
          nullable: true
          type: string
        device_type:
          enum:
          - TUN
          - TAP
          type: string
        nobind:
          type: boolean
        port:
          type: integer
        protocol:
          enum:
          - UDP
          - UDP4
          - UDP6
          - TCP
          - TCP4
          - TCP6
          type: string
        remote:
          type: string
        root_ca:
          nullable: true
          type: integer
        tls_crypt_auth:
          nullable: true
          type: string
        tls_crypt_auth_enabled:
          type: boolean
      title: openvpn_client_update
      type: object
    openvpn_server_client_configuration_generation:
      properties:
        client_certificate_id:
          $ref: '#/components/schemas/openvpn_server_client_configuration_generation_0'
        server_address:
          $ref: '#/components/schemas/openvpn_server_client_configuration_generation_1'
      type: object
    openvpn_server_client_configuration_generation_0:
      title: client_certificate_id
      type: integer
    openvpn_server_client_configuration_generation_1:
      nullable: true
      title: server_address
      type: string
    openvpn_server_update_0:
      additionalProperties: false
      default: {}
      properties:
        additional_parameters:
          type: string
        authentication_algorithm:
          nullable: true
          type: string
        cipher:
          nullable: true
          type: string
        compression:
          enum:
          - LZO
          - LZ4
          nullable: true
          type: string
        device_type:
          enum:
          - TUN
          - TAP
          type: string
        netmask:
          type: integer
        port:
          type: integer
        protocol:
          enum:
          - UDP
          - UDP4
          - UDP6
          - TCP
          - TCP4
          - TCP6
          type: string
        root_ca:
          nullable: true
          type: integer
        server:
          type: string
        server_certificate:
          nullable: true
          type: integer
        tls_crypt_auth:
          nullable: true
          type: string
        tls_crypt_auth_enabled:
          type: boolean
        topology:
          enum:
          - NET30
          - P2P
          - SUBNET
          nullable: true
          type: string
      title: openvpn_server_update
      type: object
    plugin_available_0:
      additionalProperties: false
      default: {}
      properties:
        branch:
          type: string
        cache:
          type: boolean
        plugin_repository:
          type: string
      title: available_plugin_options
      type: object
    plugin_branches_choices_0:
      default: null
      nullable: true
      title: repository
      type: string
    plugin_create_0:
      additionalProperties: false
      default: {}
      properties:
        branch:
          nullable: true
          type: string
        jail_name:
          type: string
        plugin_name:
          type: string
        plugin_repository:
          type: string
        props:
          items: {}
          type: array
      title: plugin_create
      type: object
    plugin_defaults_0:
      additionalProperties: false
      default: {}
      properties:
        branch:
          nullable: true
          type: string
        plugin:
          type: string
        plugin_repository:
          type: string
        refresh:
          type: boolean
      title: options
      type: object
    plugin_update_1:
      additionalProperties: true
      default: {}
      properties:
        plugin:
          type: boolean
      title: jail_update
      type: object
    plugin_update_plugin:
      properties:
        jail:
          $ref: '#/components/schemas/plugin_update_plugin_0'
        update_jail:
          $ref: '#/components/schemas/plugin_update_plugin_1'
      type: object
    plugin_update_plugin_0:
      title: jail
      type: string
    plugin_update_plugin_1:
      default: true
      title: update_jail
      type: boolean
    pool_attach:
      properties:
        oid:
          $ref: '#/components/schemas/pool_attach_0'
        pool_attach:
          $ref: '#/components/schemas/pool_attach_1'
      type: object
    pool_attach_0:
      title: oid
      type: integer
    pool_attach_1:
      additionalProperties: false
      default: {}
      properties:
        allow_duplicate_serials:
          type: boolean
        new_disk:
          type: string
        passphrase:
          type: string
        target_vdev:
          type: string
      title: pool_attach
      type: object
    pool_attachments:
      properties: {}
      type: object
    pool_create_0:
      additionalProperties: false
      default: {}
      properties:
        allow_duplicate_serials:
          type: boolean
        checksum:
          enum:
          - null
          - 'ON'
          - 'OFF'
          - FLETCHER2
          - FLETCHER4
          - SHA256
          - SHA512
          - SKEIN
          nullable: true
          type: string
        deduplication:
          enum:
          - null
          - 'ON'
          - VERIFY
          - 'OFF'
          nullable: true
          type: string
        encryption:
          type: boolean
        encryption_options:
          additionalProperties: false
          properties:
            algorithm:
              enum:
              - AES-128-CCM
              - AES-192-CCM
              - AES-256-CCM
              - AES-128-GCM
              - AES-192-GCM
              - AES-256-GCM
              type: string
            generate_key:
              type: boolean
            key:
              nullable: true
              type: string
            passphrase:
              nullable: true
              type: string
            pbkdf2iters:
              type: integer
          type: object
        name:
          type: string
        topology:
          additionalProperties: false
          properties:
            cache:
              items:
                type: object
              type: array
            data:
              items:
                type: object
              type: array
            dedup:
              items:
                type: object
              type: array
            log:
              items:
                type: object
              type: array
            spares:
              items:
                type: string
              type: array
            special:
              items:
                type: object
              type: array
          type: object
      title: pool_create
      type: object
    pool_dataset_attachments:
      properties: {}
      type: object
    pool_dataset_change_key:
      properties:
        change_key_options:
          $ref: '#/components/schemas/pool_dataset_change_key_1'
        id:
          $ref: '#/components/schemas/pool_dataset_change_key_0'
      type: object
    pool_dataset_change_key_0:
      title: id
      type: string
    pool_dataset_change_key_1:
      additionalProperties: false
      default: {}
      properties:
        generate_key:
          type: boolean
        key:
          nullable: true
          type: string
        key_file:
          type: boolean
        passphrase:
          nullable: true
          type: string
        pbkdf2iters:
          type: integer
      title: change_key_options
      type: object
    pool_dataset_create_0:
      additionalProperties: false
      default: {}
      properties:
        aclmode:
          enum:
          - PASSTHROUGH
          - RESTRICTED
          type: string
        acltype:
          enum:
          - NOACL
          - NFS4ACL
          - POSIXACL
          type: string
        atime:
          enum:
          - 'ON'
          - 'OFF'
          type: string
        casesensitivity:
          enum:
          - SENSITIVE
          - INSENSITIVE
          - MIXED
          type: string
        checksum:
          enum:
          - 'ON'
          - 'OFF'
          - FLETCHER2
          - FLETCHER4
          - SHA256
          - SHA512
          - SKEIN
          type: string
        comments:
          type: string
        compression:
          enum:
          - 'OFF'
          - LZ4
          - GZIP
          - GZIP-1
          - GZIP-9
          - ZSTD
          - ZSTD-FAST
          - ZLE
          - LZJB
          - ZSTD-1
          - ZSTD-2
          - ZSTD-3
          - ZSTD-4
          - ZSTD-5
          - ZSTD-6
          - ZSTD-7
          - ZSTD-8
          - ZSTD-9
          - ZSTD-10
          - ZSTD-11
          - ZSTD-12
          - ZSTD-13
          - ZSTD-14
          - ZSTD-15
          - ZSTD-16
          - ZSTD-17
          - ZSTD-18
          - ZSTD-19
          - ZSTD-FAST-1
          - ZSTD-FAST-2
          - ZSTD-FAST-3
          - ZSTD-FAST-4
          - ZSTD-FAST-5
          - ZSTD-FAST-6
          - ZSTD-FAST-7
          - ZSTD-FAST-8
          - ZSTD-FAST-9
          - ZSTD-FAST-10
          - ZSTD-FAST-20
          - ZSTD-FAST-30
          - ZSTD-FAST-40
          - ZSTD-FAST-50
          - ZSTD-FAST-60
          - ZSTD-FAST-70
          - ZSTD-FAST-80
          - ZSTD-FAST-90
          - ZSTD-FAST-100
          - ZSTD-FAST-500
          - ZSTD-FAST-1000
          type: string
        copies:
          type: integer
        deduplication:
          enum:
          - 'ON'
          - VERIFY
          - 'OFF'
          type: string
        encryption:
          type: boolean
        encryption_options:
          additionalProperties: false
          properties:
            algorithm:
              enum:
              - AES-128-CCM
              - AES-192-CCM
              - AES-256-CCM
              - AES-128-GCM
              - AES-192-GCM
              - AES-256-GCM
              type: string
            generate_key:
              type: boolean
            key:
              nullable: true
              type: string
            passphrase:
              nullable: true
              type: string
            pbkdf2iters:
              type: integer
          type: object
        exec:
          enum:
          - 'ON'
          - 'OFF'
          type: string
        force_size:
          type: boolean
        inherit_encryption:
          type: boolean
        managedby:
          type: string
        name:
          type: string
        quota:
          nullable: true
          type: integer
        quota_critical:
          type: integer
        quota_warning:
          type: integer
        readonly:
          enum:
          - 'ON'
          - 'OFF'
          type: string
        recordsize:
          type: string
        refquota:
          nullable: true
          type: integer
        refquota_critical:
          type: integer
        refquota_warning:
          type: integer
        refreservation:
          type: integer
        reservation:
          type: integer
        share_type:
          enum:
          - GENERIC
          - SMB
          type: string
        snapdir:
          enum:
          - VISIBLE
          - HIDDEN
          type: string
        sparse:
          type: boolean
        special_small_block_size:
          type: integer
        sync:
          enum:
          - STANDARD
          - ALWAYS
          - DISABLED
          type: string
        type:
          enum:
          - FILESYSTEM
          - VOLUME
          type: string
        volblocksize:
          enum:
          - '512'
          - 1K
          - 2K
          - 4K
          - 8K
          - 16K
          - 32K
          - 64K
          - 128K
          type: string
        volsize:
          type: integer
        xattr:
          enum:
          - 'ON'
          - SA
          type: string
      title: pool_dataset_create
      type: object
    pool_dataset_delete_1:
      additionalProperties: false
      default: {}
      properties:
        force:
          type: boolean
        recursive:
          type: boolean
      title: dataset_delete
      type: object
    pool_dataset_encryption_summary:
      properties:
        encryption_root_summary_options:
          $ref: '#/components/schemas/pool_dataset_encryption_summary_1'
        id:
          $ref: '#/components/schemas/pool_dataset_encryption_summary_0'
      type: object
    pool_dataset_encryption_summary_0:
      title: id
      type: string
    pool_dataset_encryption_summary_1:
      additionalProperties: false
      default: {}
      properties:
        datasets:
          items:
            type: object
          type: array
        key_file:
          type: boolean
      title: encryption_root_summary_options
      type: object
    pool_dataset_export_key:
      properties:
        download:
          $ref: '#/components/schemas/pool_dataset_export_key_1'
        id:
          $ref: '#/components/schemas/pool_dataset_export_key_0'
      type: object
    pool_dataset_export_key_0:
      title: id
      type: string
    pool_dataset_export_key_1:
      default: false
      title: download
      type: boolean
    pool_dataset_get_quota:
      properties:
        query-filters:
          $ref: '#/components/schemas/pool_dataset_get_quota_2'
        query-options:
          $ref: '#/components/schemas/pool_dataset_get_quota_3'
        quota_type:
          $ref: '#/components/schemas/pool_dataset_get_quota_1'
      type: object
    pool_dataset_get_quota_1:
      enum:
      - USER
      - GROUP
      - DATASET
      title: quota_type
      type: string
    pool_dataset_get_quota_2:
      default: []
      items: {}
      title: query-filters
      type: array
    pool_dataset_get_quota_3:
      additionalProperties: false
      default: {}
      properties:
        count:
          type: boolean
        extend:
          nullable: true
          type: string
        extend_context:
          nullable: true
          type: string
        extra:
          additionalProperties: true
          properties: {}
          type: object
        force_sql_filters:
          type: boolean
        get:
          type: boolean
        limit:
          type: integer
        offset:
          type: integer
        order_by:
          items: {}
          type: array
        prefix:
          nullable: true
          type: string
        relationships:
          type: boolean
        select:
          items: {}
          type: array
      title: query-options
      type: object
    pool_dataset_inherit_parent_encryption_properties_0:
      title: id
      type: string
    pool_dataset_lock:
      properties:
        id:
          $ref: '#/components/schemas/pool_dataset_lock_0'
        lock_options:
          $ref: '#/components/schemas/pool_dataset_lock_1'
      type: object
    pool_dataset_lock_0:
      title: id
      type: string
    pool_dataset_lock_1:
      additionalProperties: false
      default: {}
      properties:
        force_umount:
          type: boolean
      title: lock_options
      type: object
    pool_dataset_permission_1:
      additionalProperties: false
      default: {}
      properties:
        acl:
          items:
            type: object
          type: array
        group:
          type: string
        mode:
          nullable: true
          type: string
        options:
          additionalProperties: false
          properties:
            recursive:
              type: boolean
            stripacl:
              type: boolean
            traverse:
              type: boolean
          type: object
        user:
          type: string
      title: pool_dataset_permission
      type: object
    pool_dataset_processes:
      properties: {}
      type: object
    pool_dataset_promote:
      properties: {}
      type: object
    pool_dataset_recommended_zvol_blocksize_0:
      title: pool
      type: string
    pool_dataset_set_quota_1:
      default:
      - id: '0'
        quota_type: USER
        quota_value: 0
      items:
        type: object
      title: quotas
      type: array
    pool_dataset_unlock:
      properties:
        id:
          $ref: '#/components/schemas/pool_dataset_unlock_0'
        unlock_options:
          $ref: '#/components/schemas/pool_dataset_unlock_1'
      type: object
    pool_dataset_unlock_0:
      title: id
      type: string
    pool_dataset_unlock_1:
      additionalProperties: false
      default: {}
      properties:
        datasets:
          items:
            type: object
          type: array
        key_file:
          type: boolean
        recursive:
          type: boolean
        toggle_attachments:
          type: boolean
      title: unlock_options
      type: object
    pool_dataset_update_1:
      additionalProperties: false
      default: {}
      properties:
        aclmode:
          enum:
          - PASSTHROUGH
          - RESTRICTED
          type: string
        acltype:
          enum:
          - NOACL
          - NFS4ACL
          - POSIXACL
          type: string
        atime:
          enum:
          - 'ON'
          - 'OFF'
          - INHERIT
          type: string
        checksum:
          enum:
          - 'ON'
          - 'OFF'
          - FLETCHER2
          - FLETCHER4
          - SHA256
          - SHA512
          - SKEIN
          - INHERIT
          type: string
        comments:
          type: string
        compression:
          enum:
          - 'OFF'
          - LZ4
          - GZIP
          - GZIP-1
          - GZIP-9
          - ZSTD
          - ZSTD-FAST
          - ZLE
          - LZJB
          - ZSTD-1
          - ZSTD-2
          - ZSTD-3
          - ZSTD-4
          - ZSTD-5
          - ZSTD-6
          - ZSTD-7
          - ZSTD-8
          - ZSTD-9
          - ZSTD-10
          - ZSTD-11
          - ZSTD-12
          - ZSTD-13
          - ZSTD-14
          - ZSTD-15
          - ZSTD-16
          - ZSTD-17
          - ZSTD-18
          - ZSTD-19
          - ZSTD-FAST-1
          - ZSTD-FAST-2
          - ZSTD-FAST-3
          - ZSTD-FAST-4
          - ZSTD-FAST-5
          - ZSTD-FAST-6
          - ZSTD-FAST-7
          - ZSTD-FAST-8
          - ZSTD-FAST-9
          - ZSTD-FAST-10
          - ZSTD-FAST-20
          - ZSTD-FAST-30
          - ZSTD-FAST-40
          - ZSTD-FAST-50
          - ZSTD-FAST-60
          - ZSTD-FAST-70
          - ZSTD-FAST-80
          - ZSTD-FAST-90
          - ZSTD-FAST-100
          - ZSTD-FAST-500
          - ZSTD-FAST-1000
          - INHERIT
          type: string
        copies:
          type: integer
        deduplication:
          enum:
          - 'ON'
          - VERIFY
          - 'OFF'
          - INHERIT
          type: string
        exec:
          enum:
          - 'ON'
          - 'OFF'
          - INHERIT
          type: string
        force_size:
          type: boolean
        managedby:
          type: string
        quota:
          nullable: true
          type: integer
        quota_critical:
          anyOf:
          - type: integer
          - enum:
            - INHERIT
            type: string
          nullable: false
        quota_warning:
          anyOf:
          - type: integer
          - enum:
            - INHERIT
            type: string
          nullable: false
        readonly:
          enum:
          - 'ON'
          - 'OFF'
          - INHERIT
          type: string
        recordsize:
          type: string
        refquota:
          nullable: true
          type: integer
        refquota_critical:
          anyOf:
          - type: integer
          - enum:
            - INHERIT
            type: string
          nullable: false
        refquota_warning:
          anyOf:
          - type: integer
          - enum:
            - INHERIT
            type: string
          nullable: false
        refreservation:
          type: integer
        reservation:
          type: integer
        snapdir:
          enum:
          - VISIBLE
          - HIDDEN
          - INHERIT
          type: string
        special_small_block_size:
          anyOf:
          - type: integer
          - enum:
            - INHERIT
            type: string
          nullable: false
        sync:
          enum:
          - STANDARD
          - ALWAYS
          - DISABLED
          - INHERIT
          type: string
        volsize:
          type: integer
        xattr:
          enum:
          - 'ON'
          - SA
          type: string
      title: pool_dataset_create
      type: object
    pool_dataset_userprop_create_0:
      additionalProperties: false
      default: {}
      properties:
        id:
          type: string
        property:
          additionalProperties: false
          properties:
            name:
              type: string
            value:
              type: string
          type: object
      title: dataset_user_prop_create
      type: object
    pool_dataset_userprop_delete_1:
      additionalProperties: false
      default: {}
      properties:
        name:
          type: string
      title: dataset_user_prop_delete
      type: object
    pool_dataset_userprop_update_1:
      additionalProperties: false
      default: {}
      properties:
        name:
          type: string
        value:
          type: string
      title: dataset_user_prop_update
      type: object
    pool_detach_1:
      additionalProperties: false
      default: {}
      properties:
        label:
          type: string
      title: options
      type: object
    pool_download_encryption_key_1:
      default: geli.key
      title: filename
      type: string
    pool_expand_1:
      additionalProperties: false
      default: {}
      properties:
        geli:
          additionalProperties: false
          properties:
            passphrase:
              type: string
          type: object
      title: options
      type: object
    pool_export_1:
      additionalProperties: false
      default: {}
      properties:
        cascade:
          type: boolean
        destroy:
          type: boolean
        restart_services:
          type: boolean
      title: options
      type: object
    pool_filesystem_choices_0:
      default:
      - FILESYSTEM
      - VOLUME
      items:
        type: string
      title: types
      type: array
    pool_get_disks:
      properties: {}
      type: object
    pool_import_disk:
      properties:
        device:
          $ref: '#/components/schemas/pool_import_disk_0'
        dst_path:
          $ref: '#/components/schemas/pool_import_disk_3'
        fs_options:
          $ref: '#/components/schemas/pool_import_disk_2'
        fs_type:
          $ref: '#/components/schemas/pool_import_disk_1'
      type: object
    pool_import_disk_0:
      title: device
      type: string
    pool_import_disk_1:
      title: fs_type
      type: string
    pool_import_disk_2:
      additionalProperties: true
      default: {}
      properties: {}
      title: fs_options
      type: object
    pool_import_disk_3:
      title: dst_path
      type: string
    pool_import_disk_autodetect_fs_type_0:
      title: device
      type: string
    pool_import_pool_0:
      additionalProperties: false
      default: {}
      properties:
        enable_attachments:
          type: boolean
        guid:
          type: string
        name:
          type: string
        passphrase:
          type: string
      title: pool_import
      type: object
    pool_is_upgraded:
      properties: {}
      type: object
    pool_lock_1:
      title: passphrase
      type: string
    pool_offline_1:
      additionalProperties: false
      default: {}
      properties:
        label:
          type: string
      title: options
      type: object
    pool_online_1:
      additionalProperties: false
      default: {}
      properties:
        label:
          type: string
      title: options
      type: object
    pool_passphrase_1:
      additionalProperties: false
      default: {}
      properties:
        admin_password:
          type: string
        passphrase:
          nullable: true
          type: string
      title: options
      type: object
    pool_processes:
      properties: {}
      type: object
    pool_recoverykey_rm_1:
      additionalProperties: false
      default: {}
      properties:
        admin_password:
          type: string
      title: options
      type: object
    pool_rekey_1:
      additionalProperties: false
      default: {}
      properties:
        admin_password:
          type: string
      title: options
      type: object
    pool_remove_1:
      additionalProperties: false
      default: {}
      properties:
        label:
          type: string
      title: options
      type: object
    pool_replace_1:
      additionalProperties: false
      default: {}
      properties:
        disk:
          type: string
        force:
          type: boolean
        label:
          type: string
        passphrase:
          type: string
      title: options
      type: object
    pool_resilver_update_0:
      additionalProperties: false
      default: {}
      properties:
        begin:
          type: string
        enabled:
          type: boolean
        end:
          type: string
        weekday:
          items:
            type: integer
          type: array
      title: pool_resilver
      type: object
    pool_scrub_1:
      enum:
      - START
      - STOP
      - PAUSE
      title: action
      type: string
    pool_scrub_create_0:
      additionalProperties: false
      default: {}
      properties:
        description:
          type: string
        enabled:
          type: boolean
        pool:
          type: integer
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        threshold:
          type: integer
      title: pool_scrub_create
      type: object
    pool_scrub_run:
      properties:
        name:
          $ref: '#/components/schemas/pool_scrub_run_0'
        threshold:
          $ref: '#/components/schemas/pool_scrub_run_1'
      type: object
    pool_scrub_run_0:
      title: name
      type: string
    pool_scrub_run_1:
      default: 35
      title: threshold
      type: integer
    pool_scrub_scrub:
      properties:
        action:
          $ref: '#/components/schemas/pool_scrub_scrub_1'
        name:
          $ref: '#/components/schemas/pool_scrub_scrub_0'
      type: object
    pool_scrub_scrub_0:
      title: name
      type: string
    pool_scrub_scrub_1:
      default: START
      enum:
      - START
      - STOP
      - PAUSE
      title: action
      type: string
    pool_scrub_update_1:
      additionalProperties: false
      default: {}
      properties:
        description:
          type: string
        enabled:
          type: boolean
        pool:
          type: integer
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        threshold:
          type: integer
      title: pool_scrub_create
      type: object
    pool_snapshottask_create_0:
      additionalProperties: false
      default: {}
      properties:
        allow_empty:
          type: boolean
        dataset:
          type: string
        enabled:
          type: boolean
        exclude:
          items:
            type: string
          type: array
        lifetime_unit:
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          type: string
        lifetime_value:
          type: integer
        naming_schema:
          type: string
        recursive:
          type: boolean
        schedule:
          additionalProperties: false
          properties:
            begin:
              type: string
            dom:
              type: string
            dow:
              type: string
            end:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
      title: periodic_snapshot_create
      type: object
    pool_snapshottask_run:
      properties: {}
      type: object
    pool_snapshottask_update_1:
      additionalProperties: false
      default: {}
      properties:
        allow_empty:
          type: boolean
        dataset:
          type: string
        enabled:
          type: boolean
        exclude:
          items:
            type: string
          type: array
        lifetime_unit:
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          type: string
        lifetime_value:
          type: integer
        naming_schema:
          type: string
        recursive:
          type: boolean
        schedule:
          additionalProperties: false
          properties:
            begin:
              type: string
            dom:
              type: string
            dow:
              type: string
            end:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
      title: periodic_snapshot_create
      type: object
    pool_unlock_1:
      additionalProperties: false
      default: {}
      properties:
        passphrase:
          type: string
        recoverykey:
          type: boolean
        services_restart:
          items: {}
          type: array
      title: pool_unlock_options
      type: object
    pool_unlock_services_restart_choices_0:
      title: id
      type: integer
    pool_update_1:
      additionalProperties: false
      default: {}
      properties:
        allow_duplicate_serials:
          type: boolean
        autotrim:
          enum:
          - 'ON'
          - 'OFF'
          type: string
        encryption_options:
          additionalProperties: false
          properties:
            algorithm:
              enum:
              - AES-128-CCM
              - AES-192-CCM
              - AES-256-CCM
              - AES-128-GCM
              - AES-192-GCM
              - AES-256-GCM
              type: string
            generate_key:
              type: boolean
            key:
              nullable: true
              type: string
            passphrase:
              nullable: true
              type: string
            pbkdf2iters:
              type: integer
          type: object
        topology:
          additionalProperties: false
          properties:
            cache:
              items:
                type: object
              type: array
            data:
              items:
                type: object
              type: array
            dedup:
              items:
                type: object
              type: array
            log:
              items:
                type: object
              type: array
            spares:
              items:
                type: string
              type: array
            special:
              items:
                type: object
              type: array
          type: object
      title: pool_create
      type: object
    pool_upgrade:
      properties: {}
      type: object
    replication_config_update_0:
      additionalProperties: false
      default: {}
      properties:
        max_parallel_replication_tasks:
          nullable: true
          type: integer
      title: replication_config_update
      type: object
    replication_count_eligible_manual_snapshots:
      properties:
        datasets:
          $ref: '#/components/schemas/replication_count_eligible_manual_snapshots_0'
        naming_schema:
          $ref: '#/components/schemas/replication_count_eligible_manual_snapshots_1'
        ssh_credentials:
          $ref: '#/components/schemas/replication_count_eligible_manual_snapshots_3'
        transport:
          $ref: '#/components/schemas/replication_count_eligible_manual_snapshots_2'
      type: object
    replication_count_eligible_manual_snapshots_0:
      items:
        type: string
      title: datasets
      type: array
    replication_count_eligible_manual_snapshots_1:
      items:
        type: string
      title: naming_schema
      type: array
    replication_count_eligible_manual_snapshots_2:
      enum:
      - SSH
      - SSH+NETCAT
      - LOCAL
      title: transport
      type: string
    replication_count_eligible_manual_snapshots_3:
      default: null
      nullable: true
      title: ssh_credentials
      type: integer
    replication_create_0:
      additionalProperties: false
      default: {}
      properties:
        allow_from_scratch:
          type: boolean
        also_include_naming_schema:
          items:
            type: string
          type: array
        auto:
          type: boolean
        compressed:
          type: boolean
        compression:
          enum:
          - LZ4
          - PIGZ
          - PLZIP
          nullable: true
          type: string
        direction:
          enum:
          - PUSH
          - PULL
          type: string
        embed:
          type: boolean
        enabled:
          type: boolean
        encryption:
          type: boolean
        encryption_key:
          nullable: true
          type: string
        encryption_key_format:
          enum:
          - HEX
          - PASSPHRASE
          nullable: true
          type: string
        encryption_key_location:
          nullable: true
          type: string
        exclude:
          items:
            type: string
          type: array
        hold_pending_snapshots:
          type: boolean
        large_block:
          type: boolean
        lifetime_unit:
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          nullable: true
          type: string
        lifetime_value:
          nullable: true
          type: integer
        logging_level:
          enum:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
          nullable: true
          type: string
        name:
          type: string
        naming_schema:
          items:
            type: string
          type: array
        netcat_active_side:
          enum:
          - LOCAL
          - REMOTE
          nullable: true
          type: string
        netcat_active_side_listen_address:
          nullable: true
          type: string
        netcat_active_side_port_max:
          nullable: true
          type: integer
        netcat_active_side_port_min:
          nullable: true
          type: integer
        netcat_passive_side_connect_address:
          nullable: true
          type: string
        only_matching_schedule:
          type: boolean
        periodic_snapshot_tasks:
          items:
            type: integer
          type: array
        properties:
          type: boolean
        properties_exclude:
          items:
            type: string
          type: array
        readonly:
          enum:
          - SET
          - REQUIRE
          - IGNORE
          type: string
        recursive:
          type: boolean
        replicate:
          type: boolean
        restrict_schedule:
          additionalProperties: false
          properties:
            begin:
              type: string
            dom:
              type: string
            dow:
              type: string
            end:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        retention_policy:
          enum:
          - SOURCE
          - CUSTOM
          - NONE
          type: string
        retries:
          type: integer
        schedule:
          additionalProperties: false
          properties:
            begin:
              type: string
            dom:
              type: string
            dow:
              type: string
            end:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        source_datasets:
          items:
            type: string
          type: array
        speed_limit:
          nullable: true
          type: integer
        ssh_credentials:
          nullable: true
          type: integer
        target_dataset:
          type: string
        transport:
          enum:
          - SSH
          - SSH+NETCAT
          - LOCAL
          type: string
      title: replication_create
      type: object
    replication_create_dataset:
      properties:
        dataset:
          $ref: '#/components/schemas/replication_create_dataset_0'
        ssh_credentials:
          $ref: '#/components/schemas/replication_create_dataset_2'
        transport:
          $ref: '#/components/schemas/replication_create_dataset_1'
      type: object
    replication_create_dataset_0:
      title: dataset
      type: string
    replication_create_dataset_1:
      enum:
      - SSH
      - SSH+NETCAT
      - LOCAL
      title: transport
      type: string
    replication_create_dataset_2:
      default: null
      nullable: true
      title: ssh_credentials
      type: integer
    replication_list_datasets:
      properties:
        ssh_credentials:
          $ref: '#/components/schemas/replication_list_datasets_1'
        transport:
          $ref: '#/components/schemas/replication_list_datasets_0'
      type: object
    replication_list_datasets_0:
      enum:
      - SSH
      - SSH+NETCAT
      - LOCAL
      title: transport
      type: string
    replication_list_datasets_1:
      default: null
      nullable: true
      title: ssh_credentials
      type: integer
    replication_restore_1:
      additionalProperties: false
      default: {}
      properties:
        name:
          type: string
        target_dataset:
          type: string
      title: replication_restore
      type: object
    replication_run:
      properties: {}
      type: object
    replication_target_unmatched_snapshots:
      properties:
        direction:
          $ref: '#/components/schemas/replication_target_unmatched_snapshots_0'
        source_datasets:
          $ref: '#/components/schemas/replication_target_unmatched_snapshots_1'
        ssh_credentials:
          $ref: '#/components/schemas/replication_target_unmatched_snapshots_4'
        target_dataset:
          $ref: '#/components/schemas/replication_target_unmatched_snapshots_2'
        transport:
          $ref: '#/components/schemas/replication_target_unmatched_snapshots_3'
      type: object
    replication_target_unmatched_snapshots_0:
      enum:
      - PUSH
      - PULL
      title: direction
      type: string
    replication_target_unmatched_snapshots_1:
      items:
        type: string
      title: source_datasets
      type: array
    replication_target_unmatched_snapshots_2:
      title: target_dataset
      type: string
    replication_target_unmatched_snapshots_3:
      enum:
      - SSH
      - SSH+NETCAT
      - LOCAL
      - LEGACY
      title: transport
      type: string
    replication_target_unmatched_snapshots_4:
      default: null
      nullable: true
      title: ssh_credentials
      type: integer
    replication_update_1:
      additionalProperties: false
      default: {}
      properties:
        allow_from_scratch:
          type: boolean
        also_include_naming_schema:
          items:
            type: string
          type: array
        auto:
          type: boolean
        compressed:
          type: boolean
        compression:
          enum:
          - LZ4
          - PIGZ
          - PLZIP
          nullable: true
          type: string
        direction:
          enum:
          - PUSH
          - PULL
          type: string
        embed:
          type: boolean
        enabled:
          type: boolean
        encryption:
          type: boolean
        encryption_key:
          nullable: true
          type: string
        encryption_key_format:
          enum:
          - HEX
          - PASSPHRASE
          nullable: true
          type: string
        encryption_key_location:
          nullable: true
          type: string
        exclude:
          items:
            type: string
          type: array
        hold_pending_snapshots:
          type: boolean
        large_block:
          type: boolean
        lifetime_unit:
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          nullable: true
          type: string
        lifetime_value:
          nullable: true
          type: integer
        logging_level:
          enum:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
          nullable: true
          type: string
        name:
          type: string
        naming_schema:
          items:
            type: string
          type: array
        netcat_active_side:
          enum:
          - LOCAL
          - REMOTE
          nullable: true
          type: string
        netcat_active_side_listen_address:
          nullable: true
          type: string
        netcat_active_side_port_max:
          nullable: true
          type: integer
        netcat_active_side_port_min:
          nullable: true
          type: integer
        netcat_passive_side_connect_address:
          nullable: true
          type: string
        only_matching_schedule:
          type: boolean
        periodic_snapshot_tasks:
          items:
            type: integer
          type: array
        properties:
          type: boolean
        properties_exclude:
          items:
            type: string
          type: array
        readonly:
          enum:
          - SET
          - REQUIRE
          - IGNORE
          type: string
        recursive:
          type: boolean
        replicate:
          type: boolean
        restrict_schedule:
          additionalProperties: false
          properties:
            begin:
              type: string
            dom:
              type: string
            dow:
              type: string
            end:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        retention_policy:
          enum:
          - SOURCE
          - CUSTOM
          - NONE
          type: string
        retries:
          type: integer
        schedule:
          additionalProperties: false
          properties:
            begin:
              type: string
            dom:
              type: string
            dow:
              type: string
            end:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        source_datasets:
          items:
            type: string
          type: array
        speed_limit:
          nullable: true
          type: integer
        ssh_credentials:
          nullable: true
          type: integer
        target_dataset:
          type: string
        transport:
          enum:
          - SSH
          - SSH+NETCAT
          - LOCAL
          type: string
      title: replication_create
      type: object
    reporting_get_data:
      properties:
        graphs:
          $ref: '#/components/schemas/reporting_get_data_0'
        reporting_query:
          $ref: '#/components/schemas/reporting_get_data_1'
      type: object
    reporting_get_data_0:
      items:
        type: object
      title: graphs
      type: array
    reporting_get_data_1:
      additionalProperties: false
      default: {}
      properties:
        aggregate:
          type: boolean
        end:
          type: string
        page:
          type: integer
        start:
          type: string
        unit:
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          type: string
      title: reporting_query
      type: object
    reporting_update_0:
      additionalProperties: false
      default: {}
      properties:
        confirm_rrd_destroy:
          type: boolean
        cpu_in_percentage:
          type: boolean
        graph_age:
          type: integer
        graph_points:
          type: integer
        graphite:
          type: string
        graphite_separateinstances:
          type: boolean
      title: reporting_update
      type: object
    route_ipv4gw_reachable_0:
      title: ipv4_gateway
      type: string
    rsyncd_update_0:
      additionalProperties: false
      default: {}
      properties:
        auxiliary:
          type: string
        port:
          type: integer
      title: rsyncd_update
      type: object
    rsyncmod_create_0:
      additionalProperties: false
      default: {}
      properties:
        auxiliary:
          type: string
        comment:
          type: string
        enabled:
          type: boolean
        group:
          type: string
        hostsallow:
          items:
            type: string
          type: array
        hostsdeny:
          items:
            type: string
          type: array
        maxconn:
          type: integer
        mode:
          enum:
          - RO
          - RW
          - WO
          type: string
        name:
          type: string
        path:
          type: string
        user:
          type: string
      title: rsyncmod_create
      type: object
    rsyncmod_update_1:
      additionalProperties: false
      default: {}
      properties:
        auxiliary:
          type: string
        comment:
          type: string
        enabled:
          type: boolean
        group:
          type: string
        hostsallow:
          items:
            type: string
          type: array
        hostsdeny:
          items:
            type: string
          type: array
        maxconn:
          type: integer
        mode:
          enum:
          - RO
          - RW
          - WO
          type: string
        name:
          type: string
        path:
          type: string
        user:
          type: string
      title: rsyncmod_create
      type: object
    rsynctask_create_0:
      additionalProperties: false
      default: {}
      properties:
        archive:
          type: boolean
        compress:
          type: boolean
        delayupdates:
          type: boolean
        delete:
          type: boolean
        desc:
          type: string
        direction:
          enum:
          - PULL
          - PUSH
          type: string
        enabled:
          type: boolean
        extra:
          items:
            type: string
          type: array
        mode:
          enum:
          - MODULE
          - SSH
          type: string
        path:
          type: string
        preserveattr:
          type: boolean
        preserveperm:
          type: boolean
        quiet:
          type: boolean
        recursive:
          type: boolean
        remotehost:
          type: string
        remotemodule:
          type: string
        remotepath:
          type: string
        remoteport:
          type: integer
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        times:
          type: boolean
        user:
          type: string
        validate_rpath:
          type: boolean
      title: rsync_task_create
      type: object
    rsynctask_run:
      properties: {}
      type: object
    rsynctask_update_1:
      additionalProperties: false
      default: {}
      properties:
        archive:
          type: boolean
        compress:
          type: boolean
        delayupdates:
          type: boolean
        delete:
          type: boolean
        desc:
          type: string
        direction:
          enum:
          - PULL
          - PUSH
          type: string
        enabled:
          type: boolean
        extra:
          items:
            type: string
          type: array
        mode:
          enum:
          - MODULE
          - SSH
          type: string
        path:
          type: string
        preserveattr:
          type: boolean
        preserveperm:
          type: boolean
        quiet:
          type: boolean
        recursive:
          type: boolean
        remotehost:
          type: string
        remotemodule:
          type: string
        remotepath:
          type: string
        remoteport:
          type: integer
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            minute:
              type: string
            month:
              type: string
          type: object
        times:
          type: boolean
        user:
          type: string
        validate_rpath:
          type: boolean
      title: rsync_task_create
      type: object
    s3_update_0:
      additionalProperties: false
      default: {}
      properties:
        access_key:
          type: string
        bindip:
          type: string
        bindport:
          type: integer
        browser:
          type: boolean
        certificate:
          nullable: true
          type: integer
        console_bindport:
          type: integer
        secret_key:
          type: string
        storage_path:
          type: string
        tls_server_uri:
          nullable: true
          type: string
      title: s3_update
      type: object
    service_reload:
      properties:
        service:
          $ref: '#/components/schemas/service_reload_0'
        service-control:
          $ref: '#/components/schemas/service_reload_1'
      type: object
    service_reload_0:
      title: service
      type: string
    service_reload_1:
      additionalProperties: false
      default: {}
      properties:
        ha_propagate:
          type: boolean
      title: service-control
      type: object
    service_restart:
      properties:
        service:
          $ref: '#/components/schemas/service_restart_0'
        service-control:
          $ref: '#/components/schemas/service_restart_1'
      type: object
    service_restart_0:
      title: service
      type: string
    service_restart_1:
      additionalProperties: false
      default: {}
      properties:
        ha_propagate:
          type: boolean
      title: service-control
      type: object
    service_start:
      properties:
        service:
          $ref: '#/components/schemas/service_start_0'
        service-control:
          $ref: '#/components/schemas/service_start_1'
      type: object
    service_start_0:
      title: service
      type: string
    service_start_1:
      additionalProperties: false
      default: {}
      properties:
        ha_propagate:
          type: boolean
      title: service-control
      type: object
    service_stop:
      properties:
        service:
          $ref: '#/components/schemas/service_stop_0'
        service-control:
          $ref: '#/components/schemas/service_stop_1'
      type: object
    service_stop_0:
      title: service
      type: string
    service_stop_1:
      additionalProperties: false
      default: {}
      properties:
        ha_propagate:
          type: boolean
      title: service-control
      type: object
    service_terminate_process:
      properties:
        pid:
          $ref: '#/components/schemas/service_terminate_process_0'
        timeout:
          $ref: '#/components/schemas/service_terminate_process_1'
      type: object
    service_terminate_process_0:
      title: pid
      type: integer
    service_terminate_process_1:
      default: 10
      title: timeout
      type: integer
    service_update_1:
      additionalProperties: false
      default: {}
      properties:
        enable:
          type: boolean
      title: service-update
      type: object
    sharing_afp_create_0:
      additionalProperties: false
      default: {}
      properties:
        allow:
          items: {}
          type: array
        auxparams:
          type: string
        comment:
          type: string
        deny:
          items: {}
          type: array
        dperm:
          type: string
        enabled:
          type: boolean
        fperm:
          type: string
        home:
          type: boolean
        hostsallow:
          items: {}
          type: array
        hostsdeny:
          items: {}
          type: array
        name:
          type: string
        nodev:
          type: boolean
        nostat:
          type: boolean
        path:
          type: string
        ro:
          items: {}
          type: array
        rw:
          items: {}
          type: array
        timemachine:
          type: boolean
        timemachine_quota:
          type: integer
        umask:
          type: string
        upriv:
          type: boolean
        vuid:
          nullable: true
          type: string
      title: sharingafp_create
      type: object
    sharing_afp_update_1:
      additionalProperties: false
      default: {}
      properties:
        allow:
          items: {}
          type: array
        auxparams:
          type: string
        comment:
          type: string
        deny:
          items: {}
          type: array
        dperm:
          type: string
        enabled:
          type: boolean
        fperm:
          type: string
        home:
          type: boolean
        hostsallow:
          items: {}
          type: array
        hostsdeny:
          items: {}
          type: array
        name:
          type: string
        nodev:
          type: boolean
        nostat:
          type: boolean
        path:
          type: string
        ro:
          items: {}
          type: array
        rw:
          items: {}
          type: array
        timemachine:
          type: boolean
        timemachine_quota:
          type: integer
        umask:
          type: string
        upriv:
          type: boolean
        vuid:
          nullable: true
          type: string
      title: sharingafp_create
      type: object
    sharing_nfs_create_0:
      additionalProperties: false
      default: {}
      properties:
        alldirs:
          type: boolean
        comment:
          type: string
        enabled:
          type: boolean
        hosts:
          items:
            type: string
          type: array
        mapall_group:
          nullable: true
          type: string
        mapall_user:
          nullable: true
          type: string
        maproot_group:
          nullable: true
          type: string
        maproot_user:
          nullable: true
          type: string
        networks:
          items:
            type: string
          type: array
        paths:
          items:
            type: string
          type: array
        quiet:
          type: boolean
        ro:
          type: boolean
        security:
          items:
            type: string
          type: array
      title: sharingnfs_create
      type: object
    sharing_nfs_update_1:
      additionalProperties: false
      default: {}
      properties:
        alldirs:
          type: boolean
        comment:
          type: string
        enabled:
          type: boolean
        hosts:
          items:
            type: string
          type: array
        mapall_group:
          nullable: true
          type: string
        mapall_user:
          nullable: true
          type: string
        maproot_group:
          nullable: true
          type: string
        maproot_user:
          nullable: true
          type: string
        networks:
          items:
            type: string
          type: array
        paths:
          items:
            type: string
          type: array
        quiet:
          type: boolean
        ro:
          type: boolean
        security:
          items:
            type: string
          type: array
      title: sharingnfs_create
      type: object
    sharing_smb_create_0:
      additionalProperties: false
      default: {}
      properties:
        aapl_name_mangling:
          type: boolean
        abe:
          type: boolean
        acl:
          type: boolean
        auxsmbconf:
          type: string
        browsable:
          type: boolean
        comment:
          type: string
        durablehandle:
          type: boolean
        enabled:
          type: boolean
        fsrvp:
          type: boolean
        guestok:
          type: boolean
        home:
          type: boolean
        hostsallow:
          items: {}
          type: array
        hostsdeny:
          items: {}
          type: array
        name:
          type: string
        path:
          type: string
        path_suffix:
          type: string
        purpose:
          enum:
          - NO_PRESET
          - DEFAULT_SHARE
          - ENHANCED_TIMEMACHINE
          - MULTI_PROTOCOL_AFP
          - MULTI_PROTOCOL_NFS
          - PRIVATE_DATASETS
          - WORM_DROPBOX
          type: string
        recyclebin:
          type: boolean
        ro:
          type: boolean
        shadowcopy:
          type: boolean
        streams:
          type: boolean
        timemachine:
          type: boolean
      title: sharingsmb_create
      type: object
    sharing_smb_update_1:
      additionalProperties: false
      default: {}
      properties:
        aapl_name_mangling:
          type: boolean
        abe:
          type: boolean
        acl:
          type: boolean
        auxsmbconf:
          type: string
        browsable:
          type: boolean
        comment:
          type: string
        durablehandle:
          type: boolean
        enabled:
          type: boolean
        fsrvp:
          type: boolean
        guestok:
          type: boolean
        home:
          type: boolean
        hostsallow:
          items: {}
          type: array
        hostsdeny:
          items: {}
          type: array
        name:
          type: string
        path:
          type: string
        path_suffix:
          type: string
        purpose:
          enum:
          - NO_PRESET
          - DEFAULT_SHARE
          - ENHANCED_TIMEMACHINE
          - MULTI_PROTOCOL_AFP
          - MULTI_PROTOCOL_NFS
          - PRIVATE_DATASETS
          - WORM_DROPBOX
          type: string
        recyclebin:
          type: boolean
        ro:
          type: boolean
        shadowcopy:
          type: boolean
        streams:
          type: boolean
        timemachine:
          type: boolean
      title: sharingsmb_create
      type: object
    sharing_webdav_create_0:
      additionalProperties: false
      default: {}
      properties:
        comment:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        path:
          type: string
        perm:
          type: boolean
        ro:
          type: boolean
      title: webdav_share_create
      type: object
    sharing_webdav_update_1:
      additionalProperties: false
      default: {}
      properties:
        comment:
          type: string
        enabled:
          type: boolean
        name:
          type: string
        path:
          type: string
        perm:
          type: boolean
        ro:
          type: boolean
      title: webdav_share_create
      type: object
    smart_test_create_0:
      additionalProperties: false
      default: {}
      properties:
        all_disks:
          type: boolean
        desc:
          type: string
        disks:
          items:
            type: string
          type: array
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            month:
              type: string
          type: object
        type:
          enum:
          - LONG
          - SHORT
          - CONVEYANCE
          - OFFLINE
          type: string
      title: smart_task_create
      type: object
    smart_test_disk_choices_0:
      default: false
      title: full_disk
      type: boolean
    smart_test_manual_test_0:
      items:
        type: object
      title: disks
      type: array
    smart_test_update_1:
      additionalProperties: false
      default: {}
      properties:
        all_disks:
          type: boolean
        desc:
          type: string
        disks:
          items:
            type: string
          type: array
        schedule:
          additionalProperties: false
          properties:
            dom:
              type: string
            dow:
              type: string
            hour:
              type: string
            month:
              type: string
          type: object
        type:
          enum:
          - LONG
          - SHORT
          - CONVEYANCE
          - OFFLINE
          type: string
      title: smart_task_create
      type: object
    smart_update_0:
      additionalProperties: false
      default: {}
      properties:
        critical:
          type: integer
        difference:
          type: integer
        informational:
          type: integer
        interval:
          type: integer
        powermode:
          enum:
          - NEVER
          - SLEEP
          - STANDBY
          - IDLE
          type: string
      title: smart_update
      type: object
    smb_get_remote_acl_0:
      additionalProperties: false
      default: {}
      properties:
        options:
          additionalProperties: false
          properties:
            output_format:
              enum:
              - SMB
              - LOCAL
              type: string
            use_kerberos:
              type: boolean
          type: object
        password:
          type: string
        path:
          type: string
        server:
          type: string
        share:
          type: string
        username:
          type: string
      title: get_remote_acl
      type: object
    smb_sharesec_create_0:
      additionalProperties: false
      default: {}
      properties:
        share_acl:
          items:
            type: object
          type: array
        share_name:
          type: string
      title: smbsharesec_create
      type: object
    smb_sharesec_getacl:
      properties:
        options:
          $ref: '#/components/schemas/smb_sharesec_getacl_1'
        share_name:
          $ref: '#/components/schemas/smb_sharesec_getacl_0'
      type: object
    smb_sharesec_getacl_0:
      title: share_name
      type: string
    smb_sharesec_getacl_1:
      additionalProperties: false
      default: {}
      properties:
        resolve_sids:
          type: boolean
      title: options
      type: object
    smb_sharesec_update_1:
      additionalProperties: false
      default: {}
      properties:
        share_acl:
          items:
            type: object
          type: array
      title: smbsharesec_update
      type: object
    smb_status:
      properties:
        info_level:
          $ref: '#/components/schemas/smb_status_0'
        query-filters:
          $ref: '#/components/schemas/smb_status_1'
        query-options:
          $ref: '#/components/schemas/smb_status_2'
        status_options:
          $ref: '#/components/schemas/smb_status_3'
      type: object
    smb_status_0:
      default: ALL
      enum:
      - AUTH_LOG
      - ALL
      - SESSIONS
      - SHARES
      - LOCKS
      - BYTERANGE
      - NOTIFICATIONS
      title: info_level
      type: string
    smb_status_1:
      default: []
      items: {}
      title: query-filters
      type: array
    smb_status_2:
      additionalProperties: false
      default: {}
      properties:
        count:
          type: boolean
        extend:
          nullable: true
          type: string
        extend_context:
          nullable: true
          type: string
        extra:
          additionalProperties: true
          properties: {}
          type: object
        force_sql_filters:
          type: boolean
        get:
          type: boolean
        limit:
          type: integer
        offset:
          type: integer
        order_by:
          items: {}
          type: array
        prefix:
          nullable: true
          type: string
        relationships:
          type: boolean
        select:
          items: {}
          type: array
      title: query-options
      type: object
    smb_status_3:
      additionalProperties: false
      default: {}
      properties:
        fast:
          type: boolean
        restrict_user:
          type: string
        verbose:
          type: boolean
      title: status_options
      type: object
    smb_update_0:
      additionalProperties: false
      default: {}
      properties:
        aapl_extensions:
          type: boolean
        admin_group:
          nullable: true
          type: string
        bindip:
          items:
            type: string
          type: array
        description:
          type: string
        dirmask:
          type: string
        enable_smb1:
          type: boolean
        filemask:
          type: string
        guest:
          type: string
        localmaster:
          type: boolean
        loglevel:
          enum:
          - NONE
          - MINIMUM
          - NORMAL
          - FULL
          - DEBUG
          type: string
        netbiosalias:
          items:
            type: string
          type: array
        netbiosname:
          type: string
        netbiosname_b:
          type: string
        ntlmv1_auth:
          type: boolean
        smb_options:
          type: string
        syslog:
          type: boolean
        unixcharset:
          type: string
        workgroup:
          type: string
      title: smb_update
      type: object
    snmp_update_0:
      additionalProperties: false
      default: {}
      properties:
        community:
          type: string
        contact:
          type: string
        location:
          type: string
        loglevel:
          type: integer
        options:
          type: string
        traps:
          type: boolean
        v3:
          type: boolean
        v3_authtype:
          enum:
          - ''
          - MD5
          - SHA
          type: string
        v3_password:
          type: string
        v3_privpassphrase:
          type: string
        v3_privproto:
          enum:
          - null
          - AES
          - DES
          nullable: true
          type: string
        v3_username:
          type: string
        zilstat:
          type: boolean
      title: snmp_update
      type: object
    ssh_update_0:
      additionalProperties: false
      default: {}
      properties:
        bindiface:
          items:
            type: string
          type: array
        compression:
          type: boolean
        kerberosauth:
          type: boolean
        options:
          type: string
        passwordauth:
          type: boolean
        rootlogin:
          type: boolean
        sftp_log_facility:
          enum:
          - ''
          - DAEMON
          - USER
          - AUTH
          - LOCAL0
          - LOCAL1
          - LOCAL2
          - LOCAL3
          - LOCAL4
          - LOCAL5
          - LOCAL6
          - LOCAL7
          type: string
        sftp_log_level:
          enum:
          - ''
          - QUIET
          - FATAL
          - ERROR
          - INFO
          - VERBOSE
          - DEBUG
          - DEBUG2
          - DEBUG3
          type: string
        tcpfwd:
          type: boolean
        tcpport:
          type: integer
        weak_ciphers:
          items:
            type: string
          type: array
      title: ssh_update
      type: object
    staticroute_create_0:
      additionalProperties: false
      default: {}
      properties:
        description:
          type: string
        destination:
          type: string
        gateway:
          type: string
      title: staticroute_create
      type: object
    staticroute_update_1:
      additionalProperties: false
      default: {}
      properties:
        description:
          type: string
        destination:
          type: string
        gateway:
          type: string
      title: staticroute_create
      type: object
    stats_get_data:
      properties:
        stats-filter:
          $ref: '#/components/schemas/stats_get_data_1'
        stats_list:
          $ref: '#/components/schemas/stats_get_data_0'
      type: object
    stats_get_data_0:
      items:
        type: object
      title: stats_list
      type: array
    stats_get_data_1:
      additionalProperties: false
      default: {}
      properties:
        end:
          type: string
        start:
          type: string
        step:
          type: integer
      title: stats-filter
      type: object
    stats_get_dataset_info:
      properties:
        source:
          $ref: '#/components/schemas/stats_get_dataset_info_0'
        type:
          $ref: '#/components/schemas/stats_get_dataset_info_1'
      type: object
    stats_get_dataset_info_0:
      title: source
      type: string
    stats_get_dataset_info_1:
      title: type
      type: string
    support_fetch_categories_0:
      title: token
      type: string
    support_new_ticket_0:
      additionalProperties: false
      default: {}
      properties:
        attach_debug:
          type: boolean
        body:
          type: string
        category:
          type: string
        cc:
          items:
            type: string
          type: array
        criticality:
          type: string
        email:
          type: string
        environment:
          type: string
        name:
          type: string
        phone:
          type: string
        title:
          type: string
        token:
          type: string
        type:
          enum:
          - BUG
          - FEATURE
          type: string
      title: new_ticket
      type: object
    support_update_0:
      additionalProperties: false
      default: {}
      properties:
        email:
          type: string
        enabled:
          nullable: true
          type: boolean
        name:
          type: string
        phone:
          type: string
        secondary_email:
          type: string
        secondary_name:
          type: string
        secondary_phone:
          type: string
        secondary_title:
          type: string
        title:
          type: string
      title: support_update
      type: object
    system_advanced_update_0:
      additionalProperties: false
      default: {}
      properties:
        advancedmode:
          type: boolean
        anonstats:
          type: boolean
        autotune:
          type: boolean
        boot_scrub:
          type: integer
        consolemenu:
          type: boolean
        consolemsg:
          type: boolean
        debugkernel:
          type: boolean
        fqdn_syslog:
          type: boolean
        motd:
          type: string
        overprovision:
          nullable: true
          type: integer
        powerdaemon:
          type: boolean
        sed_passwd:
          type: string
        sed_user:
          enum:
          - USER
          - MASTER
          type: string
        serialconsole:
          type: boolean
        serialport:
          type: string
        serialspeed:
          enum:
          - '9600'
          - '19200'
          - '38400'
          - '57600'
          - '115200'
          type: string
        swapondrive:
          type: integer
        syslog_tls_certificate:
          nullable: true
          type: integer
        syslog_tls_certificate_authority:
          nullable: true
          type: integer
        syslog_transport:
          enum:
          - UDP
          - TCP
          - TLS
          type: string
        sysloglevel:
          enum:
          - F_EMERG
          - F_ALERT
          - F_CRIT
          - F_ERR
          - F_WARNING
          - F_NOTICE
          - F_INFO
          - F_DEBUG
          - F_IS_DEBUG
          type: string
        syslogserver:
          type: string
        traceback:
          type: boolean
        uploadcrash:
          type: boolean
      title: system_advanced_update
      type: object
    system_feature_enabled_0:
      enum:
      - DEDUP
      - FIBRECHANNEL
      - JAILS
      - VM
      title: feature
      type: string
    system_general_ui_restart_0:
      default: 3
      title: delay
      type: integer
    system_general_update_0:
      additionalProperties: false
      default: {}
      properties:
        crash_reporting:
          nullable: true
          type: boolean
        kbdmap:
          type: string
        language:
          type: string
        sysloglevel:
          enum:
          - F_EMERG
          - F_ALERT
          - F_CRIT
          - F_ERR
          - F_WARNING
          - F_NOTICE
          - F_INFO
          - F_DEBUG
          - F_IS_DEBUG
          type: string
        syslogserver:
          type: string
        timezone:
          type: string
        ui_address:
          items:
            type: string
          type: array
        ui_certificate:
          nullable: true
          type: integer
        ui_httpsport:
          type: integer
        ui_httpsprotocols:
          items:
            type: string
          type: array
        ui_httpsredirect:
          type: boolean
        ui_port:
          type: integer
        ui_v6address:
          items:
            type: string
          type: array
        usage_collection:
          nullable: true
          type: boolean
      title: general_settings
      type: object
    system_license_update_0:
      title: license
      type: string
    system_ntpserver_create_0:
      additionalProperties: false
      default: {}
      properties:
        address:
          type: string
        burst:
          type: boolean
        force:
          type: boolean
        iburst:
          type: boolean
        maxpoll:
          type: integer
        minpoll:
          type: integer
        prefer:
          type: boolean
      title: ntp_create
      type: object
    system_ntpserver_update_1:
      additionalProperties: false
      default: {}
      properties:
        address:
          type: string
        burst:
          type: boolean
        force:
          type: boolean
        iburst:
          type: boolean
        maxpoll:
          type: integer
        minpoll:
          type: integer
        prefer:
          type: boolean
      title: ntp_create
      type: object
    system_reboot_0:
      additionalProperties: false
      default: {}
      properties:
        delay:
          type: integer
      title: system-reboot
      type: object
    system_shutdown_0:
      additionalProperties: false
      default: {}
      properties:
        delay:
          type: integer
      title: system-shutdown
      type: object
    systemdataset_update_0:
      additionalProperties: false
      default: {}
      properties:
        pool:
          nullable: true
          type: string
        pool_exclude:
          nullable: true
          type: string
        syslog:
          type: boolean
      title: sysdataset_update
      type: object
    tftp_update_0:
      additionalProperties: false
      default: {}
      properties:
        directory:
          type: string
        host:
          type: string
        newfiles:
          type: boolean
        options:
          type: string
        port:
          type: integer
        umask:
          type: string
        username:
          type: string
      title: tftp_update
      type: object
    truecommand_update_0:
      additionalProperties: false
      default: {}
      properties:
        api_key:
          nullable: true
          type: string
        enabled:
          type: boolean
      title: truecommand_update
      type: object
    truenas_set_production:
      properties:
        attach_debug:
          $ref: '#/components/schemas/truenas_set_production_1'
        production:
          $ref: '#/components/schemas/truenas_set_production_0'
      type: object
    truenas_set_production_0:
      title: production
      type: boolean
    truenas_set_production_1:
      default: false
      title: attach_debug
      type: boolean
    truenas_update_customer_information_0:
      additionalProperties: false
      default: {}
      properties:
        administrative_user:
          additionalProperties: false
          properties:
            address:
              type: string
            city:
              type: string
            country:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            mobile_phone:
              type: string
            office_phone:
              type: string
            primary_email:
              type: string
            secondary_email:
              type: string
            state:
              type: string
            title:
              type: string
            zip:
              type: string
          type: object
        company:
          type: string
        other_primary_use_case:
          type: string
        physical_location:
          additionalProperties: false
          properties:
            address:
              type: string
            city:
              type: string
            contact_email:
              type: string
            contact_name:
              type: string
            contact_phone_number:
              type: string
            country:
              type: string
            state:
              type: string
            zip:
              type: string
          type: object
        primary_use_case:
          type: string
        reseller:
          additionalProperties: false
          properties:
            company:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            mobile_phone:
              type: string
            office_phone:
              type: string
            title:
              type: string
          type: object
        technical_user:
          additionalProperties: false
          properties:
            address:
              type: string
            city:
              type: string
            country:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            mobile_phone:
              type: string
            office_phone:
              type: string
            primary_email:
              type: string
            secondary_email:
              type: string
            state:
              type: string
            title:
              type: string
            zip:
              type: string
          type: object
      title: customer_information_update
      type: object
    tunable_create_0:
      additionalProperties: false
      default: {}
      properties:
        comment:
          type: string
        enabled:
          type: boolean
        type:
          enum:
          - SYSCTL
          - LOADER
          - RC
          type: string
        value:
          type: string
        var:
          type: string
      title: tunable_create
      type: object
    tunable_update_1:
      additionalProperties: false
      default: {}
      properties:
        comment:
          type: string
        enabled:
          type: boolean
        type:
          enum:
          - SYSCTL
          - LOADER
          - RC
          type: string
        value:
          type: string
        var:
          type: string
      title: tunable_create
      type: object
    update_check_available_0:
      additionalProperties: false
      default: {}
      properties:
        train:
          type: string
      title: update-check-available
      type: object
    update_get_pending_0:
      default: null
      nullable: true
      title: path
      type: string
    update_manual_0:
      title: path
      type: string
    update_set_auto_download_0:
      title: autocheck
      type: boolean
    update_set_train_0:
      title: train
      type: string
    update_update_0:
      additionalProperties: false
      default: {}
      properties:
        reboot:
          type: boolean
        train:
          type: string
      title: update
      type: object
    ups_update_0:
      additionalProperties: false
      default: {}
      properties:
        description:
          type: string
        driver:
          type: string
        emailnotify:
          type: boolean
        extrausers:
          type: string
        hostsync:
          type: integer
        identifier:
          type: string
        mode:
          enum:
          - MASTER
          - SLAVE
          type: string
        monpwd:
          type: string
        monuser:
          type: string
        nocommwarntime:
          nullable: true
          type: integer
        options:
          type: string
        optionsupsd:
          type: string
        port:
          type: string
        powerdown:
          type: boolean
        remotehost:
          type: string
        remoteport:
          type: integer
        rmonitor:
          type: boolean
        shutdown:
          enum:
          - LOWBATT
          - BATT
          type: string
        shutdowncmd:
          nullable: true
          type: string
        shutdowntimer:
          type: integer
        subject:
          type: string
        toemail:
          items:
            type: string
          type: array
      title: ups_update
      type: object
    user_create_0:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        email:
          nullable: true
          type: string
        full_name:
          type: string
        group:
          type: integer
        group_create:
          type: boolean
        groups:
          items: {}
          type: array
        home:
          type: string
        home_mode:
          type: string
        locked:
          type: boolean
        microsoft_account:
          type: boolean
        password:
          type: string
        password_disabled:
          type: boolean
        shell:
          type: string
        smb:
          type: boolean
        sshpubkey:
          nullable: true
          type: string
        sudo:
          type: boolean
        sudo_commands:
          items:
            type: string
          type: array
        sudo_nopasswd:
          type: boolean
        uid:
          type: integer
        username:
          type: string
      title: user_create
      type: object
    user_delete_1:
      additionalProperties: false
      default: {}
      properties:
        delete_group:
          type: boolean
      title: options
      type: object
    user_get_user_obj_0:
      additionalProperties: false
      default: {}
      properties:
        uid:
          type: integer
        username:
          type: string
      title: get_user_obj
      type: object
    user_pop_attribute_1:
      title: key
      type: string
    user_set_attribute:
      properties:
        key:
          $ref: '#/components/schemas/user_set_attribute_1'
        value:
          $ref: '#/components/schemas/user_set_attribute_2'
      type: object
    user_set_attribute_1:
      title: key
      type: string
    user_set_attribute_2:
      anyOf:
      - type: string
      - type: integer
      - type: boolean
      - type: object
      - items: {}
        type: array
      nullable: false
      title: value
    user_shell_choices_0:
      default: null
      nullable: true
      title: user_id
      type: integer
    user_update_1:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        email:
          nullable: true
          type: string
        full_name:
          type: string
        group:
          type: integer
        groups:
          items: {}
          type: array
        home:
          type: string
        home_mode:
          type: string
        locked:
          type: boolean
        microsoft_account:
          type: boolean
        password:
          type: string
        password_disabled:
          type: boolean
        shell:
          type: string
        smb:
          type: boolean
        sshpubkey:
          nullable: true
          type: string
        sudo:
          type: boolean
        sudo_commands:
          items:
            type: string
          type: array
        sudo_nopasswd:
          type: boolean
        uid:
          type: integer
        username:
          type: string
      title: user_create
      type: object
    vm_clone_1:
      default: null
      title: name
      type: string
    vm_create_0:
      additionalProperties: false
      default: {}
      properties:
        autostart:
          type: boolean
        bootloader:
          enum:
          - UEFI
          - UEFI_CSM
          - GRUB
          type: string
        cores:
          type: integer
        description:
          type: string
        devices:
          items:
            type: object
          type: array
        grubconfig:
          nullable: true
          type: string
        memory:
          type: integer
        name:
          type: string
        shutdown_timeout:
          type: integer
        threads:
          type: integer
        time:
          enum:
          - LOCAL
          - UTC
          type: string
        vcpus:
          type: integer
      title: vm_create
      type: object
    vm_delete_1:
      additionalProperties: false
      default: {}
      properties:
        force:
          type: boolean
        zvols:
          type: boolean
      title: vm_delete
      type: object
    vm_device_create_0:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        dtype:
          enum:
          - NIC
          - DISK
          - CDROM
          - PCI
          - VNC
          - RAW
          type: string
        order:
          nullable: true
          type: integer
        vm:
          type: integer
      title: vmdevice_create
      type: object
    vm_device_delete_1:
      additionalProperties: false
      default: {}
      properties:
        raw_file:
          type: boolean
        zvol:
          type: boolean
      title: vm_device_delete
      type: object
    vm_device_update_1:
      additionalProperties: false
      default: {}
      properties:
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        dtype:
          enum:
          - NIC
          - DISK
          - CDROM
          - PCI
          - VNC
          - RAW
          type: string
        order:
          nullable: true
          type: integer
        vm:
          type: integer
      title: vmdevice_create
      type: object
    vm_get_attached_iface_0:
      title: id
      type: integer
    vm_get_available_memory_0:
      default: false
      title: overcommit
      type: boolean
    vm_get_console_0:
      title: id
      type: integer
    vm_get_vnc_0:
      title: id
      type: integer
    vm_poweroff:
      properties: {}
      type: object
    vm_restart:
      properties: {}
      type: object
    vm_start_1:
      additionalProperties: false
      default: {}
      properties:
        overcommit:
          type: boolean
      title: options
      type: object
    vm_status:
      properties: {}
      type: object
    vm_stop_1:
      additionalProperties: false
      default: {}
      properties:
        force:
          type: boolean
        force_after_timeout:
          type: boolean
      title: options
      type: object
    vm_update_1:
      additionalProperties: false
      default: {}
      properties:
        autostart:
          type: boolean
        bootloader:
          enum:
          - UEFI
          - UEFI_CSM
          - GRUB
          type: string
        cores:
          type: integer
        description:
          type: string
        devices:
          items:
            type: object
          type: array
        grubconfig:
          nullable: true
          type: string
        memory:
          type: integer
        name:
          type: string
        shutdown_timeout:
          type: integer
        threads:
          type: integer
        time:
          enum:
          - LOCAL
          - UTC
          type: string
        vcpus:
          type: integer
      title: vm_create
      type: object
    vmware_create_0:
      additionalProperties: false
      default: {}
      properties:
        datastore:
          type: string
        filesystem:
          type: string
        hostname:
          type: string
        password:
          type: string
        username:
          type: string
      title: vmware_create
      type: object
    vmware_dataset_has_vms:
      properties:
        dataset:
          $ref: '#/components/schemas/vmware_dataset_has_vms_0'
        recursive:
          $ref: '#/components/schemas/vmware_dataset_has_vms_1'
      type: object
    vmware_dataset_has_vms_0:
      title: dataset
      type: string
    vmware_dataset_has_vms_1:
      title: recursive
      type: boolean
    vmware_get_datastores_0:
      additionalProperties: false
      default: {}
      properties:
        hostname:
          type: string
        password:
          type: string
        username:
          type: string
      title: vmware-creds
      type: object
    vmware_get_virtual_machines_0:
      title: pk
      type: integer
    vmware_match_datastores_with_datasets_0:
      additionalProperties: false
      default: {}
      properties:
        hostname:
          type: string
        password:
          type: string
        username:
          type: string
      title: vmware-creds
      type: object
    vmware_update_1:
      additionalProperties: false
      default: {}
      properties:
        datastore:
          type: string
        filesystem:
          type: string
        hostname:
          type: string
        password:
          type: string
        username:
          type: string
      title: vmware_create
      type: object
    webdav_update_0:
      additionalProperties: false
      default: {}
      properties:
        certssl:
          nullable: true
          type: integer
        htauth:
          enum:
          - NONE
          - BASIC
          - DIGEST
          type: string
        password:
          type: string
        protocol:
          enum:
          - HTTP
          - HTTPS
          - HTTPHTTPS
          type: string
        tcpport:
          type: integer
        tcpportssl:
          type: integer
      title: webdav_update
      type: object
    zfs_snapshot_clone_0:
      additionalProperties: false
      default: {}
      properties:
        dataset_dst:
          type: string
        snapshot:
          type: string
      title: snapshot_clone
      type: object
    zfs_snapshot_create_0:
      additionalProperties: false
      default: {}
      properties:
        dataset:
          type: string
        name:
          type: string
        naming_schema:
          type: string
        properties:
          additionalProperties: true
          properties: {}
          type: object
        recursive:
          type: boolean
        vmware_sync:
          type: boolean
      title: snapshot_create
      type: object
    zfs_snapshot_delete_1:
      additionalProperties: false
      default: {}
      properties:
        defer:
          type: boolean
      title: options
      type: object
    zfs_snapshot_remove_0:
      additionalProperties: false
      default: {}
      properties:
        dataset:
          type: string
        defer_delete:
          type: boolean
        name:
          type: string
      title: snapshot_remove
      type: object
    zfs_snapshot_rollback:
      properties:
        id:
          $ref: '#/components/schemas/zfs_snapshot_rollback_0'
        options:
          $ref: '#/components/schemas/zfs_snapshot_rollback_1'
      type: object
    zfs_snapshot_rollback_0:
      title: id
      type: string
    zfs_snapshot_rollback_1:
      additionalProperties: false
      default: {}
      properties:
        force:
          type: boolean
        recursive:
          type: boolean
        recursive_clones:
          type: boolean
      title: options
      type: object
  securitySchemes:
    basic:
      scheme: basic
      type: http
info:
  title: TrueNAS RESTful API
  version: v2.0
openapi: 3.0.0
paths:
  /acme/dns/authenticator:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /acme/dns/authenticator
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - acme.dns.authenticator
    post:
      description: 'Create a DNS Authenticator


        Create a specific DNS Authenticator containing required authentication details
        for the said

        provider to successfully connect with it


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acme_dns_authenticator_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /acme/dns/authenticator
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - acme.dns.authenticator
  /acme/dns/authenticator/authenticator_schemas:
    get:
      description: 'Get the schemas for all DNS providers we support for ACME DNS
        Challenge and the respective attributes

        required for connecting to them while validating a DNS Challenge'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /acme/dns/authenticator/authenticator_schemas
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - acme.dns.authenticator
  /acme/dns/authenticator/id/{id}:
    delete:
      description: 'Delete DNS Authenticator of `id`


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /acme/dns/authenticator/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - acme.dns.authenticator
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /acme/dns/authenticator/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - acme.dns.authenticator
    put:
      description: 'Update DNS Authenticator of `id`


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acme_dns_authenticator_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /acme/dns/authenticator/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - acme.dns.authenticator
  /activedirectory:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /activedirectory
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - activedirectory
    put:
      description: "Update active directory configuration.\n`domainname` full DNS\
        \ domain name of the Active Directory domain.\n\n`bindname` username used\
        \ to perform the intial domain join.\n\n`bindpw` password used to perform\
        \ the initial domain join. User-\nprovided credentials are used to obtain\
        \ a kerberos ticket, which\nis used to perform the actual domain join.\n\n\
        `verbose_logging` increase logging during the domain join process.\n\n`use_default_domain`\
        \ controls whether domain users and groups have\nthe pre-windows 2000 domain\
        \ name prepended to the user account. When\nenabled, the user appears as \"\
        administrator\" rather than\n\"EXAMPLE\administrator\"\n\n`allow_trusted_doms`\
        \ enable support for trusted domains. If this\nparameter is enabled, then\
        \ separate idmap backends _must_ be configured\nfor each trusted domain, and\
        \ the idmap cache should be cleared.\n\n`allow_dns_updates` during the domain\
        \ join process, automatically\ngenerate DNS entries in the AD domain for the\
        \ NAS. If this is disabled,\nthen a domain administrator must manually add\
        \ appropriate DNS entries\nfor the NAS. This parameter is recommended for\
        \ TrueNAS HA servers.\n\n`disable_freenas_cache` disables active caching of\
        \ AD users and groups.\nWhen disabled, only users cached in winbind's internal\
        \ cache are\nvisible in GUI dropdowns. Disabling active caching is recommended\n\
        in environments with a large amount of users.\n\n`site` AD site of which the\
        \ NAS is a member. This parameter is auto-\ndetected during the domain join\
        \ process. If no AD site is configured\nfor the subnet in which the NAS is\
        \ configured, then this parameter\nappears as 'Default-First-Site-Name'. Auto-detection\
        \ is only performed\nduring the initial domain join.\n\n`kerberos_realm` in\
        \ which the server is located. This parameter is\nautomatically populated\
        \ during the initial domain join. If the NAS has\nan AD site configured and\
        \ that site has multiple kerberos servers, then\nthe kerberos realm is automatically\
        \ updated with a site-specific\nconfiguration to use those servers. Auto-detection\
        \ is only performed\nduring initial domain join.\n\n`kerberos_principal` kerberos\
        \ principal to use for AD-related\noperations outside of Samba. After intial\
        \ domain join, this field is\nupdated with the kerberos principal associated\
        \ with the AD machine\naccount for the NAS.\n\n`nss_info` controls how Winbind\
        \ retrieves Name Service Information to\nconstruct a user's home directory\
        \ and login shell. This parameter\nis only effective if the Active Directory\
        \ Domain Controller supports\nthe Microsoft Services for Unix (SFU) LDAP schema.\n\
        \n`timeout` timeout value for winbind-related operations. This value may\n\
        need to be increased in  environments with high latencies for\ncommunications\
        \ with domain controllers or a large number of domain\ncontrollers. Lowering\
        \ the value may cause status checks to fail.\n\n`dns_timeout` timeout value\
        \ for DNS queries during the initial domain\njoin. This value is also set\
        \ as the NETWORK_TIMEOUT in the ldap config\nfile.\n\n`createcomputer` Active\
        \ Directory Organizational Unit in which new\ncomputer accounts are created.\n\
        \nThe OU string is read from top to bottom without RDNs. Slashes (\"/\")\n\
        are used as delimiters, like `Computers/Servers/NAS`. The backslash\n(\"\\\
        \") is used to escape characters but not as a separator. Backslashes\nare\
        \ interpreted at multiple levels and might require doubling or even\nquadrupling\
        \ to take effect.\n\nWhen this field is blank, new computer accounts are created\
        \ in the\nActive Directory default OU.\n\nThe Active Directory service is\
        \ started after a configuration\nupdate if the service was initially disabled,\
        \ and the updated\nconfiguration sets `enable` to `True`. The Active Directory\n\
        service is stopped if `enable` is changed to `False`. If the\nconfiguration\
        \ is updated, but the initial `enable` state is `True`, and\nremains unchanged,\
        \ then the samba server is only restarted.\n\nDuring the domain join, a kerberos\
        \ keytab for the newly-created AD\nmachine account is generated. It is used\
        \ for all future\nLDAP / AD interaction and the user-provided credentials\
        \ are removed."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/activedirectory_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /activedirectory
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - activedirectory
  /activedirectory/change_trust_account_pw:
    get:
      description: 'Force an update of the AD machine account password. This can be
        used to

        refresh the Kerberos principals in the server''s system keytab.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /activedirectory/change_trust_account_pw
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - activedirectory
  /activedirectory/domain_info:
    post:
      description: 'Returns the following information about the currently joined domain:


        `LDAP server` IP address of current LDAP server to which TrueNAS is connected.


        `LDAP server name` DNS name of LDAP server to which TrueNAS is connected


        `Realm` Kerberos realm


        `LDAP port`


        `Server time` timestamp.


        `KDC server` Kerberos KDC to which TrueNAS is connected


        `Server time offset` current time offset from DC.


        `Last machine account password change`. timestamp'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/activedirectory_domain_info_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /activedirectory/domain_info
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - activedirectory
  /activedirectory/get_spn_list:
    get:
      description: 'Return list of kerberos SPN entries registered for the server''s
        Active

        Directory computer account. This may not reflect the state of the

        server''s current kerberos keytab.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /activedirectory/get_spn_list
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - activedirectory
  /activedirectory/get_state:
    get:
      description: 'Wrapper function for ''directoryservices.get_state''. Returns
        only the state of the

        Active Directory service.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /activedirectory/get_state
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - activedirectory
  /activedirectory/leave:
    post:
      description: 'Leave Active Directory domain. This will remove computer

        object from AD and clear relevant configuration data from

        the NAS.

        This requires credentials for appropriately-privileged user.

        Credentials are used to obtain a kerberos ticket, which is

        used to perform the actual removal from the domain.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/activedirectory_leave_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /activedirectory/leave
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - activedirectory
  /activedirectory/nss_info_choices:
    get:
      description: Returns list of available LDAP schema choices.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /activedirectory/nss_info_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - activedirectory
  /activedirectory/started:
    get:
      description: 'Issue a no-effect command to our DC. This checks if our secure
        channel connection to our

        domain controller is still alive. It has much less impact than wbinfo -t.

        Default winbind request timeout is 60 seconds, and can be adjusted by the
        smb4.conf parameter

        ''winbind request timeout ='''
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /activedirectory/started
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - activedirectory
  /afp:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /afp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - afp
    put:
      description: 'Update AFP service settings.


        `bindip` is a list of IPs to bind AFP to. Leave blank (empty list) to bind
        to all

        available IPs.


        `map_acls` defines how to map the effective permissions of authenticated users.

        RIGHTS - Unix-style permissions

        MODE - ACLs

        NONE - Do not map


        `chmod_request` defines advanced permission control that deals with ACLs.

        PRESERVE - Preserve ZFS ACEs for named users and groups or POSIX ACL group
        mask

        SIMPLE - Change permission as requested without any extra steps

        IGNORE - Permission change requests are ignored'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/afp_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /afp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - afp
  /afp/bindip_choices:
    get:
      description: List of valid choices for IP addresses to which to bind the AFP
        service.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /afp/bindip_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - afp
  /alert/dismiss:
    post:
      description: Dismiss `id` alert.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alert_dismiss_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alert/dismiss
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alert
  /alert/list:
    get:
      description: List all types of alerts including active/dismissed currently in
        the system.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alert/list
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alert
  /alert/list_categories:
    get:
      description: List all types of alerts which the system can issue.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alert/list_categories
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alert
  /alert/list_policies:
    get:
      description: List all alert policies which indicate the frequency of the alerts.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alert/list_policies
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alert
  /alert/restore:
    post:
      description: Restore `id` alert which had been dismissed.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alert_restore_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alert/restore
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alert
  /alertclasses:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alertclasses
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alertclasses
    put:
      description: Update default Alert settings.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alertclasses_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alertclasses
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alertclasses
  /alertservice:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alertservice
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alertservice
    post:
      description: 'Create an Alert Service of specified `type`.


        If `enabled`, it sends alerts to the configured `type` of Alert Service.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alertservice_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alertservice
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alertservice
  /alertservice/id/{id}:
    delete:
      description: Delete Alert Service of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alertservice/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alertservice
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alertservice/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alertservice
    put:
      description: Update Alert Service of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alertservice_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alertservice/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alertservice
  /alertservice/list_types:
    get:
      description: List all types of supported Alert services which can be configured
        with the system.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alertservice/list_types
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alertservice
  /alertservice/test:
    post:
      description: 'Send a test alert using `type` of Alert Service.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alertservice_test_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /alertservice/test
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - alertservice
  /api_key:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /api_key
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - api_key
    post:
      description: 'Creates API Key.


        `name` is a user-readable name for key.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_key_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /api_key
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - api_key
  /api_key/id/{id}:
    delete:
      description: Delete API Key `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /api_key/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - api_key
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /api_key/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - api_key
    put:
      description: 'Update API Key `id`.


        Specify `reset: true` to reset this API Key.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_key_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /api_key/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - api_key
  /auth/check_password:
    post:
      description: Verify username and password
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_check_password'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /auth/check_password
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth
  /auth/check_user:
    post:
      description: 'Verify username and password (this will only validate root user''s
        password and

        would return `false` for any other user)'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_check_user'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /auth/check_user
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth
  /auth/generate_token:
    post:
      description: 'Generate a token to be used for authentication.


        `ttl` stands for Time To Live, in seconds. The token will be invalidated if
        the connection

        has been inactive for a time greater than this.


        `attrs` is a general purpose object/dictionary to hold information about the
        token.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_generate_token'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /auth/generate_token
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth
  /auth/sessions:
    get:
      description: "Returns list of active auth sessions.\n\nExample of return value:\n\
        \n[\n    {\n        \"id\": \"NyhB1J5vjPjIV82yZ6caU12HLA1boDJcZNWuVQM4hQWuiyUWMGZTz2ElDp7Yk87d\"\
        ,\n        \"origin\": \"192.168.0.3:40392\",\n        \"credentials\": \"\
        TOKEN\",\n        \"internal\": False,\n        \"created_at\": {\"$date\"\
        : 1545842426070}\n    }\n]\n\n`credentials` can be `UNIX_SOCKET`, `ROOT_TCP_SOCKET`,\
        \ `TRUENAS_NODE`, `LOGIN_PASSWORD` or `TOKEN`,\ndepending on what authentication\
        \ method was used.\n\nIf you want to exclude all internal connections from\
        \ the list, call this method with following arguments:\n\n[\n    [\n     \
        \   [\"internal\", \"=\", True]\n    ]\n]"
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /auth/sessions
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth
  /auth/two_factor_auth:
    get:
      description: Returns true if two factor authorization is required for authorizing
        user's login.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /auth/two_factor_auth
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth
  /auth/twofactor:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /auth/twofactor
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth.twofactor
    put:
      description: '`otp_digits` represents number of allowed digits in the OTP.


        `window` extends the validity to `window` many counter ticks before and after
        the current one.


        `interval` is time duration in seconds specifying OTP expiration time from
        it''s creation time.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_twofactor_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /auth/twofactor
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth.twofactor
  /auth/twofactor/provisioning_uri:
    get:
      description: 'Returns the provisioning URI for the OTP. This can then be encoded
        in a QR Code and used to

        provision an OTP app like Google Authenticator.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /auth/twofactor/provisioning_uri
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth.twofactor
  /auth/twofactor/renew_secret:
    get:
      description: Generates a new secret for Two Factor Authentication. Returns boolean
        true on success.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /auth/twofactor/renew_secret
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth.twofactor
  /auth/twofactor/verify:
    post:
      description: Returns boolean true if provided `token` is successfully authenticated.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_twofactor_verify_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /auth/twofactor/verify
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth.twofactor
  /boot/attach:
    post:
      description: "Attach a disk to the boot pool, turning a stripe into a mirror.\n\
        \n`expand` option will determine whether the new disk partition will be\n\
        \         the maximum available or the same size as the current disk."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boot_attach'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /boot/attach
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - boot
  /boot/detach:
    post:
      description: Detach given `dev` from boot pool.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boot_detach_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /boot/detach
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - boot
  /boot/get_disks:
    get:
      description: Returns disks of the boot pool.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /boot/get_disks
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - boot
  /boot/get_scrub_interval:
    get:
      description: Get Automatic Scrub Interval value in days.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /boot/get_scrub_interval
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - boot
  /boot/get_state:
    get:
      description: Returns the current state of the boot pool, including all vdevs,
        properties and datasets.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /boot/get_state
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - boot
  /boot/replace:
    post:
      description: Replace device `label` on boot pool with `dev`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boot_replace'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /boot/replace
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - boot
  /boot/scrub:
    get:
      description: Scrub on boot pool.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /boot/scrub
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - boot
  /boot/set_scrub_interval:
    post:
      description: Set Automatic Scrub Interval value in days.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boot_set_scrub_interval_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /boot/set_scrub_interval
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - boot
  /bootenv:
    get:
      description: Query all Boot Environments with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /bootenv
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - bootenv
    post:
      description: 'Create a new boot environment using `name`.


        If a new boot environment is desired which is a clone of another boot environment,
        `source` can be passed.

        Then, a new boot environment of `name` is created using boot environment `source`
        by cloning it.


        Ensure that `name` and `source` are valid boot environment names.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bootenv_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /bootenv
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - bootenv
  /bootenv/id/{id}:
    delete:
      description: Delete `id` boot environment. This removes the clone from the system.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /bootenv/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - bootenv
    get:
      description: Query all Boot Environments with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /bootenv/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - bootenv
    put:
      description: Update `id` boot environment name with a new provided valid `name`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bootenv_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /bootenv/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - bootenv
  /bootenv/id/{id}/activate:
    post:
      description: Activates boot environment `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bootenv_activate'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /bootenv/id/{id}/activate
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - bootenv
  /bootenv/id/{id}/set_attribute:
    post:
      description: 'Sets attributes boot environment `id`.


        Currently only `keep` attribute is allowed.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bootenv_set_attribute_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /bootenv/id/{id}/set_attribute
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - bootenv
  /certificate:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
    post:
      description: 'Create a new Certificate


        Certificates are classified under following types and the necessary keywords
        to be passed

        for `create_type` attribute to create the respective type of certificate


        1) Internal Certificate                 -  CERTIFICATE_CREATE_INTERNAL


        2) Imported Certificate                 -  CERTIFICATE_CREATE_IMPORTED


        3) Certificate Signing Request          -  CERTIFICATE_CREATE_CSR


        4) Imported Certificate Signing Request -  CERTIFICATE_CREATE_IMPORTED_CSR


        5) ACME Certificate                     -  CERTIFICATE_CREATE_ACME


        By default, created certs use RSA keys. If an Elliptic Curve Key is desired,
        it can be specified with the

        `key_type` attribute. If the `ec_curve` attribute is not specified for the
        Elliptic Curve Key, then default to

        using "BrainpoolP384R1" curve.


        A type is selected by the Certificate Service based on `create_type`. The
        rest of the values in `data` are

        validated accordingly and finally a certificate is made based on the selected
        type.


        `cert_extensions` can be specified to set X509v3 extensions.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificate_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
  /certificate/acme_server_choices:
    get:
      description: 'Dictionary of popular ACME Servers with their directory URI endpoints
        which we display automatically

        in UI'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate/acme_server_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
  /certificate/country_choices:
    get:
      description: Returns country choices for creating a certificate/csr.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate/country_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
  /certificate/ec_curve_choices:
    get:
      description: Dictionary of supported EC curves.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate/ec_curve_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
  /certificate/extended_key_usage_choices:
    get:
      description: Dictionary of choices for `ExtendedKeyUsage` extension which can
        be passed over to `usages` attribute.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate/extended_key_usage_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
  /certificate/id/{id}:
    delete:
      description: 'Delete certificate of `id`.


        If the certificate is an ACME based certificate, certificate service will
        try to

        revoke the certificate by updating it''s status with the ACME server, if it
        fails an exception is raised

        and the certificate is not deleted from the system. However, if `force` is
        set to True, certificate is deleted

        from the system even if some error occurred while revoking the certificate
        with the ACME Server


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificate_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
    put:
      description: 'Update certificate of `id`


        Only name and revoked attribute can be updated.


        When `revoked` is enabled, the specified cert `id` is revoked and if it belongs
        to a CA chain which

        exists on this system, its serial number is added to the CA''s certificate
        revocation list.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificate_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
  /certificate/key_type_choices:
    get:
      description: Dictionary of supported key types for certificates.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate/key_type_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
  /certificate/profiles:
    get:
      description: 'Returns a dictionary of predefined options for specific use cases
        i.e openvpn client/server

        configurations which can be used for creating certificates.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificate/profiles
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificate
  /certificateauthority:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificateauthority
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificateauthority
    post:
      description: 'Create a new Certificate Authority


        Certificate Authorities are classified under following types with the necessary
        keywords to be passed

        for `create_type` attribute to create the respective type of certificate authority


        1) Internal Certificate Authority       -  CA_CREATE_INTERNAL


        2) Imported Certificate Authority       -  CA_CREATE_IMPORTED


        3) Intermediate Certificate Authority   -  CA_CREATE_INTERMEDIATE


        Created certificate authorities use RSA keys by default. If an Elliptic Curve
        Key is desired, then it can be

        specified with the `key_type` attribute. If the `ec_curve` attribute is not
        specified for the Elliptic

        Curve Key, default to using "BrainpoolP384R1" curve.


        A type is selected by the Certificate Authority Service based on `create_type`.
        The rest of the values

        are validated accordingly and finally a certificate is made based on the selected
        type.


        `cert_extensions` can be specified to set X509v3 extensions.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificateauthority_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificateauthority
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificateauthority
  /certificateauthority/ca_sign_csr:
    post:
      description: 'Sign CSR by Certificate Authority of `ca_id`


        Sign CSR''s and generate a certificate from it. `ca_id` provides which CA
        is to be used for signing

        a CSR of `csr_cert_id` which exists in the system


        `cert_extensions` can be specified if specific extensions are to be set in
        the newly signed certificate.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificateauthority_ca_sign_csr_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificateauthority/ca_sign_csr
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificateauthority
  /certificateauthority/id/{id}:
    delete:
      description: 'Delete a Certificate Authority of `id`


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificateauthority/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificateauthority
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificateauthority/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificateauthority
    put:
      description: 'Update Certificate Authority of `id`


        Only `name` and `revoked` attribute can be updated.


        If `revoked` is enabled, the CA and its complete chain is marked as revoked
        and added to the CA''s

        certificate revocation list.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificateauthority_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificateauthority/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificateauthority
  /certificateauthority/profiles:
    get:
      description: 'Returns a dictionary of predefined options for specific use cases
        i.e OpenVPN certificate authority

        configurations which can be used for creating certificate authorities.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /certificateauthority/profiles
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - certificateauthority
  /cloudsync:
    get:
      description: Query all Cloud Sync Tasks with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
    post:
      description: 'Creates a new cloud_sync entry.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /cloudsync/common_task_schema:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/common_task_schema
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /cloudsync/credentials:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/credentials
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync.credentials
    post:
      description: 'Create Cloud Sync Credentials.


        `attributes` is a dictionary of valid values which will be used to authorize
        with the `provider`.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_credentials_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/credentials
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync.credentials
  /cloudsync/credentials/id/{id}:
    delete:
      description: Delete Cloud Sync Credentials of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/credentials/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync.credentials
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/credentials/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync.credentials
    put:
      description: Update Cloud Sync Credentials of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_credentials_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/credentials/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync.credentials
  /cloudsync/credentials/verify:
    post:
      description: Verify if `attributes` provided for `provider` are authorized by
        the `provider`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_credentials_verify_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/credentials/verify
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync.credentials
  /cloudsync/id/{id}:
    delete:
      description: Deletes cloud_sync entry `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
    get:
      description: Query all Cloud Sync Tasks with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
    put:
      description: Updates the cloud_sync entry `id` with `data`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /cloudsync/id/{id}/abort:
    post:
      description: Aborts cloud sync task.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_abort'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/id/{id}/abort
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /cloudsync/id/{id}/restore:
    post:
      description: Create the opposite of cloud sync task `id` (PULL if it was PUSH
        and vice versa).
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_restore_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/id/{id}/restore
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /cloudsync/id/{id}/sync:
    post:
      description: Run the cloud_sync job `id`, syncing the local data to remote.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_sync_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/id/{id}/sync
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /cloudsync/list_buckets:
    post:
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_list_buckets_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/list_buckets
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /cloudsync/list_directory:
    post:
      description: 'List contents of a remote bucket / directory.


        If remote supports buckets, path is constructed by two keys "bucket"/"folder"
        in `attributes`.

        If remote does not support buckets, path is constructed using "folder" key
        only in `attributes`.

        "folder" is directory name and "bucket" is bucket name for remote.


        Path examples:


        S3 Service

        `bucketname/directory/name`


        Dropbox Service

        `directory/name`


        `credentials` is a valid id of a Cloud Sync Credential which will be used
        to connect to the provider.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_list_directory_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/list_directory
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /cloudsync/onedrive_list_drives:
    post:
      description: 'Lists all available drives and their types for given Microsoft
        OneDrive credentials.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_onedrive_list_drives_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/onedrive_list_drives
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /cloudsync/providers:
    get:
      description: "Returns a list of dictionaries of supported providers for Cloud\
        \ Sync Tasks.\n\n`credentials_schema` is JSON schema for credentials attributes.\n\
        \n`task_schema` is JSON schema for task attributes.\n\n`buckets` is a boolean\
        \ value which is set to \"true\" if provider supports buckets.\n\nExample\
        \ of a single provider:\n\n[\n    {\n        \"name\": \"AMAZON_CLOUD_DRIVE\"\
        ,\n        \"title\": \"Amazon Cloud Drive\",\n        \"credentials_schema\"\
        : [\n            {\n                \"property\": \"client_id\",\n       \
        \         \"schema\": {\n                    \"title\": \"Amazon Application\
        \ Client ID\",\n                    \"_required_\": true,\n              \
        \      \"type\": \"string\"\n                }\n            },\n         \
        \   {\n                \"property\": \"client_secret\",\n                \"\
        schema\": {\n                    \"title\": \"Application Key\",\n       \
        \             \"_required_\": true,\n                    \"type\": \"string\"\
        \n                }\n            }\n        ],\n        \"credentials_oauth\"\
        : null,\n        \"buckets\": false,\n        \"bucket_title\": \"Bucket\"\
        ,\n        \"task_schema\": []\n    }\n]"
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/providers
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /cloudsync/sync_onetime:
    post:
      description: Run cloud sync task without creating it.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_sync_onetime'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cloudsync/sync_onetime
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cloudsync
  /config/reset:
    post:
      description: 'Reset database to configuration defaults.


        If `reboot` is true this job will reboot the system after its completed with
        a delay of 10

        seconds.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_reset_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /config/reset
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - config
  /core/bulk:
    post:
      description: 'Will loop on a list of items for the given method, returning a
        list of

        dicts containing a result and error key.


        `description` contains format string for job progress (e.g. "Deleting snapshot
        {0[dataset]}@{0[name]}")


        Result will be the message returned by the method being called,

        or a string of an error, in which case the error key will be the

        exception'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_bulk'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/bulk
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/debug:
    post:
      description: "Setup middlewared for remote debugging.\n\nengines:\n  - PTVS:\
        \ Python Visual Studio\n  - PYDEV: Python Dev (Eclipse/PyCharm)\n  - REMOTE_PDB:\
        \ Remote vanilla PDB (over TCP sockets)\n\noptions:\n  - secret: password\
        \ for PTVS\n  - host: required for PYDEV, hostname of local computer (developer\
        \ workstation)\n  - local_path: required for PYDEV, path for middlewared source\
        \ in local computer (e.g. /home/user/freenas/src/middlewared/middlewared\n\
        \  - threaded: run debugger in a new thread instead of event loop"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_debug'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/debug
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/download:
    post:
      description: 'Core helper to call a job marked for download.


        Non-`buffered` downloads will allow job to write to pipe as soon as download
        URL is requested, job will stay

        blocked meanwhile. `buffered` downloads must wait for job to complete before
        requesting download URL, job''s

        pipe output will be buffered to ramfs.


        Returns the job id and the URL for download.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_download'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/download
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/get_events:
    get:
      description: Returns metadata for every possible event emitted from websocket
        server.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/get_events
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/get_jobs:
    get:
      description: Get the long running jobs.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/get_jobs
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/get_methods:
    post:
      description: 'Return methods metadata of every available service.


        `service` parameter is optional and filters the result for a single service.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_get_methods_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/get_methods
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/get_services:
    get:
      description: Returns a list of all registered services.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/get_services
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/job_abort:
    post:
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_job_abort_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/job_abort
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/job_update:
    post:
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_job_update'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/job_update
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/job_wait:
    post:
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_job_wait_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/job_wait
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/ping:
    get:
      description: 'Utility method which just returns "pong".

        Can be used to keep connection/authtoken alive instead of using

        "ping" protocol message.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/ping
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/ping_remote:
    post:
      description: 'Method that will send an ICMP echo request to "hostname"

        and will wait up to "timeout" for a reply.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_ping_remote_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/ping_remote
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/resize_shell:
    post:
      description: Resize terminal session (/websocket/shell) to cols x rows
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_resize_shell'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/resize_shell
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /core/sessions:
    get:
      description: Get currently open websocket sessions.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /core/sessions
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - core
  /cronjob:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cronjob
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cronjob
    post:
      description: 'Create a new cron job.


        `stderr` and `stdout` are boolean values which if `true`, represent that we
        would like to suppress

        standard error / standard output respectively.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cronjob_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cronjob
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cronjob
  /cronjob/id/{id}:
    delete:
      description: Delete cronjob of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cronjob/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cronjob
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cronjob/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cronjob
    put:
      description: Update cronjob of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cronjob_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cronjob/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cronjob
  /cronjob/run:
    post:
      description: Job to run cronjob task of `id`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cronjob_run'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /cronjob/run
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - cronjob
  /device/get_info:
    post:
      description: Get info for SERIAL/DISK device types.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/device_get_info_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /device/get_info
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - device
  /directoryservices/cache_refresh:
    get:
      description: 'This method refreshes the directory services cache for users and
        groups that is

        used as a backing for `user.query` and `group.query` methods. The first cache
        fill in

        an Active Directory domain may take a significant amount of time to complete
        and

        so it is performed as within a job. The most likely situation in which a user
        may

        desire to refresh the directory services cache is after new users or groups  to
        a remote

        directory server with the intention to have said users or groups appear in
        the

        results of the aforementioned account-related methods.


        A cache refresh is not required in order to use newly-added users and groups
        for in

        permissions and ACL related methods. Likewise, a cache refresh will not resolve
        issues

        with users being unable to authenticate to shares.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /directoryservices/cache_refresh
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - directoryservices
  /directoryservices/get_state:
    get:
      description: '`DISABLED` Directory Service is disabled.


        `FAULTED` Directory Service is enabled, but not HEALTHY. Review logs and generated
        alert

        messages to debug the issue causing the service to be in a FAULTED state.


        `LEAVING` Directory Service is in process of stopping.


        `JOINING` Directory Service is in process of starting.


        `HEALTHY` Directory Service is enabled, and last status check has passed.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /directoryservices/get_state
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - directoryservices
  /disk:
    get:
      description: "Query disks.\n\nThe following extra options are supported:\n\n\
        \     include_expired: true - will also include expired disks (default: false)\n\
        \     passwords: true - will not hide KMIP password for the disks (default:\
        \ false)\n     pools: true - will join pool name for each disk (default: false)"
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/get_encrypted:
    post:
      description: 'Get all geli providers


        It might be an entire disk or a partition of type freebsd-zfs.


        Before a geli encrypted pool can be imported, disks used in the pool should
        be decrypted

        and then pool import can proceed as desired. In that case `unused` can be
        passed as `true`, to find out

        which disks are geli encrypted but not being used by active ZFS pools.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_get_encrypted_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/get_encrypted
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/get_unused:
    post:
      description: 'Helper method to get all disks that are not in use, either by
        the boot

        pool or the user pools.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_get_unused_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/get_unused
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/id/{id}:
    get:
      description: "Query disks.\n\nThe following extra options are supported:\n\n\
        \     include_expired: true - will also include expired disks (default: false)\n\
        \     passwords: true - will not hide KMIP password for the disks (default:\
        \ false)\n     pools: true - will join pool name for each disk (default: false)"
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
    put:
      description: 'Update disk of `id`.


        If extra options need to be passed to SMART which we don''t already support,
        they can be passed by

        `smartoptions`.


        `critical`, `informational` and `difference` are integer values on which alerts
        for SMART are configured

        if the disk temperature crosses the assigned threshold for each respective
        attribute.

        If they are set to null, then SMARTD config values are used as defaults.


        Email of log level LOG_CRIT is issued when disk temperature crosses `critical`.


        Email of log level LOG_INFO is issued when disk temperature crosses `informational`.


        If temperature of a disk changes by `difference` degree Celsius since the
        last report, SMART reports this.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/label_to_dev:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/label_to_dev
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/label_to_dev_disk_cache:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/label_to_dev_disk_cache
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/overprovision:
    post:
      description: Sets overprovision of disk `devname` to `size` gigabytes
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_overprovision'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/overprovision
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/sed_dev_name:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/sed_dev_name
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/smart_attributes:
    post:
      description: Returns S.M.A.R.T. attributes values for specified disk name.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_smart_attributes_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/smart_attributes
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/spindown:
    post:
      description: 'Spin down disk by device name


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_spindown_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/spindown
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/temperature:
    post:
      description: Returns temperature for device `name` using specified S.M.A.R.T.
        `powermode`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_temperature'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/temperature
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/temperatures:
    post:
      description: 'Returns temperatures for a list of devices (runs in parallel).

        See `disk.temperature` documentation for more details.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_temperatures'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/temperatures
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/unoverprovision:
    post:
      description: Removes overprovisioning of disk `devname`
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_unoverprovision_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/unoverprovision
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /disk/wipe:
    post:
      description: "Performs a wipe of a disk `dev`.\nIt can be of the following modes:\n\
        \  - QUICK: clean the first and last 32 megabytes on `dev`\n  - FULL: write\
        \ whole disk with zero's\n  - FULL_RANDOM: write whole disk with random bytes"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_wipe'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /disk/wipe
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - disk
  /dns/query:
    get:
      description: Query Name Servers with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /dns/query
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - dns
  /dyndns:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /dyndns
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - dyndns
    put:
      description: 'Update dynamic dns service configuration.


        `period` indicates how often the IP is checked in seconds.


        `ssl` if set to true, makes sure that HTTPS is used for the connection to
        the server which updates the

        DNS record.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dyndns_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /dyndns
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - dyndns
  /dyndns/provider_choices:
    get:
      description: List supported Dynamic DNS Service Providers.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /dyndns/provider_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - dyndns
  /ec2/Meta:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ec2/Meta
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ec2
  /ec2/instance_id:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ec2/instance_id
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ec2
  /ec2/set_ntp_servers:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ec2/set_ntp_servers
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ec2
  /ec2/set_root_ssh_public_key:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ec2/set_root_ssh_public_key
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ec2
  /ec2/setup:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ec2/setup
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ec2
  /enclosure:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /enclosure
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - enclosure
  /enclosure/id/{id}:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /enclosure/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - enclosure
    put:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enclosure_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /enclosure/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - enclosure
  /enclosure/set_slot_status:
    post:
      description: Set an enclosure's, with id of `enclosure_id`, disk array element
        `slot` to `status`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enclosure_set_slot_status'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /enclosure/set_slot_status
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - enclosure
  /failover:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
    put:
      description: "Update failover state.\n\n`disabled` When true indicates that\
        \ HA will be disabled.\n`master`  Marks the particular node in the chassis\
        \ as the master node.\n            The standby node will have the opposite\
        \ value.\n\n`timeout` is the time to WAIT until a failover occurs when a network\n\
        \    event occurs on an interface that is marked critical for failover AND\n\
        \    HA is enabled and working appropriately.\n\n    The default time to wait\
        \ is 2 seconds.\n    **NOTE**\n        This setting does NOT effect the `disabled`\
        \ or `master` parameters."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/call_remote:
    post:
      description: Call a method in the other node.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_call_remote'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/call_remote
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/control:
    post:
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_control'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/control
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/force_master:
    get:
      description: Force this controller to become MASTER.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/force_master
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/hardware:
    get:
      description: "Returns the hardware type for an HA system.\n  ECHOSTREAM\n  ECHOWARP\n\
        \  PUMA\n  SBB\n  ULTIMATE\n  BHYVE\n  MANUAL"
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/hardware
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/in_progress:
    get:
      description: Returns True if there is an ongoing failover event.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/in_progress
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/licensed:
    get:
      description: Checks whether this instance is licensed as a HA unit.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/licensed
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/node:
    get:
      description: "Returns the slot position in the chassis that\nthe controller\
        \ is located.\n  A - First node\n  B - Seconde Node\n  MANUAL - slot position\
        \ in chassis could not be determined"
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/node
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/status:
    get:
      description: "Get the current HA status.\n\nReturns:\n    MASTER\n    BACKUP\n\
        \    ELECTING\n    IMPORTING\n    ERROR\n    SINGLE"
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/status
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/sync_from_peer:
    get:
      description: Sync database and files from the other controller.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/sync_from_peer
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/sync_to_peer:
    post:
      description: 'Sync database and files to the other controller.


        `reboot` as true will reboot the other controller after syncing.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_sync_to_peer_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/sync_to_peer
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/unlock:
    post:
      description: 'Unlock pools in HA, syncing passphrase between controllers and
        forcing this controller

        to be MASTER importing the pools.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_unlock_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/unlock
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/upgrade:
    post:
      description: 'Upgrades both controllers.


        Files will be downloaded to the Active Controller and then transferred to
        the Standby

        Controller.


        Upgrade process will start concurrently on both nodes.


        Once both upgrades are applied, the Standby Controller will reboot. This job
        will wait for

        that job to complete before finalizing.


        A file can be uploaded to this end point. This end point is special, please
        refer to Jobs section in Websocket API documentation for details.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_upgrade_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/upgrade
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/upgrade_finish:
    get:
      description: 'Perform the last stage of an HA upgrade.


        This will activate the new boot environment on the

        Standby Controller and reboot it.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/upgrade_finish
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /failover/upgrade_pending:
    get:
      description: 'Verify if HA upgrade is pending.


        `upgrade_finish` needs to be called to finish

        the HA upgrade process if this method returns true.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /failover/upgrade_pending
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - failover
  /fcport:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /fcport
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - fcport
  /fcport/id/{id}:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /fcport/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - fcport
    put:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fcport_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /fcport/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - fcport
  /filesystem/acl_is_trivial:
    post:
      description: 'Returns True if the ACL can be fully expressed as a file mode
        without losing

        any access rules, or if the path does not support NFSv4 ACLs (for example

        a path on a tmpfs filesystem).'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_acl_is_trivial_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /filesystem/acl_is_trivial
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - filesystem
  /filesystem/chown:
    post:
      description: 'Change owner or group of file at `path`.


        `uid` and `gid` specify new owner of the file. If either

        key is absent or None, then existing value on the file is not

        changed.


        `recursive` performs action recursively, but does

        not traverse filesystem mount points.


        If `traverse` and `recursive` are specified, then the chown

        operation will traverse filesystem mount points.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_chown_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /filesystem/chown
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - filesystem
  /filesystem/default_acl_choices:
    get:
      description: Get list of default ACL types.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /filesystem/default_acl_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - filesystem
  /filesystem/get_default_acl:
    post:
      description: 'Returns a default ACL depending on the usage specified by `acl_type`.

        If an admin group is defined, then an entry granting it full control will

        be placed at the top of the ACL. Optionally may pass `share_type` to argument

        to get share-specific template ACL.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_get_default_acl'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /filesystem/get_default_acl
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - filesystem
  /filesystem/getacl:
    post:
      description: 'Return ACL of a given path. This may return a POSIX1e ACL or a
        NFSv4 ACL. The acl type is indicated

        by the `ACLType` key.


        Errata about ACLType NFSv4:


        `simplified` returns a shortened form of the ACL permset and flags.


        `TRAVERSE` sufficient rights to traverse a directory, but not read contents.


        `READ` sufficient rights to traverse a directory, and read file contents.


        `MODIFIY` sufficient rights to traverse, read, write, and modify a file. Equivalent
        to modify_set.


        `FULL_CONTROL` all permissions.


        If the permisssions do not fit within one of the pre-defined simplified permissions
        types, then

        the full ACL entry will be returned.


        In all cases we replace USER_OBJ, GROUP_OBJ, and EVERYONE with owner@, group@,
        everyone@ for

        consistency with getfacl and setfacl. If one of aforementioned special tags
        is used, ''id'' must

        be set to None.


        An inheriting empty everyone@ ACE is appended to non-trivial ACLs in order
        to enforce Windows

        expectations regarding permissions inheritance. This entry is removed from
        NT ACL returned

        to SMB clients when ''ixnas'' samba VFS module is enabled. We also remove
        it here to avoid confusion.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_getacl'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /filesystem/getacl
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - filesystem
  /filesystem/listdir:
    post:
      description: "Get the contents of a directory.\n\nEach entry of the list consists\
        \ of:\n  name(str): name of the file\n  path(str): absolute path of the entry\n\
        \  realpath(str): absolute real path of the entry (if SYMLINK)\n  type(str):\
        \ DIRECTORY | FILESYSTEM | SYMLINK | OTHER\n  size(int): size of the entry\n\
        \  mode(int): file mode/permission\n  uid(int): user id of entry owner\n \
        \ gid(int): group id of entry onwer\n  acl(bool): extended ACL is present\
        \ on file"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_listdir'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /filesystem/listdir
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - filesystem
  /filesystem/setacl:
    post:
      description: 'Set ACL of a given path. Takes the following parameters:

        `path` full path to directory or file.


        `dacl` "simplified" ACL here or a full ACL.


        `uid` the desired UID of the file user. If set to None (the default), then
        user is not changed.


        `gid` the desired GID of the file group. If set to None (the default), then
        group is not changed.


        `recursive` apply the ACL recursively


        `traverse` traverse filestem boundaries (ZFS datasets)


        `strip` convert ACL to trivial. ACL is trivial if it can be expressed as a
        file mode without

        losing any access rules.


        `canonicalize` reorder ACL entries so that they are in concanical form as
        described

        in the Microsoft documentation MS-DTYP 2.4.5 (ACL)


        In all cases we replace USER_OBJ, GROUP_OBJ, and EVERYONE with owner@, group@,
        everyone@ for

        consistency with getfacl and setfacl. If one of aforementioned special tags
        is used, ''id'' must

        be set to None.


        An inheriting empty everyone@ ACE is appended to non-trivial ACLs in order
        to enforce Windows

        expectations regarding permissions inheritance. This entry is removed from
        NT ACL returned

        to SMB clients when ''ixnas'' samba VFS module is enabled.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_setacl_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /filesystem/setacl
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - filesystem
  /filesystem/setperm:
    post:
      description: 'Remove extended ACL from specified path.


        If `mode` is specified then the mode will be applied to the

        path and files and subdirectories depending on which `options` are

        selected. Mode should be formatted as string representation of octal

        permissions bits.


        `uid` the desired UID of the file user. If set to None (the default), then
        user is not changed.


        `gid` the desired GID of the file group. If set to None (the default), then
        group is not changed.


        `stripacl` setperm will fail if an extended ACL is present on `path`,

        unless `stripacl` is set to True.


        `recursive` remove ACLs recursively, but do not traverse dataset

        boundaries.


        `traverse` remove ACLs from child datasets.


        If no `mode` is set, and `stripacl` is True, then non-trivial ACLs

        will be converted to trivial ACLs. An ACL is trivial if it can be

        expressed as a file mode without losing any access rules.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_setperm_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /filesystem/setperm
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - filesystem
  /filesystem/stat:
    post:
      description: Return the filesystem stat(2) for a given `path`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_stat_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /filesystem/stat
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - filesystem
  /filesystem/statfs:
    post:
      description: "Return stats from the filesystem of a given path.\n\nRaises:\n\
        \    CallError(ENOENT) - Path not found"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_statfs_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /filesystem/statfs
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - filesystem
  /ftp:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ftp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ftp
    put:
      description: 'Update ftp service configuration.


        `clients` is an integer value which sets the maximum number of simultaneous
        clients allowed. It defaults to 32.


        `ipconnections` is an integer value which shows the maximum number of connections
        per IP address. It defaults

        to 0 which equals to unlimited.


        `timeout` is the maximum number of seconds that proftpd will allow clients
        to stay connected without receiving

        any data on either the control or data connection.


        `rootlogin` is a boolean value which when configured to true enables login
        as root. This is generally

        discouraged because of the security risks.


        `onlyanonymous` allows anonymous FTP logins with access to the directory specified
        by `anonpath`.


        `banner` is a message displayed to local login users after they successfully
        authenticate. It is not displayed

        to anonymous login users.


        `filemask` sets the default permissions for newly created files which by default
        are 077.


        `dirmask` sets the default permissions for newly created directories which
        by default are 077.


        `resume` if set allows FTP clients to resume interrupted transfers.


        `fxp` if set to true indicates that File eXchange Protocol is enabled. Generally
        it is discouraged as it

        makes the server vulnerable to FTP bounce attacks.


        `defaultroot` when set ensures that for local users, home directory access
        is only granted if the user

        is a member of group wheel.


        `ident` is a boolean value which when set to true indicates that IDENT authentication
        is required. If identd

        is not running on the client, this can result in timeouts.


        `masqaddress` is the public IP address or hostname which is set if FTP clients
        cannot connect through a

        NAT device.


        `localuserbw` is a positive integer value which indicates maximum upload bandwidth
        in KB/s for local user.

        Default of zero indicates unlimited upload bandwidth ( from the FTP server
        configuration ).


        `localuserdlbw` is a positive integer value which indicates maximum download
        bandwidth in KB/s for local user.

        Default of zero indicates unlimited download bandwidth ( from the FTP server
        configuration ).


        `anonuserbw` is a positive integer value which indicates maximum upload bandwidth
        in KB/s for anonymous user.

        Default of zero indicates unlimited upload bandwidth ( from the FTP server
        configuration ).


        `anonuserdlbw` is a positive integer value which indicates maximum download
        bandwidth in KB/s for anonymous

        user. Default of zero indicates unlimited download bandwidth ( from the FTP
        server configuration ).


        `tls` is a boolean value which when set indicates that encrypted connections
        are enabled. This requires a

        certificate to be configured first with the certificate service and the id
        of certificate is passed on in

        `ssltls_certificate`.


        `tls_policy` defines whether the control channel, data channel, both channels,
        or neither channel of an FTP

        session must occur over SSL/TLS.


        `tls_opt_enable_diags` is a boolean value when set, logs verbosely. This is
        helpful when troubleshooting a

        connection.


        `options` is a string used to add proftpd(8) parameters not covered by ftp
        service.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ftp_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ftp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ftp
  /group:
    get:
      description: 'Query groups with `query-filters` and `query-options`. As a performance
        optimization, only local groups

        will be queried by default.


        Groups from directory services such as NIS, LDAP, or Active Directory will
        be included in query results

        if the option `{''extra'': {''search_dscache'': True}}` is specified.'
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /group
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - group
    post:
      description: 'Create a new group.


        If `gid` is not provided it is automatically filled with the next one available.


        `allow_duplicate_gid` allows distinct group names to share the same gid.


        `users` is a list of user ids (`id` attribute from `user.query`).


        `smb` specifies whether the group should be mapped into an NT group.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /group
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - group
  /group/get_group_obj:
    post:
      description: 'Returns dictionary containing information from struct grp for
        the group specified by either

        the groupname or gid. Bypasses group cache.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_get_group_obj_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /group/get_group_obj
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - group
  /group/get_next_gid:
    get:
      description: Get the next available/free gid.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /group/get_next_gid
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - group
  /group/id/{id}:
    delete:
      description: 'Delete group `id`.


        The `delete_users` option deletes all users that have this group as their
        primary group.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /group/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - group
    get:
      description: 'Query groups with `query-filters` and `query-options`. As a performance
        optimization, only local groups

        will be queried by default.


        Groups from directory services such as NIS, LDAP, or Active Directory will
        be included in query results

        if the option `{''extra'': {''search_dscache'': True}}` is specified.'
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /group/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - group
    put:
      description: Update attributes of an existing group.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /group/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - group
  /hardware/events/apei:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /hardware/events/apei
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - hardware.events
  /hardware/events/mca:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /hardware/events/mca
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - hardware.events
  /hardware/events/report:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /hardware/events/report
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - hardware.events
  /idmap:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /idmap
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - idmap
    post:
      description: "Create a new IDMAP domain. These domains must be unique. This\
        \ table\nwill be automatically populated after joining an Active Directory\
        \ domain\nif \"allow trusted domains\" is set to True in the AD service configuration.\n\
        There are three default system domains: DS_TYPE_ACTIVEDIRECTORY, DS_TYPE_LDAP,\
        \ DS_TYPE_DEFAULT_DOMAIN.\nThe system domains correspond with the idmap settings\
        \ under Active Directory, LDAP, and SMB\nrespectively.\n\n`name` the pre-windows\
        \ 2000 domain name.\n\n`DNS_domain_name` DNS name of the domain.\n\n`idmap_backend`\
        \ provides a plugin interface for Winbind to use varying\nbackends to store\
        \ SID/uid/gid mapping tables. The correct setting\ndepends on the environment\
        \ in which the NAS is deployed.\n\n`range_low` and `range_high` specify the\
        \ UID and GID range for which this backend is authoritative.\n\n`certificate_id`\
        \ references the certificate ID of the SSL certificate to use for certificate-based\n\
        authentication to a remote LDAP server. This parameter is not supported for\
        \ all idmap backends as some\nbackends will generate SID to ID mappings algorithmically\
        \ without causing network traffic.\n\n`options` are additional parameters\
        \ that are backend-dependent:\n\n`AD` idmap backend options:\n`unix_primary_group`\
        \ If True, the primary group membership is fetched from the LDAP attributes\
        \ (gidNumber).\nIf False, the primary group membership is calculated via the\
        \ \"primaryGroupID\" LDAP attribute.\n\n`unix_nss_info` if True winbind will\
        \ retrieve the login shell and home directory from the LDAP attributes.\n\
        If False or if the AD LDAP entry lacks the SFU attributes the smb4.conf parameters\
        \ `template shell` and `template homedir` are used.\n\n`schema_mode` Defines\
        \ the schema that idmap_ad should use when querying Active Directory regarding\
        \ user and group information.\nThis can be either the RFC2307 schema support\
        \ included in Windows 2003 R2 or the Service for Unix (SFU) schema.\nFor SFU\
        \ 3.0 or 3.5 please choose \"SFU\", for SFU 2.0 please choose \"SFU20\". The\
        \ behavior of primary group membership is\ncontrolled by the unix_primary_group\
        \ option.\n\n`AUTORID` idmap backend options:\n`readonly` sets the module\
        \ to read-only mode. No new ranges will be allocated and new mappings\nwill\
        \ not be created in the idmap pool.\n\n`ignore_builtin` ignores mapping requests\
        \ for the BUILTIN domain.\n\n`LDAP` idmap backend options:\n`ldap_base_dn`\
        \ defines the directory base suffix to use for SID/uid/gid mapping entries.\n\
        \n`ldap_user_dn` defines the user DN to be used for authentication.\n\n`ldap_url`\
        \ specifies the LDAP server to use for SID/uid/gid map entries.\n\n`ssl` specifies\
        \ whether to encrypt the LDAP transport for the idmap backend.\n\n`NSS` idmap\
        \ backend options:\n`linked_service` specifies the auxiliary directory service\
        \ ID provider.\n\n`RFC2307` idmap backend options:\n`domain` specifies the\
        \ domain for which the idmap backend is being created. Numeric id, short-form\n\
        domain name, or long-form DNS domain name of the domain may be specified.\
        \ Entry must be entered as\nit appears in `idmap.domain`.\n\n`range_low` and\
        \ `range_high` specify the UID and GID range for which this backend is authoritative.\n\
        \n`ldap_server` defines the type of LDAP server to use. This can either be\
        \ an LDAP server provided\nby the Active Directory Domain (ad) or a stand-alone\
        \ LDAP server.\n\n`bind_path_user` specfies the search base where user objects\
        \ can be found in the LDAP server.\n\n`bind_path_group` specifies the search\
        \ base where group objects can be found in the LDAP server.\n\n`user_cn` query\
        \ cn attribute instead of uid attribute for the user name in LDAP.\n\n`realm`\
        \ append @realm to cn for groups (and users if user_cn is set) in LDAP queries.\n\
        \n`ldmap_domain` when using the LDAP server in the Active Directory server,\
        \ this allows one to\nspecify the domain where to access the Active Directory\
        \ server. This allows using trust relationships\nwhile keeping all RFC 2307\
        \ records in one place. This parameter is optional, the default is to access\n\
        the AD server in the current domain to query LDAP records.\n\n`ldap_url` when\
        \ using a stand-alone LDAP server, this parameter specifies the LDAP URL for\
        \ accessing the LDAP server.\n\n`ldap_user_dn` defines the user DN to be used\
        \ for authentication.\n\n`ldap_user_dn_password` is the password to be used\
        \ for LDAP authentication.\n\n`realm` defines the realm to use in the user\
        \ and group names. This is only required when using cn_realm together with\n\
        \ a stand-alone ldap server.\n\n`RID` backend options:\n`sssd_compat` generate\
        \ idmap low range based on same algorithm that SSSD uses by default."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/idmap_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /idmap
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - idmap
  /idmap/backend_choices:
    get:
      description: Returns array of valid idmap backend choices per directory service.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /idmap/backend_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - idmap
  /idmap/backend_options:
    get:
      description: 'This returns full information about idmap backend options. Not
        all

        `options` are valid for every backend.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /idmap/backend_options
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - idmap
  /idmap/clear_idmap_cache:
    get:
      description: 'Stop samba, remove the winbindd_cache.tdb file, start samba, flush
        samba''s cache.

        This should be performed after finalizing idmap changes.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /idmap/clear_idmap_cache
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - idmap
  /idmap/id/{id}:
    delete:
      description: Delete a domain by id. Deletion of default system domains is not
        permitted.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /idmap/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - idmap
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /idmap/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - idmap
    put:
      description: Update a domain by id.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/idmap_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /idmap/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - idmap
  /idmap/options_choices:
    post:
      description: Returns a list of supported keys for the specified idmap backend.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/idmap_options_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /idmap/options_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - idmap
  /initshutdownscript:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /initshutdownscript
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - initshutdownscript
    post:
      description: 'Create an initshutdown script task.


        `type` indicates if a command or script should be executed at `when`.


        There are three choices for `when`:


        1) PREINIT - This is early in the boot process before all the services / rc
        scripts have started

        2) POSTINIT - This is late in the boot process when most of the services /
        rc scripts have started

        3) SHUTDOWN - This is on shutdown


        `timeout` is an integer value which indicates time in seconds which the system
        should wait for the execution

        of script/command. It should be noted that a hard limit for a timeout is configured
        by the base OS, so when

        a script/command is set to execute on SHUTDOWN, the hard limit configured
        by the base OS is changed adding

        the timeout specified by script/command so it can be ensured that it executes
        as desired and is not interrupted

        by the base OS''s limit.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initshutdownscript_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /initshutdownscript
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - initshutdownscript
  /initshutdownscript/id/{id}:
    delete:
      description: Delete init/shutdown task of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /initshutdownscript/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - initshutdownscript
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /initshutdownscript/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - initshutdownscript
    put:
      description: Update initshutdown script task of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initshutdownscript_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /initshutdownscript/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - initshutdownscript
  /interface:
    get:
      description: Query Interfaces with `query-filters` and `query-options`
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
    post:
      description: 'Create virtual interfaces (Link Aggregation, VLAN)


        For BRIDGE `type` the following attribute is required: bridge_members.


        For LINK_AGGREGATION `type` the following attributes are required: lag_ports,

        lag_protocol.


        For VLAN `type` the following attributes are required: vlan_parent_interface,

        vlan_tag and vlan_pcp.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/bridge_members_choices:
    post:
      description: 'Return available interface choices for `bridge_members` attribute.


        `id` is the name of the bridge interface to update or null for a new

        bridge interface.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_bridge_members_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/bridge_members_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/checkin:
    get:
      description: 'After interfaces changes are committed with checkin timeout this
        method needs to be called

        within that timeout limit to prevent reverting the changes.


        This is to ensure user verifies the changes went as planned and its working.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/checkin
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/checkin_waiting:
    get:
      description: 'Returns wether or not we are waiting user to checkin the applied
        network changes

        before they are rolled back.

        Value is in number of seconds or null.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/checkin_waiting
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/choices:
    post:
      description: 'Choices of available network interfaces.


        `bridge_members` will include BRIDGE members.

        `lag_ports` will include LINK_AGGREGATION ports.

        `vlan_parent` will include VLAN parent interface.

        `exclude` is a list of interfaces prefix to remove.

        `include` is a list of interfaces that should not be removed.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/commit:
    post:
      description: 'Commit/apply pending interfaces changes.


        `rollback` as true (default) will rollback changes in case they fail to apply.

        `checkin_timeout` is the time in seconds it will wait for the checkin call
        to acknowledge

        the interfaces changes happened as planned from the user. If checkin does
        not happen

        within this period of time the changes will get reverted.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_commit_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/commit
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/enable_capabilities_individually:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/enable_capabilities_individually
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/has_pending_changes:
    get:
      description: Returns whether there are pending interfaces changes to be applied
        or not.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/has_pending_changes
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/id/{id}:
    delete:
      description: Delete Interface of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
    get:
      description: Query Interfaces with `query-filters` and `query-options`
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
    put:
      description: Update Interface of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/ip_in_use:
    post:
      description: "Get all IPv4 / Ipv6 from all valid interfaces, excluding tap and\
        \ epair.\n\n`loopback` will return loopback interface addresses.\n\n`any`\
        \ will return wildcard addresses (0.0.0.0 and ::).\n\n`static` when enabled\
        \ will ensure we only return static ip's configured.\n\nReturns a list of\
        \ dicts - eg -\n\n[\n    {\n        \"type\": \"INET6\",\n        \"address\"\
        : \"fe80::5054:ff:fe16:4aac\",\n        \"netmask\": 64\n    },\n    {\n \
        \       \"type\": \"INET\",\n        \"address\": \"192.168.122.148\",\n \
        \       \"netmask\": 24,\n        \"broadcast\": \"192.168.122.255\"\n   \
        \ },\n]"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_ip_in_use_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/ip_in_use
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/lag_ports_choices:
    post:
      description: 'Return available interface choices for `lag_ports` attribute.


        `id` is the name of the LAG interface to update or null for a new

        LAG interface.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_lag_ports_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/lag_ports_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/lag_setup:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/lag_setup
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/rollback:
    get:
      description: Rollback pending interfaces changes.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/rollback
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/vlan_parent_interface_choices:
    get:
      description: Return available interface choices for `vlan_parent_interface`
        attribute.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/vlan_parent_interface_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /interface/vlan_setup:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /interface/vlan_setup
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - interface
  /ipmi:
    get:
      description: Query all IPMI Channels with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ipmi
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ipmi
  /ipmi/channels:
    get:
      description: Return a list with the IPMI channels available.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ipmi/channels
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ipmi
  /ipmi/id/{id}:
    get:
      description: Query all IPMI Channels with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ipmi/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ipmi
    put:
      description: 'Update `id` IPMI Configuration.


        `ipaddress` is a valid ip which will be used to connect to the IPMI interface.


        `netmask` is the subnet mask associated with `ipaddress`.


        `dhcp` is a boolean value which if unset means that `ipaddress`, `netmask`
        and `gateway` must be set.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ipmi_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ipmi/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ipmi
  /ipmi/identify:
    post:
      description: 'Turn on IPMI chassis identify light.


        To turn off specify 0 as `seconds`.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ipmi_identify_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ipmi/identify
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ipmi
  /ipmi/is_loaded:
    get:
      description: Returns a boolean true value indicating if ipmi device is loaded.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ipmi/is_loaded
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ipmi
  /iscsi/auth:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/auth
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.auth
    post:
      description: 'Create an iSCSI Authorized Access.


        `tag` should be unique among all configured iSCSI Authorized Accesses.


        `secret` and `peersecret` should have length between 12-16 letters inclusive.


        `peeruser` and `peersecret` are provided only when configuring mutual CHAP.
        `peersecret` should not be

        similar to `secret`.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_auth_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/auth
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.auth
  /iscsi/auth/id/{id}:
    delete:
      description: Delete iSCSI Authorized Access of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/auth/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.auth
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/auth/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.auth
    put:
      description: Update iSCSI Authorized Access of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_auth_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/auth/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.auth
  /iscsi/extent:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/extent
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.extent
    post:
      description: 'Create an iSCSI Extent.


        When `type` is set to FILE, attribute `filesize` is used and it represents
        number of bytes. `filesize` if

        not zero should be a multiple of `blocksize`. `path` is a required attribute
        with `type` set as FILE and it

        should be ensured that it does not come under a jail root.


        With `type` being set to DISK, a valid ZVOL or DISK should be provided.


        `insecure_tpc` when enabled allows an initiator to bypass normal access control
        and access any scannable

        target. This allows xcopy operations otherwise blocked by access control.


        `xen` is a boolean value which is set to true if Xen is being used as the
        iSCSI initiator.


        `ro` when set to true prevents the initiator from writing to this LUN.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_extent_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/extent
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.extent
  /iscsi/extent/disk_choices:
    post:
      description: 'Exclude will exclude the path from being in the used_zvols list,

        allowing the user to keep the same item on update'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_extent_disk_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/extent/disk_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.extent
  /iscsi/extent/id/{id}:
    delete:
      description: 'Delete iSCSI Extent of `id`.


        If `id` iSCSI Extent''s `type` was configured to FILE, `remove` can be set
        to remove the configured file.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_extent_delete'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/extent/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.extent
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/extent/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.extent
    put:
      description: Update iSCSI Extent of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_extent_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/extent/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.extent
  /iscsi/global:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/global
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.global
    put:
      description: '`alua` is a no-op for FreeNAS.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_global_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/global
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.global
  /iscsi/global/alua_enabled:
    get:
      description: Returns whether iSCSI ALUA is enabled or not.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/global/alua_enabled
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.global
  /iscsi/global/sessions:
    get:
      description: 'Get a list of currently running iSCSI sessions. This includes
        initiator and target names

        and the unique connection IDs.'
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/global/sessions
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.global
  /iscsi/initiator:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/initiator
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.initiator
    post:
      description: 'Create an iSCSI Initiator.


        `initiators` is a list of initiator hostnames which are authorized to access
        an iSCSI Target. To allow all

        possible initiators, `initiators` can be left empty.


        `auth_network` is a list of IP/CIDR addresses which are allowed to use this
        initiator. If all networks are

        to be allowed, this field should be left empty.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_initiator_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/initiator
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.initiator
  /iscsi/initiator/id/{id}:
    delete:
      description: Delete iSCSI initiator of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/initiator/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.initiator
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/initiator/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.initiator
    put:
      description: Update iSCSI initiator of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_initiator_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/initiator/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.initiator
  /iscsi/portal:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/portal
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.portal
    post:
      description: 'Create a new iSCSI Portal.


        `discovery_authgroup` is required for CHAP and CHAP_MUTUAL.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_portal_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/portal
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.portal
  /iscsi/portal/id/{id}:
    delete:
      description: Delete iSCSI Portal `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/portal/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.portal
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/portal/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.portal
    put:
      description: Update iSCSI Portal `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_portal_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/portal/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.portal
  /iscsi/portal/listen_ip_choices:
    get:
      description: Returns possible choices for `listen.ip` attribute of portal create
        and update.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/portal/listen_ip_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.portal
  /iscsi/target:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/target
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.target
    post:
      description: 'Create an iSCSI Target.


        `groups` is a list of group dictionaries which provide information related
        to using a `portal`, `initiator`,

        `authmethod` and `auth` with this target. `auth` represents a valid iSCSI
        Authorized Access and defaults to

        null.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_target_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/target
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.target
  /iscsi/target/id/{id}:
    delete:
      description: 'Delete iSCSI Target of `id`.


        Deleting an iSCSI Target makes sure we delete all Associated Targets which
        use `id` iSCSI Target.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_target_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/target/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.target
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/target/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.target
    put:
      description: Update iSCSI Target of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_target_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/target/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.target
  /iscsi/targetextent:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/targetextent
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.targetextent
    post:
      description: 'Create an Associated Target.


        `lunid` will be automatically assigned if it is not provided based on the
        `target`.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_targetextent_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/targetextent
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.targetextent
  /iscsi/targetextent/id/{id}:
    delete:
      description: Delete Associated Target of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_targetextent_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/targetextent/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.targetextent
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/targetextent/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.targetextent
    put:
      description: Update Associated Target of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_targetextent_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /iscsi/targetextent/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - iscsi.targetextent
  /jail:
    get:
      description: Query all jails with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
    post:
      description: Creates a jail.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/activate:
    post:
      description: Activates a pool for iocage usage, and deactivates the rest.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_activate_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/activate
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/clean:
    post:
      description: Cleans all iocage datasets of ds_type
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_clean_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/clean
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/default_configuration:
    get:
      description: Retrieve default configuration for iocage jails.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/default_configuration
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/exec:
    post:
      description: Issues a command inside a jail.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_exec'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/exec
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/export:
    post:
      description: Export jail to compressed file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_export_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/export
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/fetch:
    post:
      description: Fetches a release or plugin.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_fetch_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/fetch
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/fstab:
    post:
      description: Manipulate a jails fstab
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_fstab'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/fstab
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/get_activated_pool:
    get:
      description: Returns the activated pool if there is one, or None
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/get_activated_pool
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/id/{id}:
    delete:
      description: Takes a jail and destroys it.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
    get:
      description: Query all jails with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
    put:
      description: Sets a jail property.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/id/{id}/clone:
    post:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_clone_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/id/{id}/clone
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/import_image:
    post:
      description: 'Import jail from compressed file.


        `compression algorithm`: None indicates that middlewared is to automatically
        determine

        which compression algorithm to use based on the compressed file extension.
        If multiple copies are found, an

        exception is raised.


        `path` is the directory where the exported jail lives. It defaults to the
        iocage images dataset.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_import_image_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/import_image
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/interface_choices:
    get:
      description: Returns a dictionary of interface choices which can be used with
        creating/updating jails.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/interface_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/rc_action:
    post:
      description: Does specified action on rc enabled (boot=on) jails
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_rc_action_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/rc_action
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/releases_choices:
    post:
      description: List installed or available releases which can be downloaded.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_releases_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/releases_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/restart:
    post:
      description: Takes a jail and restarts it.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_restart_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/restart
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/start:
    post:
      description: Takes a jail and starts it.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_start_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/start
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/stop:
    post:
      description: Takes a jail and stops it.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_stop'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/stop
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/update_defaults:
    post:
      description: Update default properties for iocage which will remain true for
        all jails moving on i.e nat_backend
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_update_defaults_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/update_defaults
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/update_to_latest_patch:
    post:
      description: Updates specified jail to latest patch level.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jail_update_to_latest_patch'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/update_to_latest_patch
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /jail/vnet_default_interface_choices:
    get:
      description: Returns a dictionary of interface choices which can be used with
        `vnet_default_interface` property.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /jail/vnet_default_interface_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - jail
  /kerberos:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos
    put:
      description: '`appdefaults_aux` add parameters to "appdefaults" section of the
        krb5.conf file.


        `libdefaults_aux` add parameters to "libdefaults" section of the krb5.conf
        file.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos
  /kerberos/keytab:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/keytab
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.keytab
    post:
      description: 'Create a kerberos keytab. Uploaded keytab files will be merged
        with the system

        keytab under /etc/krb5.keytab.


        `file` b64encoded kerberos keytab

        `name` name for kerberos keytab'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_keytab_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/keytab
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.keytab
  /kerberos/keytab/id/{id}:
    delete:
      description: 'Delete kerberos keytab by id, and force regeneration of

        system keytab.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/keytab/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.keytab
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/keytab/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.keytab
    put:
      description: Update kerberos keytab by id.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_keytab_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/keytab/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.keytab
  /kerberos/keytab/system_keytab_list:
    get:
      description: Returns content of system keytab (/etc/krb5.keytab).
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/keytab/system_keytab_list
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.keytab
  /kerberos/realm:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/realm
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.realm
    post:
      description: 'Create a new kerberos realm. This will be automatically populated
        during the

        domain join process in an Active Directory environment. Kerberos realm names

        are case-sensitive, but convention is to only use upper-case.


        Entries for kdc, admin_server, and kpasswd_server are not required.

        If they are unpopulated, then kerberos will use DNS srv records to

        discover the correct servers. The option to hard-code them is provided

        due to AD site discovery. Kerberos has no concept of Active Directory

        sites. This means that middleware performs the site discovery and

        sets the kerberos configuration based on the AD site.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_realm_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/realm
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.realm
  /kerberos/realm/id/{id}:
    delete:
      description: Delete a kerberos realm by ID.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/realm/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.realm
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/realm/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.realm
    put:
      description: 'Update a kerberos realm by id. This will be automatically populated
        during the

        domain join process in an Active Directory environment. Kerberos realm names

        are case-sensitive, but convention is to only use upper-case.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_realm_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kerberos/realm/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kerberos.realm
  /keychaincredential:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /keychaincredential
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - keychaincredential
    post:
      description: "Create a Keychain Credential\n\nCreate a Keychain Credential of\
        \ any type.\nEvery Keychain Credential has a `name` which is used to distinguish\
        \ it from others.\nThe following `type`s are supported:\n * `SSH_KEY_PAIR`\n\
        \   Which `attributes` are:\n   * `private_key`\n   * `public_key` (which\
        \ can be omitted and thus automatically derived from private key)\n   At least\
        \ one attribute is required.\n\n * `SSH_CREDENTIALS`\n   Which `attributes`\
        \ are:\n   * `host`\n   * `port` (default 22)\n   * `username` (default root)\n\
        \   * `private_key` (Keychain Credential ID)\n   * `remote_host_key` (you\
        \ can use `keychaincredential.remote_ssh_host_key_scan` do discover it)\n\
        \   * `cipher`: one of `STANDARD`, `FAST`, or `DISABLED` (last requires special\
        \ support from both SSH server and\n     client)\n   * `connect_timeout` (default\
        \ 10)\n\n"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /keychaincredential
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - keychaincredential
  /keychaincredential/generate_ssh_key_pair:
    get:
      description: 'Generate a public/private key pair


        Generate a public/private key pair (useful for `SSH_KEY_PAIR` type)


        '
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /keychaincredential/generate_ssh_key_pair
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - keychaincredential
  /keychaincredential/id/{id}:
    delete:
      description: 'Delete Keychain Credential with specific `id`


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /keychaincredential/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - keychaincredential
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /keychaincredential/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - keychaincredential
    put:
      description: 'Update a Keychain Credential with specific `id`


        Please note that you can''t change `type`


        Also you must specify full `attributes` value


        See the documentation for `create` method for information on payload contents


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /keychaincredential/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - keychaincredential
  /keychaincredential/remote_ssh_host_key_scan:
    post:
      description: 'Discover a remote host key


        Discover a remote host key (useful for `SSH_CREDENTIALS`)


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_remote_ssh_host_key_scan_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /keychaincredential/remote_ssh_host_key_scan
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - keychaincredential
  /keychaincredential/remote_ssh_semiautomatic_setup:
    post:
      description: 'Perform semi-automatic SSH connection setup with other FreeNAS
        machine


        Perform semi-automatic SSH connection setup with other FreeNAS machine. It
        creates a `SSH_CREDENTIALS`

        credential with specified `name` that can be used to connect to FreeNAS machine
        with specified `url` and

        temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed
        `username`''s private keys. Other

        `SSH_CREDENTIALS` attributes such as `cipher` and `connect_timeout` can be
        specified as well.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_remote_ssh_semiautomatic_setup_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /keychaincredential/remote_ssh_semiautomatic_setup
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - keychaincredential
  /keychaincredential/used_by:
    post:
      description: Returns list of objects that use this credential.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_used_by_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /keychaincredential/used_by
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - keychaincredential
  /kmip:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kmip
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kmip
    put:
      description: 'Update KMIP Server Configuration.


        System currently authenticates connection with remote KMIP Server with a TLS
        handshake. `certificate` and

        `certificate_authority` determine the certs which will be used to initiate
        the TLS handshake with `server`.


        `validate` is enabled by default. When enabled, system will test connection
        to `server` making sure

        it''s reachable.


        `manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local
        database to remote KMIP server.

        When disabled, if there are any keys left to be retrieved from the KMIP server,

        it will sync them back to local database.


        `enabled` if true, cannot be set to disabled if there are existing keys pending
        to be synced. However users

        can still perform this action by enabling `force_clear`.


        `change_server` is a boolean field which allows users to migrate data between
        two KMIP servers. System

        will first migrate keys from old KMIP server to local database and then migrate
        the keys from local database

        to new KMIP server. If it is unable to retrieve all the keys from old server,
        this will fail. Users can bypass

        this by enabling `force_clear`.


        `force_clear` is a boolean option which when enabled will in this case remove
        all

        pending keys to be synced from database. It should be used with extreme caution
        as users may end up with

        not having ZFS dataset or SED disks keys leaving them locked forever. It is
        disabled by default.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kmip_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kmip
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kmip
  /kmip/clear_sync_pending_keys:
    get:
      description: 'Clear all keys which are pending to be synced between KMIP server
        and TN database.


        For ZFS/SED keys, we remove the UID from local database with which we are
        able to retrieve ZFS/SED keys.

        It should be used with caution.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kmip/clear_sync_pending_keys
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kmip
  /kmip/kmip_sync_pending:
    get:
      description: 'Returns true or false based on if there are keys which are to
        be synced from local database to remote KMIP

        server or vice versa.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kmip/kmip_sync_pending
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kmip
  /kmip/sync_keys:
    get:
      description: Sync ZFS/SED keys between KMIP Server and TN database.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /kmip/sync_keys
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - kmip
  /ldap:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ldap
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ldap
    put:
      description: '`hostname` list of ip addresses or hostnames of LDAP servers with

        which to communicate in order of preference. Failover only occurs

        if the current LDAP server is unresponsive.


        `basedn` specifies the default base DN to use when performing ldap

        operations. The base must be specified as a Distinguished Name in LDAP

        format.


        `binddn` specifies the default bind DN to use when performing ldap

        operations. The bind DN must be specified as a Distinguished Name in

        LDAP format.


        `anonbind` use anonymous authentication.


        `ssl` establish SSL/TLS-protected connections to the LDAP server(s).

        GSSAPI signing is disabled on SSL/TLS-protected connections if

        kerberos authentication is used.


        `certificate` LDAPs client certificate to be used for certificate-

        based authentication.


        `validate_certificates` specifies whether to perform checks on server

        certificates in a TLS session. If enabled, TLS_REQCERT demand is set.

        The server certificate is requested. If no certificate is provided or

        if a bad certificate is provided, the session is immediately terminated.

        If disabled, TLS_REQCERT allow is set. The server certificate is

        requested, but all errors are ignored.


        `kerberos_realm` in which the server is located. This parameter is

        only required for SASL GSSAPI authentication to the remote LDAP server.


        `kerberos_principal` kerberos principal to use for SASL GSSAPI

        authentication to the remote server. If `kerberos_realm` is specified

        without a keytab, then the `binddn` and `bindpw` are used to

        perform to obtain the ticket necessary for GSSAPI authentication.


        `timeout` specifies  a  timeout  (in  seconds) after which calls to

        synchronous LDAP APIs will abort if no response is received.


        `dns_timeout` specifies the timeout (in seconds) after which the

        poll(2)/select(2) following a connect(2) returns in case of no activity

        for openldap. For nslcd this specifies the time limit (in seconds) to

        use when connecting to the directory server. This directly impacts the

        length of time that the LDAP service tries before failing over to

        a secondary LDAP URI.


        `has_samba_schema` determines whether to configure samba to use the

        ldapsam passdb backend to provide SMB access to LDAP users. This feature

        requires the presence of Samba LDAP schema extensions on the remote

        LDAP server.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ldap_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ldap
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ldap
  /ldap/get_state:
    get:
      description: 'Wrapper function for ''directoryservices.get_state''. Returns
        only the state of the

        LDAP service.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ldap/get_state
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ldap
  /ldap/schema_choices:
    get:
      description: Returns list of available LDAP schema choices.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ldap/schema_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ldap
  /ldap/ssl_choices:
    get:
      description: Returns list of SSL choices.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ldap/ssl_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ldap
  /lldp:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /lldp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - lldp
    put:
      description: 'Update LLDP Service Configuration.


        `country` is a two letter ISO 3166 country code required for LLDP location
        support.


        `location` is an optional attribute specifying the physical location of the
        host.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lldp_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /lldp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - lldp
  /lldp/country_choices:
    get:
      description: Returns country choices for LLDP.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /lldp/country_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - lldp
  /mail:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /mail
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - mail
    put:
      description: 'Update Mail Service Configuration.


        `fromemail` is used as a sending address which the mail server will use for
        sending emails.


        `outgoingserver` is the hostname or IP address of SMTP server used for sending
        an email.


        `security` is type of encryption desired.


        `smtp` is a boolean value which when set indicates that SMTP authentication
        has been enabled and `user`/`pass`

        are required attributes now.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mail_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /mail
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - mail
  /mail/send:
    post:
      description: "Sends mail using configured mail settings.\n\n`text` will be formatted\
        \ to HTML using Markdown and rendered using default E-Mail template.\nYou\
        \ can put your own HTML using `html`. If `html` is null, no HTML MIME part\
        \ will be added to E-Mail.\n\nIf `attachments` is true, a list compromised\
        \ of the following dict is required\nvia HTTP upload:\n  - headers(list)\n\
        \    - name(str)\n    - value(str)\n    - params(dict)\n  - content (str)\n\
        \n[\n {\n  \"headers\": [\n   {\n    \"name\": \"Content-Transfer-Encoding\"\
        ,\n    \"value\": \"base64\"\n   },\n   {\n    \"name\": \"Content-Type\"\
        ,\n    \"value\": \"application/octet-stream\",\n    \"params\": {\n     \"\
        name\": \"test.txt\"\n    }\n   }\n  ],\n  \"content\": \"dGVzdAo=\"\n }\n\
        ]\n\nA file can be uploaded to this end point. This end point is special,\
        \ please refer to Jobs section in Websocket API documentation for details."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mail_send'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /mail/send
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - mail
  /multipath/query:
    get:
      description: 'Get multipaths and their consumers.


        '
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /multipath/query
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - multipath
  /network/configuration:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /network/configuration
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - network.configuration
    put:
      description: 'Update Network Configuration Service configuration.


        `ipv4gateway` if set is used instead of the default gateway provided by DHCP.


        `nameserver1` is primary DNS server.


        `nameserver2` is secondary DNS server.


        `nameserver3` is tertiary DNS server.


        `httpproxy` attribute must be provided if a proxy is to be used for network
        operations.


        `netwait_enabled` is a boolean attribute which when set indicates that network
        services will not start at

        boot unless they are able to ping the addresses listed in `netwait_ip` list.


        `service_announcement` determines the broadcast protocols that will be used
        to advertise the server.

        `netbios` enables the NetBIOS name server (NBNS), which starts concurrently
        with the SMB service. SMB clients

        will only perform NBNS lookups if SMB1 is enabled. NBNS may be required for
        legacy SMB clients.

        `mdns` enables multicast DNS service announcements for enabled services. `wsd`
        enables Web Service

        Discovery support.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network_configuration_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /network/configuration
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - network.configuration
  /network/general/summary:
    get:
      description: 'Retrieve general information for current Network.


        Returns a dictionary. For example:


        '
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /network/general/summary
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - network.general
  /nfs:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /nfs
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - nfs
    put:
      description: 'Update NFS Service Configuration.


        `servers` represents number of servers to create.


        When `allow_nonroot` is set, it allows non-root mount requests to be served.


        `bindip` is a list of IP''s on which NFS will listen for requests. When it
        is unset/empty, NFS listens on

        all available addresses.


        `v4` when set means that we switch from NFSv3 to NFSv4.


        `v4_v3owner` when set means that system will use NFSv3 ownership model for
        NFSv4.


        `v4_krb` will force NFS shares to fail if the Kerberos ticket is unavailable.


        `v4_domain` overrides the default DNS domain name for NFSv4.


        `mountd_port` specifies the port mountd(8) binds to.


        `rpcstatd_port` specifies the port rpc.statd(8) binds to.


        `rpclockd_port` specifies the port rpclockd_port(8) binds to.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nfs_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /nfs
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - nfs
  /nfs/add_principal:
    post:
      description: 'Use user-provided admin credentials to kinit, add NFS SPN

        entries to the remote kerberos server, and then append the new entries

        to our system keytab.


        Currently this is only supported in AD environments.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nfs_add_principal_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /nfs/add_principal
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - nfs
  /nfs/bindip_choices:
    get:
      description: Returns ip choices for NFS service to use
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /nfs/bindip_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - nfs
  /nis:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /nis
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - nis
    put:
      description: 'Update NIS Service Configuration.


        `domain` is the name of NIS domain.


        `servers` is a list of hostnames/IP addresses.


        `secure_mode` when enabled sets ypbind(8) to refuse binding to any NIS server
        not running as root on a

        TCP port over 1024.


        `manycast` when enabled sets ypbind(8) to bind to the server that responds
        the fastest.


        `enable` enables and starts the NIS service. The NIS service is disabled when
        this

        value is changed to False.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nis_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /nis
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - nis
  /nis/get_state:
    get:
      description: 'Wrapper function for ''directoryservices.get_state''. Returns
        only the state of the

        NIS service.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /nis/get_state
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - nis
  /openvpn/client:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /openvpn/client
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - openvpn.client
    put:
      description: 'Update OpenVPN Client configuration.


        `remote` can be a valid ip address / domain which openvpn will try to connect
        to.


        `nobind` must be enabled if OpenVPN client / server are to run concurrently.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openvpn_client_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /openvpn/client
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - openvpn.client
  /openvpn/client/authentication_algorithm_choices:
    get:
      description: Returns a dictionary of valid authentication algorithms which can
        be used with OpenVPN server.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /openvpn/client/authentication_algorithm_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - openvpn.client
  /openvpn/client/cipher_choices:
    get:
      description: Returns a dictionary of valid ciphers which can be used with OpenVPN
        server.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /openvpn/client/cipher_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - openvpn.client
  /openvpn/server:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /openvpn/server
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - openvpn.server
    put:
      description: 'Update OpenVPN Server configuration.


        When `tls_crypt_auth_enabled` is enabled and `tls_crypt_auth` not provided,
        a static key is automatically

        generated to be used with OpenVPN server.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openvpn_server_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /openvpn/server
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - openvpn.server
  /openvpn/server/authentication_algorithm_choices:
    get:
      description: Returns a dictionary of valid authentication algorithms which can
        be used with OpenVPN server.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /openvpn/server/authentication_algorithm_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - openvpn.server
  /openvpn/server/cipher_choices:
    get:
      description: Returns a dictionary of valid ciphers which can be used with OpenVPN
        server.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /openvpn/server/cipher_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - openvpn.server
  /openvpn/server/client_configuration_generation:
    post:
      description: 'Returns a configuration for OpenVPN client which can be used with
        any client to connect to FN/TN OpenVPN

        server.


        `client_certificate_id` should be a valid certificate issued for use with
        OpenVPN client service.


        `server_address` if specified auto-fills the remote directive in the OpenVPN
        configuration enabling the end

        user to use the file without making any edits to connect to OpenVPN server.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openvpn_server_client_configuration_generation'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /openvpn/server/client_configuration_generation
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - openvpn.server
  /openvpn/server/renew_static_key:
    get:
      description: Reset OpenVPN server's TLS static key which will be used to encrypt/authenticate
        control channel packets.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /openvpn/server/renew_static_key
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - openvpn.server
  /plugin:
    get:
      description: Query installed plugins with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
    post:
      description: 'Create a Plugin.


        `plugin_name` is the name of the plugin specified by the INDEX file in "plugin_repository"
        and it''s JSON

        file.


        `jail_name` is the name of the jail that will manage the plugin. Required.


        `props` is a list of jail properties that the user manually sets. Plugins
        should always set the jail

        networking capability with DHCP, IP Address, or NAT properties. i.e dhcp=1
        / ip4_addr="192.168.0.2" / nat=1


        `plugin_repository` is a git URI that fetches data for `plugin_name`.


        `branch` is the FreeNAS repository branch to use as the base for the `plugin_repository`.
        The default is to

        use the current system version. Example: 11.3-RELEASE.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plugin_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
  /plugin/available:
    post:
      description: List available plugins which can be fetched for `plugin_repository`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plugin_available_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin/available
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
  /plugin/branches_choices:
    post:
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plugin_branches_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin/branches_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
  /plugin/defaults:
    post:
      description: 'Retrieve default properties specified for `plugin` in the plugin''s
        manifest.


        When `refresh` is specified, `plugin_repository` is updated before retrieving
        plugin''s default properties.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plugin_defaults_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin/defaults
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
  /plugin/id/{id}:
    delete:
      description: Delete plugin `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
    get:
      description: Query installed plugins with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
    put:
      description: Update plugin `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plugin_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
  /plugin/official_repositories:
    get:
      description: List officially supported plugin repositories.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin/official_repositories
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
  /plugin/retrieve_versions_for_repos:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin/retrieve_versions_for_repos
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
  /plugin/update_plugin:
    post:
      description: Updates specified plugin to latest available plugin version and
        optionally update plugin to latest patch level.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plugin_update_plugin'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /plugin/update_plugin
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - plugin
  /pool:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
    post:
      description: "Create a new ZFS Pool.\n\n`topology` is a object which requires\
        \ at least one `data` entry.\nAll of `data` entries (vdevs) require to be\
        \ of the same type.\n\n`deduplication` when set to ON or VERIFY makes sure\
        \ that no block of data is duplicated in the pool. When\nVERIFY is specified,\
        \ if two blocks have similar signatures, byte to byte comparison is performed\
        \ to ensure that\nthe blocks are identical. This should be used in special\
        \ circumstances as it carries a significant overhead.\n\n`encryption` when\
        \ enabled will create an ZFS encrypted root dataset for `name` pool.\n\n`encryption_options`\
        \ specifies configuration for encryption of root dataset for `name` pool.\n\
        `encryption_options.passphrase` must be specified if encryption for root dataset\
        \ is desired with a passphrase\nas a key.\nOtherwise a hex encoded key can\
        \ be specified by providing `encryption_options.key`.\n`encryption_options.generate_key`\
        \ when enabled automatically generates the key to be used\nfor dataset encryption.\n\
        \nIt should be noted that keys are stored by the system for automatic locking/unlocking\n\
        on import/export of encrypted datasets. If that is not desired, dataset should\
        \ be created\nwith a passphrase as a key.\n\nExample of `topology`:\n\n  \
        \  {\n        \"data\": [\n            {\"type\": \"RAIDZ1\", \"disks\": [\"\
        da1\", \"da2\", \"da3\"]}\n        ],\n        \"cache\": [\n            {\"\
        type\": \"STRIPE\", \"disks\": [\"da4\"]}\n        ],\n        \"log\": [\n\
        \            {\"type\": \"STRIPE\", \"disks\": [\"da5\"]}\n        ],\n  \
        \      \"spares\": [\"da6\"]\n    }\n\n\n"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/attach:
    post:
      description: 'For TrueNAS Core/Enterprise platform, if the `oid` pool is passphrase
        GELI encrypted, `passphrase`

        must be specified for this operation to succeed.


        `target_vdev` is the GUID of the vdev where the disk needs to be attached.
        In case of STRIPED vdev, this

        is the STRIPED disk GUID which will be converted to mirror. If `target_vdev`
        is mirror, it will be converted

        into a n-way mirror.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_attach'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/attach
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/dataset:
    get:
      description: 'Query Pool Datasets with `query-filters` and `query-options`.


        We provide two ways to retrieve datasets. The first is a flat structure (default),
        where

        all datasets in the system are returned as separate objects which contain
        all data

        there is for their children. This retrieval type is slightly slower because
        of duplicates in each object.

        The second type is hierarchical, where only top level datasets are returned
        in the list. They contain all the

        children in the `children` key. This retrieval type is slightly faster.

        These options are controlled by the `query-options.extra.flat` attribute (default
        true). Please note that

        this option is not available using the REST protocol but are available using
        the websocket protocol.'
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
    post:
      description: "Creates a dataset/zvol.\n\n`volsize` is required for type=VOLUME\
        \ and is supposed to be a multiple of the block size.\n`sparse` and `volblocksize`\
        \ are only used for type=VOLUME.\n\n`encryption` when enabled will create\
        \ an ZFS encrypted root dataset for `name` pool.\nThere are 2 cases where\
        \ ZFS encryption is not allowed for a dataset:\n1) Pool in question is GELI\
        \ encrypted.\n2) If the parent dataset is encrypted with a passphrase and\
        \ `name` is being created\n   with a key for encrypting the dataset.\n\n`encryption_options`\
        \ specifies configuration for encryption of dataset for `name` pool.\n`encryption_options.passphrase`\
        \ must be specified if encryption for dataset is desired with a passphrase\n\
        as a key.\nOtherwise a hex encoded key can be specified by providing `encryption_options.key`.\n\
        `encryption_options.generate_key` when enabled automatically generates the\
        \ key to be used\nfor dataset encryption.\n\nIt should be noted that keys\
        \ are stored by the system for automatic locking/unlocking\non import/export\
        \ of encrypted datasets. If that is not desired, dataset should be created\n\
        with a passphrase as a key.\n\n"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/change_key:
    post:
      description: 'Change encryption properties for `id` encrypted dataset.


        Changing dataset encryption to use passphrase instead of a key is not allowed
        if:


        1) It has encrypted roots as children which are encrypted with a key

        2) If it is a root dataset where the system dataset is located


        A file can be uploaded to this end point. This end point is special, please
        refer to Jobs section in Websocket API documentation for details.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_change_key'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/change_key
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/checksum_choices:
    get:
      description: Retrieve checksums supported for ZFS dataset.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/checksum_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/compression_choices:
    get:
      description: Retrieve compression algorithm supported by ZFS.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/compression_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/encryption_algorithm_choices:
    get:
      description: Retrieve encryption algorithms supported for ZFS dataset encryption.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/encryption_algorithm_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/encryption_summary:
    post:
      description: "Retrieve summary of all encrypted roots under `id`.\n\nKeys/passphrase\
        \ can be supplied to check if the keys are valid.\n\nIt should be noted that\
        \ there are 2 keys which show if a recursive unlock operation is\ndone for\
        \ `id`, which dataset will be unlocked and if not why it won't be unlocked.\
        \ The keys\nnamely are \"unlock_successful\" and \"unlock_error\". The former\
        \ is a boolean value showing if unlock\nwould succeed/fail. The latter is\
        \ description why it failed if it failed.\n\nIf a dataset is already unlocked,\
        \ it will show up as true for \"unlock_successful\" regardless of what\nkey\
        \ user provided as the unlock keys in the output are to reflect what a real\
        \ unlock operation would\nbehave. If user is interested in seeing if a provided\
        \ key is valid or not, then the key to look out for\nin the output is \"valid_key\"\
        \ which based on what system has in database or if a user provided one, validates\n\
        the key and sets a boolean value for the dataset.\n\nExample output:\n[\n\
        \    {\n        \"name\": \"vol\",\n        \"key_format\": \"PASSPHRASE\"\
        ,\n        \"key_present_in_database\": false,\n        \"valid_key\": true,\n\
        \        \"locked\": true,\n        \"unlock_error\": null,\n        \"unlock_successful\"\
        : true\n    },\n    {\n        \"name\": \"vol/c1/d1\",\n        \"key_format\"\
        : \"PASSPHRASE\",\n        \"key_present_in_database\": false,\n        \"\
        valid_key\": false,\n        \"locked\": true,\n        \"unlock_error\":\
        \ \"Provided key is invalid\",\n        \"unlock_successful\": false\n   \
        \ },\n    {\n        \"name\": \"vol/c\",\n        \"key_format\": \"PASSPHRASE\"\
        ,\n        \"key_present_in_database\": false,\n        \"valid_key\": false,\n\
        \        \"locked\": true,\n        \"unlock_error\": \"Key not provided\"\
        ,\n        \"unlock_successful\": false\n    },\n    {\n        \"name\":\
        \ \"vol/c/d2\",\n        \"key_format\": \"PASSPHRASE\",\n        \"key_present_in_database\"\
        : false,\n        \"valid_key\": false,\n        \"locked\": true,\n     \
        \   \"unlock_error\": \"Child cannot be unlocked when parent \"vol/c\" is\
        \ locked and provided key is invalid\",\n        \"unlock_successful\": false\n\
        \    }\n]\n\nA file can be uploaded to this end point. This end point is special,\
        \ please refer to Jobs section in Websocket API documentation for details."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_encryption_summary'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/encryption_summary
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/export_key:
    post:
      description: 'Export own encryption key for dataset `id`. If `download` is `true`,
        key will be downloaded in a json file

        where the same file can be used to unlock the dataset, otherwise it will be
        returned as string.


        Please refer to websocket documentation for downloading the file.


        A file can be downloaded from this end point. This end point is special, please
        refer to Jobs section in Websocket API documentation for details.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_export_key'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/export_key
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/id/{id}:
    delete:
      description: 'Delete dataset/zvol `id`.


        `recursive` will also delete/destroy all children datasets.

        `force` will force delete busy datasets.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
    get:
      description: 'Query Pool Datasets with `query-filters` and `query-options`.


        We provide two ways to retrieve datasets. The first is a flat structure (default),
        where

        all datasets in the system are returned as separate objects which contain
        all data

        there is for their children. This retrieval type is slightly slower because
        of duplicates in each object.

        The second type is hierarchical, where only top level datasets are returned
        in the list. They contain all the

        children in the `children` key. This retrieval type is slightly faster.

        These options are controlled by the `query-options.extra.flat` attribute (default
        true). Please note that

        this option is not available using the REST protocol but are available using
        the websocket protocol.'
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
    put:
      description: 'Updates a dataset/zvol `id`.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/attachments:
    post:
      description: "Return a list of services dependent of this dataset.\n\nResponsible\
        \ for telling the user whether there is a related\nshare, asking for confirmation.\n\
        \nExample return value:\n[\n  {\n    \"type\": \"NFS Share\",\n    \"service\"\
        : \"nfs\",\n    \"attachments\": [\"/mnt/tank/work\"]\n  }\n]"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_attachments'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/id/{id}/attachments
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/get_quota:
    post:
      description: 'Return a list of the specified `quota_type` of  quotas on the
        ZFS dataset `ds`.

        Support `query-filters` and `query-options`. used_bytes and used_percentage

        may not instantly update as space is used.


        When quota_type is not DATASET, each quota entry has these fields:


        `id` - the uid or gid to which the quota applies.


        `name` - the user or group name to which the quota applies. Value is

        null if the id in the quota cannot be resolved to a user or group. This

        indicates that the user or group does not exist on the server.


        `quota` - the quota size in bytes.


        `used_bytes` - the amount of bytes the user has written to the dataset.

        A value of zero means unlimited.


        `used_percentage` - the percentage of the user or group quota consumed.


        `obj_quota` - the number of objects that may be owned by `id`.

        A value of zero means unlimited.


        ''obj_used` - the nubmer of objects currently owned by `id`.


        `obj_used_percent` - the percentage of the `obj_quota` currently used.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_get_quota'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/id/{id}/get_quota
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/permission:
    post:
      description: 'Set permissions for a dataset `id`. Permissions may be specified
        as

        either a posix `mode` or an nfsv4 `acl`. Setting mode will fail if the

        dataset has an existing nfsv4 acl. In this case, the option `stripacl`

        must be set to `True`.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_permission_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/id/{id}/permission
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/processes:
    post:
      description: "Return a list of processes using this dataset.\n\nExample return\
        \ value:\n\n[\n  {\n    \"pid\": 2520,\n    \"name\": \"smbd\",\n    \"service\"\
        : \"cifs\"\n  },\n  {\n    \"pid\": 97778,\n    \"name\": \"minio\",\n   \
        \ \"cmdline\": \"/usr/local/bin/minio -C /usr/local/etc/minio server --address=0.0.0.0:9000\
        \ --quiet /mnt/tank/wk\"\n  }\n]"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_processes'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/id/{id}/processes
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/promote:
    post:
      description: Promote the cloned dataset `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_promote'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/id/{id}/promote
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/set_quota:
    post:
      description: 'There are three over-arching types of quotas for ZFS datasets.

        1) dataset quotas and refquotas. If a DATASET quota type is specified in

        this API call, then the API acts as a wrapper for `pool.dataset.update`.


        2) User and group quotas. These limit the amount of disk space consumed

        by files that are owned by the specified users or groups. If the respective

        "object quota" type is specfied, then the quota limits the number of objects

        that may be owned by the specified user or group.


        3) Project quotas. These limit the amount of disk space consumed by files

        that are owned by the specified project. Project quotas are not yet implemended.


        This API allows users to set multiple quotas simultaneously by submitting
        a

        list of quotas. The list may contain all supported quota types.


        `ds` the name of the target ZFS dataset.


        `quotas` specifies a list of `quota_entry` entries to apply to dataset.


        `quota_entry` entries have these required parameters:


        `quota_type`: specifies the type of quota to apply to the dataset. Possible

        values are USER, USEROBJ, GROUP, GROUPOBJ, and DATASET. USEROBJ and GROUPOBJ

        quotas limit the number of objects consumed by the specified user or group.


        `id`: the uid, gid, or name to which the quota applies. If quota_type is

        ''DATASET'', then `id` must be either `QUOTA` or `REFQUOTA`.


        `quota_value`: the quota size in bytes. Setting a value of `0` removes

        the user or group quota.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_set_quota_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/id/{id}/set_quota
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/inherit_parent_encryption_properties:
    post:
      description: 'Allows inheriting parent''s encryption root discarding its current
        encryption settings. This

        can only be done where `id` has an encrypted parent and `id` itself is an
        encryption root.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_inherit_parent_encryption_properties_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/inherit_parent_encryption_properties
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/lock:
    post:
      description: Locks `id` dataset. It will unmount the dataset and its children
        before locking.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_lock'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/lock
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/recommended_zvol_blocksize:
    post:
      description: 'Helper method to get recommended size for a new zvol (dataset
        of type VOLUME).


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_recommended_zvol_blocksize_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/recommended_zvol_blocksize
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/recordsize_choices:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/recordsize_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/unlock:
    post:
      description: 'Unlock `id` dataset.


        If `id` dataset is not encrypted an exception will be raised. There is one
        exception:

        when `id` is a root dataset and `unlock_options.recursive` is specified, encryption

        validation will not be performed for `id`. This allow unlocking encrypted
        children the `id` pool.


        For datasets which are encrypted with a passphrase, include the passphrase
        with

        `unlock_options.datasets`.


        Uploading a json file which contains encrypted dataset keys can be specified
        with

        `unlock_options.key_file`. The format is similar to that used for exporting
        encrypted dataset keys.


        A file can be uploaded to this end point. This end point is special, please
        refer to Jobs section in Websocket API documentation for details.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_unlock'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/unlock
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset
  /pool/dataset/userprop:
    get:
      description: Query all user properties for ZFS datasets.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/userprop
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset.userprop
    post:
      description: Create a user property for a given `id` dataset.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_userprop_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/userprop
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset.userprop
  /pool/dataset/userprop/id/{id}:
    delete:
      description: Delete user property `dataset_user_prop_delete.name` for `id` dataset.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_userprop_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/userprop/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset.userprop
    get:
      description: Query all user properties for ZFS datasets.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/userprop/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset.userprop
    put:
      description: Update `dataset_user_prop_update.name` user property for `id` dataset.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_userprop_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/dataset/userprop/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.dataset.userprop
  /pool/filesystem_choices:
    post:
      description: 'Returns all available datasets, except system datasets.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_filesystem_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/filesystem_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
    put:
      description: 'Update pool of `id`, adding the new topology.


        The `type` of `data` must be the same of existing vdevs.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/attachments:
    post:
      description: 'Return a list of services dependent of this pool.


        Responsible for telling the user whether there is a related

        share, asking for confirmation.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_attachments'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/attachments
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/detach:
    post:
      description: 'Detach a disk from pool of id `id`.


        `label` is the vdev guid or device name.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_detach_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/detach
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/download_encryption_key:
    post:
      description: Download encryption key for a given pool `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_download_encryption_key_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/download_encryption_key
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/expand:
    post:
      description: Expand pool to fit all available disk space.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_expand_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/expand
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/export:
    post:
      description: 'Export pool of `id`.


        `cascade` will delete all attachments of the given pool (`pool.attachments`).

        `restart_services` will restart services that have open files on given pool.

        `destroy` will also PERMANENTLY destroy the pool/data.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_export_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/export
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/get_disks:
    post:
      description: 'Get all disks in use by pools.

        If `id` is provided only the disks from the given pool `id` will be returned.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_get_disks'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/get_disks
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/is_upgraded:
    post:
      description: 'Returns whether or not the pool of `id` is on the latest version
        and with all feature

        flags enabled.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_is_upgraded'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/is_upgraded
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/lock:
    post:
      description: Lock encrypted pool `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_lock_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/lock
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/offline:
    post:
      description: 'Offline a disk from pool of id `id`.


        `label` is the vdev guid or device name.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_offline_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/offline
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/online:
    post:
      description: 'Online a disk from pool of id `id`.


        `label` is the vdev guid or device name.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_online_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/online
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/passphrase:
    post:
      description: 'Create/Change/Remove passphrase for an encrypted pool.


        Setting passphrase to null will remove the passphrase.

        `admin_password` is required when changing or removing passphrase.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_passphrase_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/passphrase
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/processes:
    post:
      description: Returns a list of running processes using this pool.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_processes'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/processes
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/recoverykey_rm:
    post:
      description: 'Remove recovery key for encrypted pool `id`.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_recoverykey_rm_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/recoverykey_rm
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/rekey:
    post:
      description: 'Rekey encrypted pool `id`.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_rekey_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/rekey
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/remove:
    post:
      description: "Remove a disk from pool of id `id`.\n\n`label` is the vdev guid\
        \ or device name.\n\nError codes:\n\n    EZFS_NOSPC(2032): out of space to\
        \ remove a device\n    EZFS_NODEVICE(2017): no such device in pool\n    EZFS_NOREPLICAS(2019):\
        \ no valid replicas\n\n"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_remove_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/remove
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/replace:
    post:
      description: 'Replace a disk on a pool.


        `label` is the ZFS guid or a device name

        `disk` is the identifier of a disk

        `passphrase` is only valid for TrueNAS Core/Enterprise platform where pool
        is GELI encrypted


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_replace_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/replace
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/scrub:
    post:
      description: 'Performs a scrub action to pool of `id`.


        `action` can be either of "START", "STOP" or "PAUSE".


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_scrub_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/scrub
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/unlock:
    post:
      description: 'Unlock encrypted pool `id`.


        `passphrase` is required of a recovery key is not provided.


        If `recoverykey` is true this method expects the recovery key file to be uploaded
        using

        the /_upload/ endpoint.


        `services_restart` is a list of services to be restarted when the pool gets
        unlocked.

        Said list be be retrieve using `pool.unlock_services_restart_choices`.




        A file can be uploaded to this end point. This end point is special, please
        refer to Jobs section in Websocket API documentation for details.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_unlock_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/unlock
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/id/{id}/upgrade:
    post:
      description: 'Upgrade pool of `id` to latest version with all feature flags.


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_upgrade'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/id/{id}/upgrade
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/import_disk:
    post:
      description: 'Import a disk, by copying its content to a pool.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_import_disk'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/import_disk
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/import_disk_autodetect_fs_type:
    post:
      description: 'Autodetect filesystem type for `pool.import_disk`.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_import_disk_autodetect_fs_type_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/import_disk_autodetect_fs_type
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/import_disk_msdosfs_locales:
    get:
      description: Get a list of locales for msdosfs type to be used in `pool.import_disk`.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/import_disk_msdosfs_locales
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/import_find:
    get:
      description: 'Returns a job id which can be used to retrieve a list of pools
        available for

        import with the following details as a result of the job:

        name, guid, status, hostname.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/import_find
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/import_pool:
    post:
      description: "Import a pool found with `pool.import_find`.\n\nIf a `name` is\
        \ specified the pool will be imported using that new name.\n\n`passphrase`\
        \ is required while importing an encrypted pool. In that case this method\
        \ needs to\nbe called using /_upload/ endpoint with the encryption key.\n\n\
        If `enable_attachments` is set to true, attachments that were disabled during\
        \ pool export will be\nre-enabled.\n\nErrors:\n    ENOENT - Pool not found\n\
        \n\n\nA file can be uploaded to this end point. This end point is special,\
        \ please refer to Jobs section in Websocket API documentation for details."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_import_pool_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/import_pool
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /pool/resilver:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/resilver
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.resilver
    put:
      description: 'Configure Pool Resilver Priority.


        If `begin` time is greater than `end` time it means it will rollover the day,
        e.g.

        begin = "19:00", end = "05:00" will increase pool resilver priority from 19:00
        of one day

        until 05:00 of the next day.


        `weekday` follows crontab(5) values 0-7 (0 or 7 is Sun).


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_resilver_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/resilver
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.resilver
  /pool/scrub:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/scrub
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.scrub
    post:
      description: 'Create a scrub task for a pool.


        `threshold` refers to the minimum amount of time in days has to be passed
        before

        a scrub can run again.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_scrub_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/scrub
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.scrub
  /pool/scrub/id/{id}:
    delete:
      description: Delete scrub task of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/scrub/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.scrub
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/scrub/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.scrub
    put:
      description: Update scrub task of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_scrub_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/scrub/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.scrub
  /pool/scrub/run:
    post:
      description: Initiate a scrub of a pool `name` if last scrub was performed more
        than `threshold` days before.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_scrub_run'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/scrub/run
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.scrub
  /pool/scrub/scrub:
    post:
      description: Start/Stop/Pause a scrub on pool `name`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_scrub_scrub'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/scrub/scrub
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.scrub
  /pool/snapshottask:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/snapshottask
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.snapshottask
    post:
      description: 'Create a Periodic Snapshot Task


        Create a Periodic Snapshot Task that will take snapshots of specified `dataset`
        at specified `schedule`.

        Recursive snapshots can be created if `recursive` flag is enabled. You can
        `exclude` specific child datasets

        or zvols from the snapshot.

        Snapshots will be automatically destroyed after a certain amount of time,
        specified by

        `lifetime_value` and `lifetime_unit`.

        If multiple periodic tasks create snapshots at the same time (for example
        hourly and daily at 00:00) the snapshot

        will be kept until the last of these tasks reaches its expiry time.

        Snapshots will be named according to `naming_schema` which is a `strftime`-like
        template for snapshot name

        and must contain `%Y`, `%m`, `%d`, `%H` and `%M`.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_snapshottask_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/snapshottask
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.snapshottask
  /pool/snapshottask/id/{id}:
    delete:
      description: 'Delete a Periodic Snapshot Task with specific `id`


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/snapshottask/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.snapshottask
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/snapshottask/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.snapshottask
    put:
      description: 'Update a Periodic Snapshot Task with specific `id`


        See the documentation for `create` method for information on payload contents


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_snapshottask_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/snapshottask/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.snapshottask
  /pool/snapshottask/id/{id}/run:
    post:
      description: Execute a Periodic Snapshot Task of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_snapshottask_run'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/snapshottask/id/{id}/run
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool.snapshottask
  /pool/unlock_services_restart_choices:
    post:
      description: 'Get a mapping of services identifiers and labels that can be restart

        on volume unlock.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_unlock_services_restart_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /pool/unlock_services_restart_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - pool
  /replication:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
    post:
      description: "Create a Replication Task\n\nCreate a Replication Task that will\
        \ push or pull ZFS snapshots to or from remote host..\n\n* `name` specifies\
        \ a name for replication task\n* `direction` specifies whether task will `PUSH`\
        \ or `PULL` snapshots\n* `transport` is a method of snapshots transfer:\n\
        \  * `SSH` transfers snapshots via SSH connection. This method is supported\
        \ everywhere but does not achieve\n    great performance\n    `ssh_credentials`\
        \ is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)\n\
        \  * `SSH+NETCAT` uses unencrypted connection for data transfer. This can\
        \ only be used in trusted networks\n    and requires a port (specified by\
        \ range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)\n\
        \    to be open on `netcat_active_side`\n    `ssh_credentials` is also required\
        \ for control connection\n  * `LOCAL` replicates to or from localhost\n* `source_datasets`\
        \ is a non-empty list of datasets to replicate snapshots from\n* `target_dataset`\
        \ is a dataset to put snapshots into. It must exist on target side\n* `recursive`\
        \ and `exclude` have the same meaning as for Periodic Snapshot Task\n* `properties`\
        \ control whether we should send dataset properties along with snapshots\n\
        * `periodic_snapshot_tasks` is a list of periodic snapshot task IDs that are\
        \ sources of snapshots for this\n  replication task. Only push replication\
        \ tasks can be bound to periodic snapshot tasks.\n* `naming_schema` is a list\
        \ of naming schemas for pull replication\n* `also_include_naming_schema` is\
        \ a list of naming schemas for push replication\n* `auto` allows replication\
        \ to run automatically on schedule or after bound periodic snapshot task\n\
        * `schedule` is a schedule to run replication task. Only `auto` replication\
        \ tasks without bound periodic\n  snapshot tasks can have a schedule\n* `restrict_schedule`\
        \ restricts when replication task with bound periodic snapshot tasks runs.\
        \ For example,\n  you can have periodic snapshot tasks that run every 15 minutes,\
        \ but only run replication task every hour.\n* Enabling `only_matching_schedule`\
        \ will only replicate snapshots that match `schedule` or\n  `restrict_schedule`\n\
        * `allow_from_scratch` will destroy all snapshots on target side and replicate\
        \ everything from scratch if none\n  of the snapshots on target side matches\
        \ source snapshots\n* `readonly` controls destination datasets readonly property:\n\
        \  * `SET` will set all destination datasets to readonly=on after finishing\
        \ the replication\n  * `REQUIRE` will require all existing destination datasets\
        \ to have readonly=on property\n  * `IGNORE` will avoid this kind of behavior\n\
        * `hold_pending_snapshots` will prevent source snapshots from being deleted\
        \ by retention of replication fails\n  for some reason\n* `retention_policy`\
        \ specifies how to delete old snapshots on target side:\n  * `SOURCE` deletes\
        \ snapshots that are absent on source side\n  * `CUSTOM` deletes snapshots\
        \ that are older than `lifetime_value` and `lifetime_unit`\n  * `NONE` does\
        \ not delete any snapshots\n* `compression` compresses SSH stream. Available\
        \ only for SSH transport\n* `speed_limit` limits speed of SSH stream. Available\
        \ only for SSH transport\n* `large_block`, `embed` and `compressed` are various\
        \ ZFS stream flag documented in `man zfs send`\n* `retries` specifies number\
        \ of retries before considering replication failed\n\n"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
  /replication/config:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/config
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication.config
    put:
      description: '`max_parallel_replication_tasks` represents a maximum number of
        parallel replication tasks running.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_config_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/config
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication.config
  /replication/count_eligible_manual_snapshots:
    post:
      description: 'Count how many existing snapshots of `dataset` match `naming_schema`.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_count_eligible_manual_snapshots'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/count_eligible_manual_snapshots
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
  /replication/create_dataset:
    post:
      description: 'Creates dataset on remote side


        Accepts `dataset` name, `transport` and SSH credentials ID (for non-local
        transport)


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_create_dataset'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/create_dataset
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
  /replication/id/{id}:
    delete:
      description: 'Delete a Replication Task with specific `id`


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
    put:
      description: 'Update a Replication Task with specific `id`


        See the documentation for `create` method for information on payload contents


        '
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
  /replication/id/{id}/restore:
    post:
      description: Create the opposite of replication task `id` (PULL if it was PUSH
        and vice versa).
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_restore_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/id/{id}/restore
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
  /replication/id/{id}/run:
    post:
      description: Run Replication Task of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_run'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/id/{id}/run
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
  /replication/list_datasets:
    post:
      description: 'List datasets on remote side


        Accepts `transport` and SSH credentials ID (for non-local transport)


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_list_datasets'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/list_datasets
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
  /replication/list_naming_schemas:
    get:
      description: List all naming schemas used in periodic snapshot and replication
        tasks.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/list_naming_schemas
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
  /replication/target_unmatched_snapshots:
    post:
      description: 'Check if target has any snapshots that do not exist on source.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_target_unmatched_snapshots'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /replication/target_unmatched_snapshots
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - replication
  /reporting:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /reporting
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - reporting
    put:
      description: 'Configure Reporting Database settings.


        If `cpu_in_percentage` is `true`, collectd reports CPU usage in percentage
        instead of "jiffies".


        `graphite` specifies a destination hostname or IP for collectd data sent by
        the Graphite plugin..


        `graphite_separateinstances` corresponds to collectd SeparateInstances option.


        `graph_age` specifies the maximum age of stored graphs in months. `graph_points`
        is the number of points for

        each hourly, daily, weekly, etc. graph. Changing these requires destroying
        the current reporting database,

        so when these fields are changed, an additional `confirm_rrd_destroy: true`
        flag must be present.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /reporting
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - reporting
  /reporting/clear:
    get:
      description: Clear reporting database.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /reporting/clear
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - reporting
  /reporting/get_data:
    post:
      description: 'Get reporting data for given graphs.


        List of possible graphs can be retrieved using `reporting.graphs` call.


        For the time period of the graph either `unit` and `page` OR `start` and `end`
        should be

        used, not both.


        `aggregate` will return aggregate available data for each graph (e.g. min,
        max, mean).


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting_get_data'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /reporting/get_data
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - reporting
  /reporting/graphs:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /reporting/graphs
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - reporting
  /route/ipv4gw_reachable:
    post:
      description: "Get the IPv4 gateway and verify if it is reachable by any interface.\n\
        \nReturns:\n    bool: True if the gateway is reachable or otherwise False."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route_ipv4gw_reachable_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /route/ipv4gw_reachable
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - route
  /route/system_routes:
    get:
      description: Get current/applied network routes.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /route/system_routes
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - route
  /rsyncd:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsyncd
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsyncd
    put:
      description: 'Update Rsyncd Service Configuration.


        `auxiliary` attribute can be used to pass on any additional parameters from
        rsyncd.conf(5).'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsyncd_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsyncd
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsyncd
  /rsyncmod:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsyncmod
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsyncmod
    post:
      description: 'Create a Rsyncmod module.


        `path` represents the path to a dataset. Path length is limited to 1023 characters
        maximum as per the limit

        enforced by FreeBSD. It is possible that we reach this max length recursively
        while transferring data. In that

        case, the user must ensure the maximum path will not be too long or modify
        the recursed path to shorter

        than the limit.


        `maxconn` is an integer value representing the maximum number of simultaneous
        connections. Zero represents

        unlimited.


        `hostsallow` is a list of patterns to match hostname/ip address of a connecting
        client. If list is empty,

        all hosts are allowed.


        `hostsdeny` is a list of patterns to match hostname/ip address of a connecting
        client. If the pattern is

        matched, access is denied to the client. If no client should be denied, this
        should be left empty.


        `auxiliary` attribute can be used to pass on any additional parameters from
        rsyncd.conf(5).'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsyncmod_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsyncmod
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsyncmod
  /rsyncmod/id/{id}:
    delete:
      description: Delete Rsyncmod module of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsyncmod/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsyncmod
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsyncmod/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsyncmod
    put:
      description: Update Rsyncmod module of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsyncmod_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsyncmod/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsyncmod
  /rsynctask:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsynctask
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsynctask
    post:
      description: 'Create a Rsync Task.


        See the comment in Rsyncmod about `path` length limits.


        `remotehost` is ip address or hostname of the remote system. If username differs
        on the remote host,

        "username@remote_host" format should be used.


        `mode` represents different operating mechanisms for Rsync i.e Rsync Module
        mode / Rsync SSH mode.


        `remotemodule` is the name of remote module, this attribute should be specified
        when `mode` is set to MODULE.


        `remotepath` specifies the path on the remote system.


        `validate_rpath` is a boolean which when sets validates the existence of the
        remote path.


        `direction` specifies if data should be PULLED or PUSHED from the remote system.


        `compress` when set reduces the size of the data which is to be transmitted.


        `archive` when set makes rsync run recursively, preserving symlinks, permissions,
        modification times, group,

        and special files.


        `delete` when set deletes files in the destination directory which do not
        exist in the source directory.


        `preserveperm` when set preserves original file permissions.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsynctask_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsynctask
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsynctask
  /rsynctask/id/{id}:
    delete:
      description: Delete Rsync Task of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsynctask/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsynctask
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsynctask/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsynctask
    put:
      description: Update Rsync Task of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsynctask_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsynctask/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsynctask
  /rsynctask/id/{id}/run:
    post:
      description: 'Job to run rsync task of `id`.


        Output is saved to job log excerpt (not syslog).'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsynctask_run'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /rsynctask/id/{id}/run
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - rsynctask
  /s3:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /s3
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - s3
    put:
      description: 'Update S3 Service Configuration.


        `access_key` must only contain alphanumeric characters and should be between
        5 and 20 characters.


        `secret_key` must only contain alphanumeric characters and should be between
        8 and 40 characters.


        `browser` when set, enables the web user interface for the S3 Service.


        `certificate` is a valid certificate id which exists in the system. This is
        used to enable secure

        S3 connections.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/s3_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /s3
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - s3
  /s3/bindip_choices:
    get:
      description: Return ip choices for S3 service to use.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /s3/bindip_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - s3
  /sensor/query:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sensor/query
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sensor
  /service:
    get:
      description: Query all system services with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /service
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - service
  /service/id/{id}:
    get:
      description: Query all system services with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /service/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - service
    put:
      description: 'Update service entry of `id_or_name`.


        Currently it only accepts `enable` option which means whether the

        service should start on boot.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /service/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - service
  /service/reload:
    post:
      description: Reload the service specified by `service`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_reload'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /service/reload
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - service
  /service/restart:
    post:
      description: Restart the service specified by `service`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_restart'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /service/restart
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - service
  /service/start:
    post:
      description: Start the service specified by `service`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_start'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /service/start
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - service
  /service/started:
    get:
      description: Test if service specified by `service` has been started.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /service/started
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - service
  /service/stop:
    post:
      description: Stop the service specified by `service`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_stop'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /service/stop
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - service
  /service/terminate_process:
    post:
      description: 'Terminate process by `pid`.


        First send `TERM` signal, then, if was not terminated in `timeout` seconds,
        send `KILL` signal.


        Returns `true` is process has been successfully terminated with `TERM` and
        `false` if we had to use `KILL`.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_terminate_process'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /service/terminate_process
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - service
  /sharing/afp:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/afp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.afp
    post:
      description: 'Create AFP share.


        `allow`, `deny`, `ro`, and `rw` are lists of users and groups. Groups are
        designated by

        an @ prefix.


        `hostsallow` and `hostsdeny` are lists of hosts and/or networks.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_afp_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/afp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.afp
  /sharing/afp/id/{id}:
    delete:
      description: Delete AFP share `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/afp/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.afp
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/afp/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.afp
    put:
      description: Update AFP share `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_afp_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/afp/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.afp
  /sharing/nfs:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/nfs
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.nfs
    post:
      description: 'Create a NFS Share.


        `paths` is a list of valid paths which are configured to be shared on this
        share.


        `networks` is a list of authorized networks that are allowed to access the
        share having format

        "network/mask" CIDR notation. If empty, all networks are allowed.


        `hosts` is a list of IP''s/hostnames which are allowed to access the share.
        If empty, all IP''s/hostnames are

        allowed.


        `alldirs` is a boolean value which when set indicates that the client can
        mount any subdirectories of the

        selected pool or dataset.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_nfs_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/nfs
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.nfs
  /sharing/nfs/human_identifier:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/nfs/human_identifier
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.nfs
  /sharing/nfs/id/{id}:
    delete:
      description: Delete NFS Share of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/nfs/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.nfs
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/nfs/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.nfs
    put:
      description: Update NFS Share of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_nfs_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/nfs/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.nfs
  /sharing/smb:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/smb
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.smb
    post:
      description: 'Create a SMB Share.


        `purpose` applies common configuration presets depending on intended purpose.


        `timemachine` when set, enables Time Machine backups for this share.


        `ro` when enabled, prohibits write access to the share.


        `guestok` when enabled, allows access to this share without a password.


        `hostsallow` is a list of hostnames / IP addresses which have access to this
        share.


        `hostsdeny` is a list of hostnames / IP addresses which are not allowed access
        to this share. If a handful

        of hostnames are to be only allowed access, `hostsdeny` can be passed "ALL"
        which means that it will deny

        access to ALL hostnames except for the ones which have been listed in `hostsallow`.


        `acl` enables support for storing the SMB Security Descriptor as a Filesystem
        ACL.


        `streams` enables support for storing alternate datastreams as filesystem
        extended attributes.


        `fsrvp` enables support for the filesystem remote VSS protocol. This allows
        clients to create

        ZFS snapshots through RPC.


        `shadowcopy` enables support for the volume shadow copy service.


        `auxsmbconf` is a string of additional smb4.conf parameters not covered by
        the system''s API.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_smb_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/smb
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.smb
  /sharing/smb/id/{id}:
    delete:
      description: 'Delete SMB Share of `id`. This will forcibly disconnect SMB clients

        that are accessing the share.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/smb/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.smb
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/smb/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.smb
    put:
      description: Update SMB Share of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_smb_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/smb/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.smb
  /sharing/smb/presets:
    get:
      description: 'Retrieve pre-defined configuration sets for specific use-cases.
        These parameter

        combinations are often non-obvious, but beneficial in these scenarios.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/smb/presets
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.smb
  /sharing/webdav:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/webdav
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.webdav
    post:
      description: 'Create a Webdav Share.


        `ro` when enabled prohibits users from writing to this share.


        `perm` when enabled automatically recursively changes the ownership of this
        share to

        webdav ( user and group both ).'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_webdav_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/webdav
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.webdav
  /sharing/webdav/id/{id}:
    delete:
      description: Update Webdav Share of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/webdav/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.webdav
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/webdav/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.webdav
    put:
      description: Update Webdav Share of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_webdav_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /sharing/webdav/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - sharing.webdav
  /smart:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smart
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smart
    put:
      description: 'Update SMART Service Configuration.


        `interval` is an integer value in minutes which defines how often smartd activates
        to check if any tests

        are configured to run.


        `critical`, `informational` and `difference` are integer values on which alerts
        for SMART are configured if

        the disks temperature crosses the assigned threshold for each respective attribute.
        They default to 0 which

        indicates they are disabled.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smart
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smart
  /smart/test:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smart/test
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smart.test
    post:
      description: 'Create a SMART Test Task.


        `disks` is a list of valid disks which should be monitored in this task.


        `type` is specified to represent the type of SMART test to be executed.


        `all_disks` when enabled sets the task to cover all disks in which case `disks`
        is not required.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_test_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smart/test
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smart.test
  /smart/test/disk_choices:
    post:
      description: 'Returns disk choices for S.M.A.R.T. test.


        `full_disk` will return full disk objects instead of just names.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_test_disk_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smart/test/disk_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smart.test
  /smart/test/id/{id}:
    delete:
      description: Delete SMART Test Task of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smart/test/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smart.test
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smart/test/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smart.test
    put:
      description: Update SMART Test Task of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_test_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smart/test/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smart.test
  /smart/test/manual_test:
    post:
      description: 'Run manual SMART tests for `disks`.


        `type` indicates what type of SMART test will be ran and must be specified.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_test_manual_test_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smart/test/manual_test
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smart.test
  /smart/test/results:
    get:
      description: 'Get disk(s) S.M.A.R.T. test(s) results.


        '
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smart/test/results
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smart.test
  /smb:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
    put:
      description: 'Update SMB Service Configuration.


        `netbiosname` defaults to the original hostname of the system.


        `workgroup` and `netbiosname` should have different values.


        `enable_smb1` allows legacy SMB clients to connect to the server when enabled.


        `localmaster` when set, determines if the system participates in a browser
        election.


        `domain_logons` is used to provide netlogin service for older Windows clients
        if enabled.


        `guest` attribute is specified to select the account to be used for guest
        access. It defaults to "nobody".


        `nullpw` when enabled allows the users to authorize access without a password.


        `hostlookup` when enabled, allows using hostnames rather then IP addresses
        in "hostsallow"/"hostsdeny" fields

        of SMB Shares.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
  /smb/bindip_choices:
    get:
      description: 'List of valid choices for IP addresses to which to bind the SMB
        service.

        Addresses assigned by DHCP are excluded from the results.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/bindip_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
  /smb/domain_choices:
    get:
      description: 'List of domains visible to winbindd. Returns empty list if winbindd
        is

        stopped.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/domain_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
  /smb/get_remote_acl:
    post:
      description: 'Retrieves an ACL from a remote SMB server.


        `server` IP Address or hostname of the remote server


        `share` Share name


        `path` path on the remote SMB server. Use "" to separate path components


        `username` username to use for authentication


        `password` password to use for authentication


        `use_kerberos` use credentials to get a kerberos ticket for authentication.

        AD only.


        `output_format` format for resulting ACL data. Choices are either ''SMB'',

        which will present the information as a Windows SD or ''LOCAL'', which formats

        the ACL information according local filesystem of the TrueNAS server.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_get_remote_acl_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/get_remote_acl
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
  /smb/groupmap_addmem:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/groupmap_addmem
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
  /smb/groupmap_listmem:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/groupmap_listmem
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
  /smb/json_check_version:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/json_check_version
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
  /smb/sharesec:
    get:
      description: Use query-filters to search the SMB share ACLs present on server.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/sharesec
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb.sharesec
    post:
      description: 'Update the ACL on a given SMB share. Will write changes to both

        /var/db/system/samba4/share_info.tdb and the configuration file.

        Since an SMB share will _always_ have an ACL present, there is little

        distinction between the `create` and `update` methods apart from arguments.


        `share_name` - name of SMB share.


        `share_acl` a list of ACL entries (dictionaries) with the following keys:


        `ae_who_sid` who the ACL entry applies to expressed as a Windows SID


        `ae_who_name` who the ACL entry applies to expressed as a name. `ae_who_name`
        is

        a dictionary containing the following keys: `domain` that the user is a member
        of,

        `name` username in the domain. The domain for local users is the netbios name
        of

        the FreeNAS server.


        `ae_perm` string representation of the permissions granted to the user or
        group.

        `FULL` grants read, write, execute, delete, write acl, and change owner.

        `CHANGE` grants read, write, execute, and delete.

        `READ` grants read and execute.


        `ae_type` can be ALLOWED or DENIED.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_sharesec_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/sharesec
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb.sharesec
  /smb/sharesec/getacl:
    post:
      description: 'View the ACL information for `share_name`. The share ACL is distinct
        from filesystem

        ACLs which can be viewed by calling `filesystem.getacl`. `ae_who_name` will
        appear

        as `None` if the SMB service is stopped or if winbind is unable  to resolve
        the SID

        to a name.


        If the `option` `resolve_sids` is set to `False` then the returned ACL will
        not

        contain names.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_sharesec_getacl'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/sharesec/getacl
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb.sharesec
  /smb/sharesec/id/{id}:
    delete:
      description: 'Replace share ACL for the specified SMB share with the samba default
        ACL of S-1-1-0/FULL

        (Everyone - Full Control). In this case, access will be fully determined

        by the underlying filesystem ACLs and smb4.conf parameters governing access
        control

        and permissions.

        Share can be deleted by name or numerical by numerical index.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/sharesec/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb.sharesec
    get:
      description: Use query-filters to search the SMB share ACLs present on server.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/sharesec/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb.sharesec
    put:
      description: 'Update the ACL on the share specified by the numerical index `id`.
        Will write changes

        to both /var/db/system/samba4/share_info.tdb and the configuration file.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_sharesec_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/sharesec/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb.sharesec
  /smb/sharesec/synchronize_acls:
    get:
      description: 'Synchronize the share ACL stored in the config database with Samba''s
        running

        configuration as reflected in the share_info.tdb file.


        The only situation in which the configuration stored in the database will

        overwrite samba''s running configuration is if share_info.tdb is empty. Samba

        fakes a single S-1-1-0:ALLOW/0x0/FULL entry in the absence of an entry for
        a

        share in share_info.tdb.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/sharesec/synchronize_acls
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb.sharesec
  /smb/status:
    post:
      description: 'Returns SMB server status (sessions, open files, locks, notifications).


        `info_level` type of information requests. Defaults to ALL.


        `status_options` additional options to filter query results. Supported

        values are as follows: `verbose` gives more verbose status output

        `fast` causes smbstatus to not check if the status data is valid by

        checking if the processes that the status data refer to all still

        exist. This speeds up execution on busy systems and clusters but

        might display stale data of processes that died without cleaning up

        properly. `restrict_user` specifies the limits results to the specified

        user.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_status'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/status
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
  /smb/unixcharset_choices:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/unixcharset_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
  /smb/update_payload_with_diff:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /smb/update_payload_with_diff
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - smb
  /snmp:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /snmp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - snmp
    put:
      description: 'Update SNMP Service Configuration.


        `v3` when set enables SNMP version 3.


        `v3_username`, `v3_authtype`, `v3_password`, `v3_privproto` and `v3_privpassphrase`
        are only used when `v3`

        is enabled.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snmp_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /snmp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - snmp
  /ssh:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ssh
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ssh
    put:
      description: 'Update settings of SSH daemon service.


        If `bindiface` is empty it will listen for all available addresses.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ssh_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ssh
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ssh
  /ssh/bindiface_choices:
    get:
      description: Available choices for the bindiface attribute of SSH service.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ssh/bindiface_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ssh
  /staticroute:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /staticroute
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - staticroute
    post:
      description: 'Create a Static Route.


        Address families of `gateway` and `destination` should match when creating
        a static route.


        `description` is an optional attribute for any notes regarding the static
        route.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/staticroute_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /staticroute
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - staticroute
  /staticroute/id/{id}:
    delete:
      description: Delete Static Route of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /staticroute/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - staticroute
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /staticroute/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - staticroute
    put:
      description: Update Static Route of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/staticroute_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /staticroute/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - staticroute
  /stats/get_data:
    post:
      description: Get data points from rrd files.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stats_get_data'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /stats/get_data
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - stats
  /stats/get_dataset_info:
    post:
      description: Returns info about a given dataset from some source.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stats_get_dataset_info'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /stats/get_dataset_info
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - stats
  /stats/get_sources:
    get:
      description: Returns an object with all available sources tried with metric
        datasets.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /stats/get_sources
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - stats
  /support:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /support
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - support
    put:
      description: Update Proactive Support settings.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/support_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /support
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - support
  /support/attach_ticket_max_size:
    get:
      description: Returns maximum uploaded file size for `support.attach_ticket`
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /support/attach_ticket_max_size
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - support
  /support/fetch_categories:
    post:
      description: 'Fetch issue categories using access token `token`.

        Returns a dict with the category name as a key and id as value.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/support_fetch_categories_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /support/fetch_categories
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - support
  /support/fields:
    get:
      description: Returns list of pairs of field names and field titles for Proactive
        Support.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /support/fields
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - support
  /support/is_available:
    get:
      description: Returns whether Proactive Support is available for this product
        type and current license.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /support/is_available
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - support
  /support/is_available_and_enabled:
    get:
      description: Returns whether Proactive Support is available and enabled.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /support/is_available_and_enabled
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - support
  /support/new_ticket:
    post:
      description: 'Creates a new ticket for support.

        This is done using the support proxy API.

        For FreeNAS it will be created on Redmine and for TrueNAS on SupportSuite.


        For FreeNAS `criticality`, `environment`, `phone`, `name` and `email` attributes
        are not required.

        For TrueNAS `username`, `password` and `type` attributes are not required.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/support_new_ticket_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /support/new_ticket
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - support
  /system/advanced:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/advanced
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.advanced
    put:
      description: 'Update System Advanced Service Configuration.


        `consolemenu` should be disabled if the menu at console is not desired. It
        will default to standard login

        in the console if disabled.


        `autotune` when enabled executes autotune script which attempts to optimize
        the system based on the installed

        hardware.


        When `syslogserver` is defined, logs of `sysloglevel` or above are sent.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_advanced_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/advanced
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.advanced
  /system/advanced/sed_global_password:
    get:
      description: Returns configured global SED password.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/advanced/sed_global_password
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.advanced
  /system/advanced/serial_port_choices:
    get:
      description: Get available choices for `serialport`.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/advanced/serial_port_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.advanced
  /system/boot_id:
    get:
      description: 'Returns an unique boot identifier.


        It is supposed to be unique every system boot.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/boot_id
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/environment:
    get:
      description: 'Return environment in which product is running. Possible values:

        - DEFAULT

        - EC2'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/environment
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/feature_enabled:
    post:
      description: Returns whether the `feature` is enabled or not
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_feature_enabled_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/feature_enabled
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/general:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
    put:
      description: 'Update System General Service Configuration.


        `ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate`
        is not configured on boot,

        it is automatically created by the system.


        `ui_httpsredirect` when set, makes sure that all HTTP requests are converted
        to HTTPS requests to better

        enhance security.


        `ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively
        which the system will

        listen on.


        `syslogserver` and `sysloglevel` are deprecated fields as of 11.3

        and will be permanently moved to system.advanced.update for 12.0'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_general_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/general/country_choices:
    get:
      description: Returns country choices.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/country_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/general/kbdmap_choices:
    get:
      description: Returns kbdmap choices.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/kbdmap_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/general/language_choices:
    get:
      description: Returns language choices.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/language_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/general/local_url:
    get:
      description: Returns configured local url in the format of protocol://host:port
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/local_url
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/general/timezone_choices:
    get:
      description: Returns time zone choices.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/timezone_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/general/ui_address_choices:
    get:
      description: Returns UI ipv4 address choices.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/ui_address_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/general/ui_certificate_choices:
    get:
      description: Return choices of certificates which can be used for `ui_certificate`.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/ui_certificate_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/general/ui_httpsprotocols_choices:
    get:
      description: Returns available HTTPS protocols.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/ui_httpsprotocols_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/general/ui_restart:
    get:
      description: 'Restart HTTP server to use latest UI settings.


        HTTP server will be restarted after `delay` seconds.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_general_ui_restart_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/ui_restart
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
    post:
      description: 'Restart HTTP server to use latest UI settings.


        HTTP server will be restarted after `delay` seconds.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_general_ui_restart_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/ui_restart
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/general/ui_v6address_choices:
    get:
      description: Returns UI ipv6 address choices.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/general/ui_v6address_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.general
  /system/host_id:
    get:
      description: 'Retrieve a hex string that is generated based

        on the contents of `/etc/hostid` file. This

        is a permanent value that persists across

        reboots/upgrades and can be used as a unique

        identifier for the machine.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/host_id
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/info:
    get:
      description: Returns basic system information.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/info
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/is_freenas:
    get:
      description: 'FreeNAS is now TrueNAS CORE.


        DEPRECATED: Use `system.product_type`'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/is_freenas
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/license_update:
    post:
      description: Update license file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_license_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/license_update
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/ntpserver:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/ntpserver
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.ntpserver
    post:
      description: 'Add an NTP Server.


        `address` specifies the hostname/IP address of the NTP server.


        `burst` when enabled makes sure that if server is reachable, sends a burst
        of eight packets instead of one.

        This is designed to improve timekeeping quality with the server command.


        `iburst` when enabled speeds up the initial synchronization, taking seconds
        rather than minutes.


        `prefer` marks the specified server as preferred. When all other things are
        equal, this host is chosen

        for synchronization acquisition with the server command. It is recommended
        that they be used for servers with

        time monitoring hardware.


        `minpoll` is minimum polling time in seconds. It must be a power of 2 and
        less than `maxpoll`.


        `maxpoll` is maximum polling time in seconds. It must be a power of 2 and
        greater than `minpoll`.


        `force` when enabled forces the addition of NTP server even if it is currently
        unreachable.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_ntpserver_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/ntpserver
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.ntpserver
  /system/ntpserver/id/{id}:
    delete:
      description: Delete NTP server of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/ntpserver/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.ntpserver
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/ntpserver/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.ntpserver
    put:
      description: Update NTP server of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_ntpserver_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/ntpserver/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.ntpserver
  /system/ntpserver/test_ntp_server:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/ntpserver/test_ntp_server
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system.ntpserver
  /system/product_name:
    get:
      description: Returns name of the product we are using.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/product_name
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/product_type:
    get:
      description: 'Returns the type of the product.


        CORE - TrueNAS Core, community version

        ENTERPRISE - TrueNAS Enterprise, appliance version

        SCALE - TrueNAS SCALE'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/product_type
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/ready:
    get:
      description: Returns whether the system completed boot and is ready to use
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/ready
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/reboot:
    post:
      description: 'Reboots the operating system.


        Emits an "added" event of name "system" and id "reboot".'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_reboot_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/reboot
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/shutdown:
    post:
      description: 'Shuts down the operating system.


        An "added" event of name "system" and id "shutdown" is emitted when shutdown
        is initiated.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_shutdown_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/shutdown
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/state:
    get:
      description: 'Returns system state:

        "BOOTING" - System is booting

        "READY" - System completed boot and is ready to use

        "SHUTTING_DOWN" - System is shutting down'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/state
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /system/version:
    get:
      description: Returns software version of the system.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /system/version
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - system
  /systemdataset:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /systemdataset
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - systemdataset
    put:
      description: 'Update System Dataset Service Configuration.


        `pool` is the name of a valid pool configured in the system which will be
        used to host the system dataset.


        `pool_exclude` can be specified to make sure that we don''t place the system
        dataset on that pool if `pool`

        is not provided.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/systemdataset_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /systemdataset
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - systemdataset
  /tftp:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /tftp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - tftp
    put:
      description: 'Update TFTP Service Configuration.


        `newfiles` when set enables network devices to send files to the system.


        `username` sets the user account which will be used to access `directory`.
        It should be ensured `username`

        has access to `directory`.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tftp_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /tftp
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - tftp
  /truecommand:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /truecommand
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - truecommand
    put:
      description: 'Update Truecommand service settings.


        `api_key` is a valid API key generated by iX Portal.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/truecommand_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /truecommand
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - truecommand
  /truenas/accept_eula:
    get:
      description: Accept TrueNAS EULA.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /truenas/accept_eula
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - truenas
  /truenas/get_chassis_hardware:
    get:
      description: Returns what type of hardware this is, detected from dmidecode
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /truenas/get_chassis_hardware
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - truenas
  /truenas/get_customer_information:
    get:
      description: Returns stored customer information.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /truenas/get_customer_information
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - truenas
  /truenas/get_eula:
    get:
      description: Returns the TrueNAS End-User License Agreement (EULA).
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /truenas/get_eula
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - truenas
  /truenas/is_eula_accepted:
    get:
      description: Returns whether the EULA is accepted or not.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /truenas/is_eula_accepted
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - truenas
  /truenas/is_production:
    get:
      description: Returns if system is marked as production.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /truenas/is_production
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - truenas
  /truenas/set_production:
    post:
      description: Sets system production state and optionally sends initial debug.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/truenas_set_production'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /truenas/set_production
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - truenas
  /truenas/update_customer_information:
    post:
      description: Updates customer information.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/truenas_update_customer_information_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /truenas/update_customer_information
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - truenas
  /tunable:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /tunable
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - tunable
    post:
      description: 'Create a Tunable.


        `var` represents name of the sysctl/loader/rc variable.


        `type` for SCALE should be one of the following:

        1) SYSCTL     -     Configure `var` for sysctl(8)


        `type` for CORE/ENTERPRISE should be one of the following:

        1) LOADER     -     Configure `var` for loader(8)

        2) RC         -     Configure `var` for rc(8)

        3) SYSCTL     -     Configure `var` for sysctl(8)'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tunable_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /tunable
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - tunable
  /tunable/id/{id}:
    delete:
      description: Delete Tunable of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /tunable/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - tunable
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /tunable/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - tunable
    put:
      description: Update Tunable of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tunable_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /tunable/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - tunable
  /tunable/tunable_type_choices:
    get:
      description: Retrieve tunable type choices supported in the system
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /tunable/tunable_type_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - tunable
  /update/check_available:
    post:
      description: "Checks if there is an update available from update server.\n\n\
        status:\n  - REBOOT_REQUIRED: an update has already been applied\n  - AVAILABLE:\
        \ an update is available\n  - UNAVAILABLE: no update available\n  - HA_UNAVAILABLE:\
        \ HA is non-functional\n\n"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_check_available_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /update/check_available
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - update
  /update/download:
    get:
      description: Download updates using selected train.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /update/download
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - update
  /update/get_auto_download:
    get:
      description: Returns if update auto-download is enabled.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /update/get_auto_download
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - update
  /update/get_pending:
    post:
      description: "Gets a list of packages already downloaded and ready to be applied.\n\
        Each entry of the lists consists of type of operation and name of it, e.g.\n\
        \n  {\n    \"operation\": \"upgrade\",\n    \"name\": \"baseos-11.0 -> baseos-11.1\"\
        \n  }"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_get_pending_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /update/get_pending
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - update
  /update/get_trains:
    get:
      description: 'Returns available trains dict and the currently configured train
        as well as the

        train of currently booted environment.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /update/get_trains
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - update
  /update/manual:
    post:
      description: Apply manual update of file `path`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_manual_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /update/manual
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - update
  /update/set_auto_download:
    post:
      description: Sets if update auto-download is enabled.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_set_auto_download_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /update/set_auto_download
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - update
  /update/set_train:
    post:
      description: Set an update train to be used by default in updates.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_set_train_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /update/set_train
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - update
  /update/update:
    post:
      description: Downloads (if not already in cache) and apply an update.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /update/update
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - update
  /ups:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ups
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ups
    put:
      description: 'Update UPS Service Configuration.


        `emailnotify` when enabled, sends out notifications of different UPS events
        via email.


        `powerdown` when enabled, sets UPS to power off after shutting down the system.


        `nocommwarntime` is a value in seconds which makes UPS Service wait the specified
        seconds before alerting that

        the Service cannot reach configured UPS.


        `shutdowntimer` is a value in seconds which tells the Service to wait specified
        seconds for the UPS before

        initiating a shutdown. This only applies when `shutdown` is set to "BATT".


        `shutdowncmd` is the command which is executed to initiate a shutdown. It
        defaults to "poweroff".


        `toemail` is a list of valid email id''s on which notification emails are
        sent.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ups_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ups
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ups
  /ups/driver_choices:
    get:
      description: Returns choices of UPS drivers supported by the system.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ups/driver_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ups
  /ups/port_choices:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /ups/port_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - ups
  /user:
    get:
      description: 'Query users with `query-filters` and `query-options`. As a performance
        optimization, only local users

        will be queried by default.


        Users from directory services such as NIS, LDAP, or Active Directory will
        be included in query results

        if the option `{''extra'': {''search_dscache'': True}}` is specified.'
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
    post:
      description: 'Create a new user.


        If `uid` is not provided it is automatically filled with the next one available.


        `group` is required if `group_create` is false.


        `password` is required if `password_disabled` is false.


        Available choices for `shell` can be retrieved with `user.shell_choices`.


        `attributes` is a general-purpose object for storing arbitrary user information.


        `smb` specifies whether the user should be allowed access to SMB shares. User

        willl also automatically be added to the `builtin_users` group.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
  /user/get_next_uid:
    get:
      description: Get the next available/free uid.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user/get_next_uid
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
  /user/get_user_obj:
    post:
      description: 'Returns dictionary containing information from struct passwd for
        the user specified by either

        the username or uid. Bypasses user cache.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_get_user_obj_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user/get_user_obj
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
  /user/has_root_password:
    get:
      description: 'Return whether the root user has a valid password set.


        This is used when the system is installed without a password and must be set
        on

        first use/login.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user/has_root_password
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
  /user/id/{id}:
    delete:
      description: 'Delete user `id`.


        The `delete_group` option deletes the user primary group if it is not being
        used by

        any other user.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
    get:
      description: 'Query users with `query-filters` and `query-options`. As a performance
        optimization, only local users

        will be queried by default.


        Users from directory services such as NIS, LDAP, or Active Directory will
        be included in query results

        if the option `{''extra'': {''search_dscache'': True}}` is specified.'
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
    put:
      description: Update attributes of an existing user.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
  /user/id/{id}/pop_attribute:
    post:
      description: Remove user general purpose `attributes` dictionary `key`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_pop_attribute_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user/id/{id}/pop_attribute
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
  /user/id/{id}/set_attribute:
    post:
      description: 'Set user general purpose `attributes` dictionary `key` to `value`.


        e.g. Setting key="foo" value="var" will result in {"attributes": {"foo": "bar"}}'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_set_attribute'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user/id/{id}/set_attribute
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
  /user/shell_choices:
    post:
      description: 'Return the available shell choices to be used in `user.create`
        and `user.update`.


        If `user_id` is provided, shell choices are filtered to ensure the user can
        access the shell choices provided.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_shell_choices_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /user/shell_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - user
  /vm:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
    post:
      description: 'Create a Virtual Machine (VM).


        `grubconfig` may either be a path for the grub.cfg file or the actual content

        of the file to be used with GRUB bootloader.


        `devices` is a list of virtualized hardware to add to the newly created Virtual
        Machine.

        Failure to attach a device destroys the VM and any resources allocated by
        the VM devices.


        Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU
        is configured as a

        separate package. Multiple cores can be configured per CPU by specifying `cores`
        attributes.

        `vcpus` specifies total number of CPU sockets. `cores` specifies number of
        cores per socket. `threads`

        specifies number of threads per core.


        `shutdown_timeout` indicates the time in seconds the system waits for the
        VM to cleanly shutdown. During system

        shutdown, if the VM hasn''t exited after a hardware shutdown signal has been
        sent by the system within

        `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/device:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/device
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm.device
    post:
      description: 'Create a new device for the VM of id `vm`.


        If `dtype` is the `RAW` type and a new raw file is to be created, `attributes.exists`
        will be passed as false.

        This means the API handles creating the raw file and raises the appropriate
        exception if file creation fails.


        If `dtype` is of `DISK` type and a new Zvol is to be created, `attributes.create_zvol`
        will be passed as

        true with valid `attributes.zvol_name` and `attributes.zvol_volsize` values.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_device_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/device
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm.device
  /vm/device/id/{id}:
    delete:
      description: Delete a VM device of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_device_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/device/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm.device
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/device/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm.device
    put:
      description: 'Update a VM device of `id`.


        Pass `attributes.size` to resize a `dtype` `RAW` device. The raw file will
        be resized.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_device_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/device/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm.device
  /vm/device/nic_attach_choices:
    get:
      description: Available choices for NIC Attach attribute.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/device/nic_attach_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm.device
  /vm/device/pptdev_choices:
    get:
      description: Available choices for PCI passthru device.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/device/pptdev_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm.device
  /vm/device/vnc_bind_choices:
    get:
      description: Available choices for VNC Bind attribute.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/device/vnc_bind_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm.device
  /vm/flags:
    get:
      description: Returns a dictionary with CPU flags for bhyve.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/flags
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/get_attached_iface:
    post:
      description: "Get the attached physical interfaces from a given guest.\n\nReturns:\n\
        \    list: will return a list with all attached phisycal interfaces or otherwise\
        \ False."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_get_attached_iface_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/get_attached_iface
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/get_available_memory:
    post:
      description: 'Get the current maximum amount of available memory to be allocated
        for VMs.


        If `overcommit` is true only the current used memory of running VMs will be
        accounted for.

        If false all memory (including unused) of runnings VMs will be accounted for.


        This will include memory shrinking ZFS ARC to the minimum.


        Memory is of course a very "volatile" resource, values may change abruptly
        between a

        second but I deem it good enough to give the user a clue about how much memory
        is

        available at the current moment and if a VM should be allowed to be launched.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_get_available_memory_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/get_available_memory
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/get_console:
    post:
      description: "Get the console device from a given guest.\n\nReturns:\n    str:\
        \ with the device path or False."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_get_console_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/get_console
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/get_vmemory_in_use:
    get:
      description: "The total amount of virtual memory in MB used by guests\n\n  \
        \  Returns a dict with the following information:\n        RNP - Running but\
        \ not provisioned\n        PRD - Provisioned but not running\n        RPRD\
        \ - Running and provisioned"
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/get_vmemory_in_use
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/get_vnc:
    post:
      description: "Get the vnc devices from a given guest.\n\nReturns:\n    list(dict):\
        \ with all attributes of the vnc device or an empty list."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_get_vnc_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/get_vnc
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/get_vnc_ipv4:
    get:
      description: "Get all available IPv4 address in the system.\n\nReturns:\n  \
        \ list: will return a list of available IPv4 address."
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/get_vnc_ipv4
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/id/{id}:
    delete:
      description: Delete a VM.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
    put:
      description: "Update all information of a specific VM.\n\n`devices` is a list\
        \ of virtualized hardware to attach to the virtual machine. If `devices` is\
        \ not present,\nno change is made to devices. If either the device list order\
        \ or data stored by the device changes when the\nattribute is passed, these\
        \ actions are taken:\n\n1) If there is no device in the `devices` list which\
        \ was previously attached to the VM, that device is\n   removed from the virtual\
        \ machine.\n2) Devices are updated in the `devices` list when they contain\
        \ a valid `id` attribute that corresponds to\n   an existing device.\n3) Devices\
        \ that do not have an `id` attribute are created and attached to `id` VM."
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/id/{id}/clone:
    post:
      description: 'Clone the VM `id`.


        `name` is an optional parameter for the cloned VM.

        If not provided it will append the next number available to the VM name.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_clone_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/id/{id}/clone
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/id/{id}/poweroff:
    post:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_poweroff'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/id/{id}/poweroff
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/id/{id}/restart:
    post:
      description: Restart a VM.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_restart'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/id/{id}/restart
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/id/{id}/start:
    post:
      description: "Start a VM.\n\noptions.overcommit defaults to false, meaning VMs\
        \ are not allowed to\nstart if there is not enough available memory to hold\
        \ all configured VMs.\nIf true, VM starts even if there is not enough memory\
        \ for all configured VMs.\n\nError codes:\n\n    ENOMEM(12): not enough free\
        \ memory to run the VM without overcommit"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_start_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/id/{id}/start
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/id/{id}/status:
    post:
      description: "Get the status of a VM.\n\nReturns a dict:\n    - state, RUNNING\
        \ or STOPPED\n    - pid, process id if RUNNING"
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_status'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/id/{id}/status
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/id/{id}/stop:
    post:
      description: 'Stops a VM.


        For unresponsive guests who have exceeded the `shutdown_timeout` defined by
        the user and have become

        unresponsive, they required to be powered down using `vm.poweroff`. `vm.stop`
        is only going to send a

        shutdown signal to the guest and wait the desired `shutdown_timeout` value
        before tearing down guest vmemory.


        `force_after_timeout` when supplied, it will initiate poweroff for the VM
        forcing it to exit if it has

        not already stopped within the specified `shutdown_timeout`.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_stop_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/id/{id}/stop
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/identify_hypervisor:
    get:
      description: "Identify Hypervisors that might work nested with bhyve.\n\nReturns:\n\
        \        bool: True if compatible otherwise False."
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/identify_hypervisor
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/random_mac:
    get:
      description: "Create a random mac address.\n\nReturns:\n    str: with six groups\
        \ of two hexadecimal digits"
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/random_mac
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vm/vnc_port_wizard:
    get:
      description: 'It returns the next available VNC PORT and WEB VNC PORT.


        Returns a dict with two keys vnc_port and vnc_web.'
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vm/vnc_port_wizard
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vm
  /vmware:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vmware
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vmware
    post:
      description: 'Create VMWare snapshot.


        `hostname` is a valid IP address / hostname of a VMWare host. When clustering,
        this is the vCenter server for

        the cluster.


        `username` and `password` are the credentials used to authorize access to
        the VMWare host.


        `datastore` is a valid datastore name which exists on the VMWare host.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vmware
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vmware
  /vmware/dataset_has_vms:
    post:
      description: Returns "true" if `dataset` is configured with a VMWare snapshot
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_dataset_has_vms'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vmware/dataset_has_vms
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vmware
  /vmware/get_datastores:
    post:
      description: Get datastores from VMWare.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_get_datastores_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vmware/get_datastores
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vmware
  /vmware/get_virtual_machines:
    post:
      description: Returns Virtual Machines on the VMWare host identified by `pk`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_get_virtual_machines_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vmware/get_virtual_machines
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vmware
  /vmware/id/{id}:
    delete:
      description: Delete VMWare snapshot of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vmware/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vmware
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vmware/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vmware
    put:
      description: Update VMWare snapshot of `id`.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_update_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vmware/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vmware
  /vmware/match_datastores_with_datasets:
    post:
      description: 'Requests datastores from vCenter server and tries to match them
        with local filesystems.


        Returns a list of datastores, a list of local filesystems and guessed relationship
        between them.


        '
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_match_datastores_with_datasets_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /vmware/match_datastores_with_datasets
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - vmware
  /webdav:
    get:
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /webdav
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - webdav
    put:
      description: 'Update Webdav Service Configuration.


        `protocol` specifies which protocol should be used for connecting to Webdav
        Serivce. Value of "HTTPHTTPS"

        allows both HTTP and HTTPS connections to the share.


        `certssl` is a valid id of a certificate configured in the system. This is
        required if HTTPS connection is

        desired with Webdave Service.


        There are 3 types of Authentication supported with Webdav:

        1) NONE      -   No authentication is required

        2) BASIC     -   Password is sent over the network as plaintext

        3) DIGEST    -   Hash of the password is sent over the network


        `htauth` should be one of the valid types described above.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webdav_update_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /webdav
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - webdav
  /webdav/cert_choices:
    get:
      description: Permitted certificate choices for webdav service.
      parameters: []
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /webdav/cert_choices
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - webdav
  /webui/image:
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /webui/image
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - webui.image
  /webui/image/id/{id}:
    delete:
      description: Remove the database entry, and then the item if it exists
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /webui/image/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - webui.image
    get:
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /webui/image/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - webui.image
  /zfs/snapshot:
    get:
      description: Query all ZFS Snapshots with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /zfs/snapshot
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - zfs.snapshot
    post:
      description: Take a snapshot from a given dataset.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_create_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /zfs/snapshot
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - zfs.snapshot
  /zfs/snapshot/clone:
    post:
      description: "Clone a given snapshot to a new dataset.\n\nReturns:\n    bool:\
        \ True if succeed otherwise False."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_clone_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /zfs/snapshot/clone
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - zfs.snapshot
  /zfs/snapshot/id/{id}:
    delete:
      description: 'Delete snapshot of name `id`.


        `options.defer` will defer the deletion of snapshot.'
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_delete_1'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /zfs/snapshot/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - zfs.snapshot
    get:
      description: Query all ZFS Snapshots with `query-filters` and `query-options`.
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: count
        required: false
        schema:
          type: boolean
      - in: query
        name: sort
        required: false
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /zfs/snapshot/id/{id}
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - zfs.snapshot
  /zfs/snapshot/remove:
    post:
      description: "Remove a snapshot from a given dataset.\n\nReturns:\n    bool:\
        \ True if succeed otherwise False."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_remove_0'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /zfs/snapshot/remove
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - zfs.snapshot
  /zfs/snapshot/rollback:
    post:
      description: 'Rollback to a given snapshot `id`.


        `options.recursive` will destroy any snapshots and bookmarks more recent than
        the one

        specified.


        `options.recursive_clones` is just like `recursive` but will also destroy
        any clones.


        `options.force` will force unmount of any clones.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_rollback'
      responses:
        '200':
          content:
            'application/json:':
              schema:
                $ref: '#/components/responses/Success'
          description: placeholder for /zfs/snapshot/rollback
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - zfs.snapshot
security:
- basic: []
servers:
- url: http://10.234.27.190/api/v2.0
