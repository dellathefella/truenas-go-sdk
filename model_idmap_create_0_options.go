/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// IdmapCreate0Options struct for IdmapCreate0Options
type IdmapCreate0Options struct {
	SchemaMode         *string `json:"schema_mode,omitempty"`
	UnixPrimaryGroup   *bool   `json:"unix_primary_group,omitempty"`
	UnixNssInfo        *bool   `json:"unix_nss_info,omitempty"`
	Rangesize          *int32  `json:"rangesize,omitempty"`
	Readonly           *bool   `json:"readonly,omitempty"`
	IgnoreBuiltin      *bool   `json:"ignore_builtin,omitempty"`
	LdapBaseDn         *string `json:"ldap_base_dn,omitempty"`
	LdapUserDn         *string `json:"ldap_user_dn,omitempty"`
	LdapUserDnPassword *string `json:"ldap_user_dn_password,omitempty"`
	LdapUrl            *string `json:"ldap_url,omitempty"`
	Ssl                *string `json:"ssl,omitempty"`
	LinkedService      *string `json:"linked_service,omitempty"`
	LdapServer         *string `json:"ldap_server,omitempty"`
	LdapRealm          *bool   `json:"ldap_realm,omitempty"`
	BindPathUser       *string `json:"bind_path_user,omitempty"`
	BindPathGroup      *string `json:"bind_path_group,omitempty"`
	UserCn             *bool   `json:"user_cn,omitempty"`
	CnRealm            *string `json:"cn_realm,omitempty"`
	LdapDomain         *string `json:"ldap_domain,omitempty"`
	SssdCompat         *bool   `json:"sssd_compat,omitempty"`
}

// NewIdmapCreate0Options instantiates a new IdmapCreate0Options object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdmapCreate0Options() *IdmapCreate0Options {
	this := IdmapCreate0Options{}
	return &this
}

// NewIdmapCreate0OptionsWithDefaults instantiates a new IdmapCreate0Options object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdmapCreate0OptionsWithDefaults() *IdmapCreate0Options {
	this := IdmapCreate0Options{}
	return &this
}

// GetSchemaMode returns the SchemaMode field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetSchemaMode() string {
	if o == nil || o.SchemaMode == nil {
		var ret string
		return ret
	}
	return *o.SchemaMode
}

// GetSchemaModeOk returns a tuple with the SchemaMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetSchemaModeOk() (*string, bool) {
	if o == nil || o.SchemaMode == nil {
		return nil, false
	}
	return o.SchemaMode, true
}

// HasSchemaMode returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasSchemaMode() bool {
	if o != nil && o.SchemaMode != nil {
		return true
	}

	return false
}

// SetSchemaMode gets a reference to the given string and assigns it to the SchemaMode field.
func (o *IdmapCreate0Options) SetSchemaMode(v string) {
	o.SchemaMode = &v
}

// GetUnixPrimaryGroup returns the UnixPrimaryGroup field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetUnixPrimaryGroup() bool {
	if o == nil || o.UnixPrimaryGroup == nil {
		var ret bool
		return ret
	}
	return *o.UnixPrimaryGroup
}

// GetUnixPrimaryGroupOk returns a tuple with the UnixPrimaryGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetUnixPrimaryGroupOk() (*bool, bool) {
	if o == nil || o.UnixPrimaryGroup == nil {
		return nil, false
	}
	return o.UnixPrimaryGroup, true
}

// HasUnixPrimaryGroup returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasUnixPrimaryGroup() bool {
	if o != nil && o.UnixPrimaryGroup != nil {
		return true
	}

	return false
}

// SetUnixPrimaryGroup gets a reference to the given bool and assigns it to the UnixPrimaryGroup field.
func (o *IdmapCreate0Options) SetUnixPrimaryGroup(v bool) {
	o.UnixPrimaryGroup = &v
}

// GetUnixNssInfo returns the UnixNssInfo field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetUnixNssInfo() bool {
	if o == nil || o.UnixNssInfo == nil {
		var ret bool
		return ret
	}
	return *o.UnixNssInfo
}

// GetUnixNssInfoOk returns a tuple with the UnixNssInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetUnixNssInfoOk() (*bool, bool) {
	if o == nil || o.UnixNssInfo == nil {
		return nil, false
	}
	return o.UnixNssInfo, true
}

// HasUnixNssInfo returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasUnixNssInfo() bool {
	if o != nil && o.UnixNssInfo != nil {
		return true
	}

	return false
}

// SetUnixNssInfo gets a reference to the given bool and assigns it to the UnixNssInfo field.
func (o *IdmapCreate0Options) SetUnixNssInfo(v bool) {
	o.UnixNssInfo = &v
}

// GetRangesize returns the Rangesize field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetRangesize() int32 {
	if o == nil || o.Rangesize == nil {
		var ret int32
		return ret
	}
	return *o.Rangesize
}

// GetRangesizeOk returns a tuple with the Rangesize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetRangesizeOk() (*int32, bool) {
	if o == nil || o.Rangesize == nil {
		return nil, false
	}
	return o.Rangesize, true
}

// HasRangesize returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasRangesize() bool {
	if o != nil && o.Rangesize != nil {
		return true
	}

	return false
}

// SetRangesize gets a reference to the given int32 and assigns it to the Rangesize field.
func (o *IdmapCreate0Options) SetRangesize(v int32) {
	o.Rangesize = &v
}

// GetReadonly returns the Readonly field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetReadonly() bool {
	if o == nil || o.Readonly == nil {
		var ret bool
		return ret
	}
	return *o.Readonly
}

// GetReadonlyOk returns a tuple with the Readonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetReadonlyOk() (*bool, bool) {
	if o == nil || o.Readonly == nil {
		return nil, false
	}
	return o.Readonly, true
}

// HasReadonly returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasReadonly() bool {
	if o != nil && o.Readonly != nil {
		return true
	}

	return false
}

// SetReadonly gets a reference to the given bool and assigns it to the Readonly field.
func (o *IdmapCreate0Options) SetReadonly(v bool) {
	o.Readonly = &v
}

// GetIgnoreBuiltin returns the IgnoreBuiltin field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetIgnoreBuiltin() bool {
	if o == nil || o.IgnoreBuiltin == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreBuiltin
}

// GetIgnoreBuiltinOk returns a tuple with the IgnoreBuiltin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetIgnoreBuiltinOk() (*bool, bool) {
	if o == nil || o.IgnoreBuiltin == nil {
		return nil, false
	}
	return o.IgnoreBuiltin, true
}

// HasIgnoreBuiltin returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasIgnoreBuiltin() bool {
	if o != nil && o.IgnoreBuiltin != nil {
		return true
	}

	return false
}

// SetIgnoreBuiltin gets a reference to the given bool and assigns it to the IgnoreBuiltin field.
func (o *IdmapCreate0Options) SetIgnoreBuiltin(v bool) {
	o.IgnoreBuiltin = &v
}

// GetLdapBaseDn returns the LdapBaseDn field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetLdapBaseDn() string {
	if o == nil || o.LdapBaseDn == nil {
		var ret string
		return ret
	}
	return *o.LdapBaseDn
}

// GetLdapBaseDnOk returns a tuple with the LdapBaseDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetLdapBaseDnOk() (*string, bool) {
	if o == nil || o.LdapBaseDn == nil {
		return nil, false
	}
	return o.LdapBaseDn, true
}

// HasLdapBaseDn returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasLdapBaseDn() bool {
	if o != nil && o.LdapBaseDn != nil {
		return true
	}

	return false
}

// SetLdapBaseDn gets a reference to the given string and assigns it to the LdapBaseDn field.
func (o *IdmapCreate0Options) SetLdapBaseDn(v string) {
	o.LdapBaseDn = &v
}

// GetLdapUserDn returns the LdapUserDn field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetLdapUserDn() string {
	if o == nil || o.LdapUserDn == nil {
		var ret string
		return ret
	}
	return *o.LdapUserDn
}

// GetLdapUserDnOk returns a tuple with the LdapUserDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetLdapUserDnOk() (*string, bool) {
	if o == nil || o.LdapUserDn == nil {
		return nil, false
	}
	return o.LdapUserDn, true
}

// HasLdapUserDn returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasLdapUserDn() bool {
	if o != nil && o.LdapUserDn != nil {
		return true
	}

	return false
}

// SetLdapUserDn gets a reference to the given string and assigns it to the LdapUserDn field.
func (o *IdmapCreate0Options) SetLdapUserDn(v string) {
	o.LdapUserDn = &v
}

// GetLdapUserDnPassword returns the LdapUserDnPassword field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetLdapUserDnPassword() string {
	if o == nil || o.LdapUserDnPassword == nil {
		var ret string
		return ret
	}
	return *o.LdapUserDnPassword
}

// GetLdapUserDnPasswordOk returns a tuple with the LdapUserDnPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetLdapUserDnPasswordOk() (*string, bool) {
	if o == nil || o.LdapUserDnPassword == nil {
		return nil, false
	}
	return o.LdapUserDnPassword, true
}

// HasLdapUserDnPassword returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasLdapUserDnPassword() bool {
	if o != nil && o.LdapUserDnPassword != nil {
		return true
	}

	return false
}

// SetLdapUserDnPassword gets a reference to the given string and assigns it to the LdapUserDnPassword field.
func (o *IdmapCreate0Options) SetLdapUserDnPassword(v string) {
	o.LdapUserDnPassword = &v
}

// GetLdapUrl returns the LdapUrl field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetLdapUrl() string {
	if o == nil || o.LdapUrl == nil {
		var ret string
		return ret
	}
	return *o.LdapUrl
}

// GetLdapUrlOk returns a tuple with the LdapUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetLdapUrlOk() (*string, bool) {
	if o == nil || o.LdapUrl == nil {
		return nil, false
	}
	return o.LdapUrl, true
}

// HasLdapUrl returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasLdapUrl() bool {
	if o != nil && o.LdapUrl != nil {
		return true
	}

	return false
}

// SetLdapUrl gets a reference to the given string and assigns it to the LdapUrl field.
func (o *IdmapCreate0Options) SetLdapUrl(v string) {
	o.LdapUrl = &v
}

// GetSsl returns the Ssl field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetSsl() string {
	if o == nil || o.Ssl == nil {
		var ret string
		return ret
	}
	return *o.Ssl
}

// GetSslOk returns a tuple with the Ssl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetSslOk() (*string, bool) {
	if o == nil || o.Ssl == nil {
		return nil, false
	}
	return o.Ssl, true
}

// HasSsl returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasSsl() bool {
	if o != nil && o.Ssl != nil {
		return true
	}

	return false
}

// SetSsl gets a reference to the given string and assigns it to the Ssl field.
func (o *IdmapCreate0Options) SetSsl(v string) {
	o.Ssl = &v
}

// GetLinkedService returns the LinkedService field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetLinkedService() string {
	if o == nil || o.LinkedService == nil {
		var ret string
		return ret
	}
	return *o.LinkedService
}

// GetLinkedServiceOk returns a tuple with the LinkedService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetLinkedServiceOk() (*string, bool) {
	if o == nil || o.LinkedService == nil {
		return nil, false
	}
	return o.LinkedService, true
}

// HasLinkedService returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasLinkedService() bool {
	if o != nil && o.LinkedService != nil {
		return true
	}

	return false
}

// SetLinkedService gets a reference to the given string and assigns it to the LinkedService field.
func (o *IdmapCreate0Options) SetLinkedService(v string) {
	o.LinkedService = &v
}

// GetLdapServer returns the LdapServer field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetLdapServer() string {
	if o == nil || o.LdapServer == nil {
		var ret string
		return ret
	}
	return *o.LdapServer
}

// GetLdapServerOk returns a tuple with the LdapServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetLdapServerOk() (*string, bool) {
	if o == nil || o.LdapServer == nil {
		return nil, false
	}
	return o.LdapServer, true
}

// HasLdapServer returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasLdapServer() bool {
	if o != nil && o.LdapServer != nil {
		return true
	}

	return false
}

// SetLdapServer gets a reference to the given string and assigns it to the LdapServer field.
func (o *IdmapCreate0Options) SetLdapServer(v string) {
	o.LdapServer = &v
}

// GetLdapRealm returns the LdapRealm field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetLdapRealm() bool {
	if o == nil || o.LdapRealm == nil {
		var ret bool
		return ret
	}
	return *o.LdapRealm
}

// GetLdapRealmOk returns a tuple with the LdapRealm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetLdapRealmOk() (*bool, bool) {
	if o == nil || o.LdapRealm == nil {
		return nil, false
	}
	return o.LdapRealm, true
}

// HasLdapRealm returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasLdapRealm() bool {
	if o != nil && o.LdapRealm != nil {
		return true
	}

	return false
}

// SetLdapRealm gets a reference to the given bool and assigns it to the LdapRealm field.
func (o *IdmapCreate0Options) SetLdapRealm(v bool) {
	o.LdapRealm = &v
}

// GetBindPathUser returns the BindPathUser field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetBindPathUser() string {
	if o == nil || o.BindPathUser == nil {
		var ret string
		return ret
	}
	return *o.BindPathUser
}

// GetBindPathUserOk returns a tuple with the BindPathUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetBindPathUserOk() (*string, bool) {
	if o == nil || o.BindPathUser == nil {
		return nil, false
	}
	return o.BindPathUser, true
}

// HasBindPathUser returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasBindPathUser() bool {
	if o != nil && o.BindPathUser != nil {
		return true
	}

	return false
}

// SetBindPathUser gets a reference to the given string and assigns it to the BindPathUser field.
func (o *IdmapCreate0Options) SetBindPathUser(v string) {
	o.BindPathUser = &v
}

// GetBindPathGroup returns the BindPathGroup field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetBindPathGroup() string {
	if o == nil || o.BindPathGroup == nil {
		var ret string
		return ret
	}
	return *o.BindPathGroup
}

// GetBindPathGroupOk returns a tuple with the BindPathGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetBindPathGroupOk() (*string, bool) {
	if o == nil || o.BindPathGroup == nil {
		return nil, false
	}
	return o.BindPathGroup, true
}

// HasBindPathGroup returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasBindPathGroup() bool {
	if o != nil && o.BindPathGroup != nil {
		return true
	}

	return false
}

// SetBindPathGroup gets a reference to the given string and assigns it to the BindPathGroup field.
func (o *IdmapCreate0Options) SetBindPathGroup(v string) {
	o.BindPathGroup = &v
}

// GetUserCn returns the UserCn field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetUserCn() bool {
	if o == nil || o.UserCn == nil {
		var ret bool
		return ret
	}
	return *o.UserCn
}

// GetUserCnOk returns a tuple with the UserCn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetUserCnOk() (*bool, bool) {
	if o == nil || o.UserCn == nil {
		return nil, false
	}
	return o.UserCn, true
}

// HasUserCn returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasUserCn() bool {
	if o != nil && o.UserCn != nil {
		return true
	}

	return false
}

// SetUserCn gets a reference to the given bool and assigns it to the UserCn field.
func (o *IdmapCreate0Options) SetUserCn(v bool) {
	o.UserCn = &v
}

// GetCnRealm returns the CnRealm field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetCnRealm() string {
	if o == nil || o.CnRealm == nil {
		var ret string
		return ret
	}
	return *o.CnRealm
}

// GetCnRealmOk returns a tuple with the CnRealm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetCnRealmOk() (*string, bool) {
	if o == nil || o.CnRealm == nil {
		return nil, false
	}
	return o.CnRealm, true
}

// HasCnRealm returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasCnRealm() bool {
	if o != nil && o.CnRealm != nil {
		return true
	}

	return false
}

// SetCnRealm gets a reference to the given string and assigns it to the CnRealm field.
func (o *IdmapCreate0Options) SetCnRealm(v string) {
	o.CnRealm = &v
}

// GetLdapDomain returns the LdapDomain field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetLdapDomain() string {
	if o == nil || o.LdapDomain == nil {
		var ret string
		return ret
	}
	return *o.LdapDomain
}

// GetLdapDomainOk returns a tuple with the LdapDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetLdapDomainOk() (*string, bool) {
	if o == nil || o.LdapDomain == nil {
		return nil, false
	}
	return o.LdapDomain, true
}

// HasLdapDomain returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasLdapDomain() bool {
	if o != nil && o.LdapDomain != nil {
		return true
	}

	return false
}

// SetLdapDomain gets a reference to the given string and assigns it to the LdapDomain field.
func (o *IdmapCreate0Options) SetLdapDomain(v string) {
	o.LdapDomain = &v
}

// GetSssdCompat returns the SssdCompat field value if set, zero value otherwise.
func (o *IdmapCreate0Options) GetSssdCompat() bool {
	if o == nil || o.SssdCompat == nil {
		var ret bool
		return ret
	}
	return *o.SssdCompat
}

// GetSssdCompatOk returns a tuple with the SssdCompat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapCreate0Options) GetSssdCompatOk() (*bool, bool) {
	if o == nil || o.SssdCompat == nil {
		return nil, false
	}
	return o.SssdCompat, true
}

// HasSssdCompat returns a boolean if a field has been set.
func (o *IdmapCreate0Options) HasSssdCompat() bool {
	if o != nil && o.SssdCompat != nil {
		return true
	}

	return false
}

// SetSssdCompat gets a reference to the given bool and assigns it to the SssdCompat field.
func (o *IdmapCreate0Options) SetSssdCompat(v bool) {
	o.SssdCompat = &v
}

func (o IdmapCreate0Options) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SchemaMode != nil {
		toSerialize["schema_mode"] = o.SchemaMode
	}
	if o.UnixPrimaryGroup != nil {
		toSerialize["unix_primary_group"] = o.UnixPrimaryGroup
	}
	if o.UnixNssInfo != nil {
		toSerialize["unix_nss_info"] = o.UnixNssInfo
	}
	if o.Rangesize != nil {
		toSerialize["rangesize"] = o.Rangesize
	}
	if o.Readonly != nil {
		toSerialize["readonly"] = o.Readonly
	}
	if o.IgnoreBuiltin != nil {
		toSerialize["ignore_builtin"] = o.IgnoreBuiltin
	}
	if o.LdapBaseDn != nil {
		toSerialize["ldap_base_dn"] = o.LdapBaseDn
	}
	if o.LdapUserDn != nil {
		toSerialize["ldap_user_dn"] = o.LdapUserDn
	}
	if o.LdapUserDnPassword != nil {
		toSerialize["ldap_user_dn_password"] = o.LdapUserDnPassword
	}
	if o.LdapUrl != nil {
		toSerialize["ldap_url"] = o.LdapUrl
	}
	if o.Ssl != nil {
		toSerialize["ssl"] = o.Ssl
	}
	if o.LinkedService != nil {
		toSerialize["linked_service"] = o.LinkedService
	}
	if o.LdapServer != nil {
		toSerialize["ldap_server"] = o.LdapServer
	}
	if o.LdapRealm != nil {
		toSerialize["ldap_realm"] = o.LdapRealm
	}
	if o.BindPathUser != nil {
		toSerialize["bind_path_user"] = o.BindPathUser
	}
	if o.BindPathGroup != nil {
		toSerialize["bind_path_group"] = o.BindPathGroup
	}
	if o.UserCn != nil {
		toSerialize["user_cn"] = o.UserCn
	}
	if o.CnRealm != nil {
		toSerialize["cn_realm"] = o.CnRealm
	}
	if o.LdapDomain != nil {
		toSerialize["ldap_domain"] = o.LdapDomain
	}
	if o.SssdCompat != nil {
		toSerialize["sssd_compat"] = o.SssdCompat
	}
	return json.Marshal(toSerialize)
}

type NullableIdmapCreate0Options struct {
	value *IdmapCreate0Options
	isSet bool
}

func (v NullableIdmapCreate0Options) Get() *IdmapCreate0Options {
	return v.value
}

func (v *NullableIdmapCreate0Options) Set(val *IdmapCreate0Options) {
	v.value = val
	v.isSet = true
}

func (v NullableIdmapCreate0Options) IsSet() bool {
	return v.isSet
}

func (v *NullableIdmapCreate0Options) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdmapCreate0Options(val *IdmapCreate0Options) *NullableIdmapCreate0Options {
	return &NullableIdmapCreate0Options{value: val, isSet: true}
}

func (v NullableIdmapCreate0Options) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdmapCreate0Options) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
