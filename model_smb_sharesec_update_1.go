/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// SmbSharesecUpdate1 struct for SmbSharesecUpdate1
type SmbSharesecUpdate1 struct {
	ShareAcl []map[string]interface{} `json:"share_acl,omitempty"`
}

// NewSmbSharesecUpdate1 instantiates a new SmbSharesecUpdate1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmbSharesecUpdate1() *SmbSharesecUpdate1 {
	this := SmbSharesecUpdate1{}
	return &this
}

// NewSmbSharesecUpdate1WithDefaults instantiates a new SmbSharesecUpdate1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmbSharesecUpdate1WithDefaults() *SmbSharesecUpdate1 {
	this := SmbSharesecUpdate1{}
	return &this
}

// GetShareAcl returns the ShareAcl field value if set, zero value otherwise.
func (o *SmbSharesecUpdate1) GetShareAcl() []map[string]interface{} {
	if o == nil || o.ShareAcl == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.ShareAcl
}

// GetShareAclOk returns a tuple with the ShareAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmbSharesecUpdate1) GetShareAclOk() ([]map[string]interface{}, bool) {
	if o == nil || o.ShareAcl == nil {
		return nil, false
	}
	return o.ShareAcl, true
}

// HasShareAcl returns a boolean if a field has been set.
func (o *SmbSharesecUpdate1) HasShareAcl() bool {
	if o != nil && o.ShareAcl != nil {
		return true
	}

	return false
}

// SetShareAcl gets a reference to the given []map[string]interface{} and assigns it to the ShareAcl field.
func (o *SmbSharesecUpdate1) SetShareAcl(v []map[string]interface{}) {
	o.ShareAcl = v
}

func (o SmbSharesecUpdate1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ShareAcl != nil {
		toSerialize["share_acl"] = o.ShareAcl
	}
	return json.Marshal(toSerialize)
}

type NullableSmbSharesecUpdate1 struct {
	value *SmbSharesecUpdate1
	isSet bool
}

func (v NullableSmbSharesecUpdate1) Get() *SmbSharesecUpdate1 {
	return v.value
}

func (v *NullableSmbSharesecUpdate1) Set(val *SmbSharesecUpdate1) {
	v.value = val
	v.isSet = true
}

func (v NullableSmbSharesecUpdate1) IsSet() bool {
	return v.isSet
}

func (v *NullableSmbSharesecUpdate1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmbSharesecUpdate1(val *SmbSharesecUpdate1) *NullableSmbSharesecUpdate1 {
	return &NullableSmbSharesecUpdate1{value: val, isSet: true}
}

func (v NullableSmbSharesecUpdate1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmbSharesecUpdate1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
