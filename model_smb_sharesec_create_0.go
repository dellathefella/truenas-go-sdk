/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// SmbSharesecCreate0 struct for SmbSharesecCreate0
type SmbSharesecCreate0 struct {
	ShareName *string                  `json:"share_name,omitempty"`
	ShareAcl  []map[string]interface{} `json:"share_acl,omitempty"`
}

// NewSmbSharesecCreate0 instantiates a new SmbSharesecCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmbSharesecCreate0() *SmbSharesecCreate0 {
	this := SmbSharesecCreate0{}
	return &this
}

// NewSmbSharesecCreate0WithDefaults instantiates a new SmbSharesecCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmbSharesecCreate0WithDefaults() *SmbSharesecCreate0 {
	this := SmbSharesecCreate0{}
	return &this
}

// GetShareName returns the ShareName field value if set, zero value otherwise.
func (o *SmbSharesecCreate0) GetShareName() string {
	if o == nil || o.ShareName == nil {
		var ret string
		return ret
	}
	return *o.ShareName
}

// GetShareNameOk returns a tuple with the ShareName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmbSharesecCreate0) GetShareNameOk() (*string, bool) {
	if o == nil || o.ShareName == nil {
		return nil, false
	}
	return o.ShareName, true
}

// HasShareName returns a boolean if a field has been set.
func (o *SmbSharesecCreate0) HasShareName() bool {
	if o != nil && o.ShareName != nil {
		return true
	}

	return false
}

// SetShareName gets a reference to the given string and assigns it to the ShareName field.
func (o *SmbSharesecCreate0) SetShareName(v string) {
	o.ShareName = &v
}

// GetShareAcl returns the ShareAcl field value if set, zero value otherwise.
func (o *SmbSharesecCreate0) GetShareAcl() []map[string]interface{} {
	if o == nil || o.ShareAcl == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.ShareAcl
}

// GetShareAclOk returns a tuple with the ShareAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmbSharesecCreate0) GetShareAclOk() ([]map[string]interface{}, bool) {
	if o == nil || o.ShareAcl == nil {
		return nil, false
	}
	return o.ShareAcl, true
}

// HasShareAcl returns a boolean if a field has been set.
func (o *SmbSharesecCreate0) HasShareAcl() bool {
	if o != nil && o.ShareAcl != nil {
		return true
	}

	return false
}

// SetShareAcl gets a reference to the given []map[string]interface{} and assigns it to the ShareAcl field.
func (o *SmbSharesecCreate0) SetShareAcl(v []map[string]interface{}) {
	o.ShareAcl = v
}

func (o SmbSharesecCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ShareName != nil {
		toSerialize["share_name"] = o.ShareName
	}
	if o.ShareAcl != nil {
		toSerialize["share_acl"] = o.ShareAcl
	}
	return json.Marshal(toSerialize)
}

type NullableSmbSharesecCreate0 struct {
	value *SmbSharesecCreate0
	isSet bool
}

func (v NullableSmbSharesecCreate0) Get() *SmbSharesecCreate0 {
	return v.value
}

func (v *NullableSmbSharesecCreate0) Set(val *SmbSharesecCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableSmbSharesecCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableSmbSharesecCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmbSharesecCreate0(val *SmbSharesecCreate0) *NullableSmbSharesecCreate0 {
	return &NullableSmbSharesecCreate0{value: val, isSet: true}
}

func (v NullableSmbSharesecCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmbSharesecCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
