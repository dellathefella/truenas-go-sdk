/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dragonfish

import (
	"encoding/json"
)

// PoolExpand1 struct for PoolExpand1
type PoolExpand1 struct {
	Geli *PoolExpand1Geli `json:"geli,omitempty"`
}

// NewPoolExpand1 instantiates a new PoolExpand1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolExpand1() *PoolExpand1 {
	this := PoolExpand1{}
	return &this
}

// NewPoolExpand1WithDefaults instantiates a new PoolExpand1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolExpand1WithDefaults() *PoolExpand1 {
	this := PoolExpand1{}
	return &this
}

// GetGeli returns the Geli field value if set, zero value otherwise.
func (o *PoolExpand1) GetGeli() PoolExpand1Geli {
	if o == nil || o.Geli == nil {
		var ret PoolExpand1Geli
		return ret
	}
	return *o.Geli
}

// GetGeliOk returns a tuple with the Geli field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolExpand1) GetGeliOk() (*PoolExpand1Geli, bool) {
	if o == nil || o.Geli == nil {
		return nil, false
	}
	return o.Geli, true
}

// HasGeli returns a boolean if a field has been set.
func (o *PoolExpand1) HasGeli() bool {
	if o != nil && o.Geli != nil {
		return true
	}

	return false
}

// SetGeli gets a reference to the given PoolExpand1Geli and assigns it to the Geli field.
func (o *PoolExpand1) SetGeli(v PoolExpand1Geli) {
	o.Geli = &v
}

func (o PoolExpand1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Geli != nil {
		toSerialize["geli"] = o.Geli
	}
	return json.Marshal(toSerialize)
}

type NullablePoolExpand1 struct {
	value *PoolExpand1
	isSet bool
}

func (v NullablePoolExpand1) Get() *PoolExpand1 {
	return v.value
}

func (v *NullablePoolExpand1) Set(val *PoolExpand1) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolExpand1) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolExpand1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolExpand1(val *PoolExpand1) *NullablePoolExpand1 {
	return &NullablePoolExpand1{value: val, isSet: true}
}

func (v NullablePoolExpand1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolExpand1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
